{"version":3,"sources":["TimelinerController.js"],"names":[],"mappings":"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","file":"TimelinerController-compiled.js","sourcesContent":["/**\n * Controller class for the Timeliner GUI.\n *\n * Timeliner GUI library (required to use this class):\n *\n * \t\t../libs/timeliner_gui.min.js\n *\n * Source code:\n *\n * \t\thttps://github.com/tschw/timeliner_gui\n * \t\thttps://github.com/zz85/timeliner (fork's origin)\n *\n * @author tschw\n *\n */\n\nimport {\n\tAnimationClip,\n\tAnimationMixer,\n\tAnimationUtils,\n\tPropertyBinding\n} from \"../../../build/three.module.js\";\n\nvar TimelinerController = function TimelinerController( scene, trackInfo, onUpdate ) {\n\n\tthis._scene = scene;\n\tthis._trackInfo = trackInfo;\n\n\tthis._onUpdate = onUpdate;\n\n\tthis._mixer = new AnimationMixer( scene );\n\tthis._clip = null;\n\tthis._action = null;\n\n\tthis._tracks = {};\n\tthis._propRefs = {};\n\tthis._channelNames = [];\n\n};\n\nTimelinerController.prototype = {\n\n\tconstructor: TimelinerController,\n\n\tinit: function () {\n\n\t\tvar tracks = [],\n\t\t\ttrackInfo = this._trackInfo;\n\n\t\tfor ( var i = 0, n = trackInfo.length; i !== n; ++ i ) {\n\n\t\t\tvar spec = trackInfo[ i ];\n\n\t\t\ttracks.push( this._addTrack( spec.type, spec.propertyPath, spec.initialValue, spec.interpolation ) );\n\n\t\t}\n\n\t\tthis._clip = new AnimationClip( 'editclip', 0, tracks );\n\t\tthis._action = this._mixer.clipAction( this._clip ).play();\n\n\t},\n\n\tsetDisplayTime: function ( time ) {\n\n\t\tthis._action.time = time;\n\t\tthis._mixer.update( 0 );\n\n\t\tthis._onUpdate();\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis._clip.duration = duration;\n\n\t},\n\n\tgetChannelNames: function () {\n\n\t\treturn this._channelNames;\n\n\t},\n\n\tgetChannelKeyTimes: function ( channelName ) {\n\n\t\treturn this._tracks[ channelName ].times;\n\n\t},\n\n\tsetKeyframe: function ( channelName, time ) {\n\n\t\tvar track = this._tracks[ channelName ],\n\t\t\ttimes = track.times,\n\t\t\tindex = Timeliner.binarySearch( times, time ),\n\t\t\tvalues = track.values,\n\t\t\tstride = track.getValueSize(),\n\t\t\toffset = index * stride;\n\n\t\tif ( index < 0 ) {\n\n\t\t\t// insert new keyframe\n\n\t\t\tindex = ~ index;\n\t\t\toffset = index * stride;\n\n\t\t\tvar nTimes = times.length + 1,\n\t\t\t\tnValues = values.length + stride;\n\n\t\t\tfor ( var i = nTimes - 1; i !== index; -- i ) {\n\n\t\t\t\ttimes[ i ] = times[ i - 1 ];\n\n\t\t\t}\n\n\t\t\tfor ( var i = nValues - 1, e = offset + stride - 1; i !== e; -- i ) {\n\n\t\t\t\tvalues[ i ] = values[ i - stride ];\n\n\t\t\t}\n\n\t\t}\n\n\t\ttimes[ index ] = time;\n\t\tthis._propRefs[ channelName ].getValue( values, offset );\n\n\t},\n\n\tdelKeyframe: function ( channelName, time ) {\n\n\t\tvar track = this._tracks[ channelName ],\n\t\t\ttimes = track.times,\n\t\t\tindex = Timeliner.binarySearch( times, time );\n\n\t\t// we disallow to remove the keyframe when it is the last one we have,\n\t\t// since the animation system is designed to always produce a defined\n\t\t// state\n\n\t\tif ( times.length > 1 && index >= 0 ) {\n\n\t\t\tvar nTimes = times.length - 1,\n\t\t\t\tvalues = track.values,\n\t\t\t\tstride = track.getValueSize(),\n\t\t\t\tnValues = values.length - stride;\n\n\t\t\t// note: no track.getValueSize when array sizes are out of sync\n\n\t\t\tfor ( var i = index; i !== nTimes; ++ i ) {\n\n\t\t\t\ttimes[ i ] = times[ i + 1 ];\n\n\t\t\t}\n\n\t\t\ttimes.pop();\n\n\t\t\tfor ( var offset = index * stride; offset !== nValues; ++ offset ) {\n\n\t\t\t\tvalues[ offset ] = values[ offset + stride ];\n\n\t\t\t}\n\n\t\t\tvalues.length = nValues;\n\n\t\t}\n\n\t},\n\n\tmoveKeyframe: function ( channelName, time, delta, moveRemaining ) {\n\n\t\tvar track = this._tracks[ channelName ],\n\t\t\ttimes = track.times,\n\t\t\tindex = Timeliner.binarySearch( times, time );\n\n\t\tif ( index >= 0 ) {\n\n\t\t\tvar endAt = moveRemaining ? times.length : index + 1,\n\t\t\t\tneedsSort = times[ index - 1 ] <= time ||\n\t\t\t\t\t! moveRemaining && time >= times[ index + 1 ];\n\n\t\t\twhile ( index !== endAt ) times[ index ++ ] += delta;\n\n\t\t\tif ( needsSort ) this._sort( track );\n\n\t\t}\n\n\t},\n\n\tserialize: function () {\n\n\t\tvar result = {\n\t\t\t\tduration: this._clip.duration,\n\t\t\t\tchannels: {}\n\t\t\t},\n\n\t\t\tnames = this._channelNames,\n\t\t\ttracks = this._tracks,\n\n\t\t\tchannels = result.channels;\n\n\t\tfor ( var i = 0, n = names.length; i !== n; ++ i ) {\n\n\t\t\tvar name = names[ i ],\n\t\t\t\ttrack = tracks[ name ];\n\n\t\t\tchannels[ name ] = {\n\n\t\t\t\ttimes: track.times,\n\t\t\t\tvalues: track.values\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\tdeserialize: function ( structs ) {\n\n\t\tvar names = this._channelNames,\n\t\t\ttracks = this._tracks,\n\n\t\t\tchannels = structs.channels;\n\n\t\tthis.setDuration( structs.duration );\n\n\t\tfor ( var i = 0, n = names.length; i !== n; ++ i ) {\n\n\t\t\tvar name = names[ i ],\n\t\t\t\ttrack = tracks[ name ],\n\t\t\t\tdata = channels[ name ];\n\n\t\t\tthis._setArray( track.times, data.times );\n\t\t\tthis._setArray( track.values, data.values );\n\n\t\t}\n\n\t\t// update display\n\t\tthis.setDisplayTime( this._mixer.time );\n\n\t},\n\n\t_sort: function ( track ) {\n\n\t\tvar times = track.times, order = AnimationUtils.getKeyframeOrder( times );\n\n\t\tthis._setArray( times, AnimationUtils.sortedArray( times, 1, order ) );\n\n\t\tvar values = track.values,\n\t\t\tstride = track.getValueSize();\n\n\t\tthis._setArray( values, AnimationUtils.sortedArray( values, stride, order ) );\n\n\t},\n\n\t_setArray: function ( dst, src ) {\n\n\t\tdst.length = 0;\n\t\tdst.push.apply( dst, src );\n\n\t},\n\n\t_addTrack: function ( type, prop, initialValue, interpolation ) {\n\n\t\tvar track = new type( prop, [ 0 ], initialValue, interpolation );\n\n\t\t// data must be in JS arrays so it can be resized\n\t\ttrack.times = Array.prototype.slice.call( track.times );\n\t\ttrack.values = Array.prototype.slice.call( track.values );\n\n\t\tthis._channelNames.push( prop );\n\t\tthis._tracks[ prop ] = track;\n\n\t\t// for recording the state:\n\t\tthis._propRefs[ prop ] =\n\t\t\t\tnew PropertyBinding( this._scene, prop );\n\n\t\treturn track;\n\n\t}\n\n};\n\nexport { TimelinerController };\n"]}