{"version":3,"sources":["TDSLoader.js"],"names":[],"mappings":"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AAW,MAAf;AACA,IAAI,eAAe,MAAnB;AACA,IAAI,cAAc,MAAlB;AACA;AACA;AACA,IAAI,QAAQ,MAAZ;AACA,IAAI,eAAe,MAAnB;AACA,IAAI,eAAe,MAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,MAAhB;AACA,IAAI,WAAW,MAAf;AACA,IAAI,cAAc,MAAlB;AACA,IAAI,cAAc,MAAlB;AACA,IAAI,eAAe,MAAnB;AACA,IAAI,gBAAgB,MAApB;AACA;AACA,IAAI,mBAAmB,MAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,MAAnB;AACA;AACA,IAAI,eAAe,MAAnB;AACA,IAAI,WAAW,MAAf;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,MAApB;AACA,IAAI,aAAa,MAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,MAAlB;AACA;AACA;AACA;AACA,IAAI,cAAc,MAAlB;AACA;AACA;AACA;AACA,IAAI,cAAc,MAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,MAAlB;AACA;AACA;AACA,IAAI,iBAAiB,MAArB;AACA,IAAI,iBAAiB,MAArB;AACA,IAAI,kBAAkB,MAAtB;AACA,IAAI,kBAAkB,MAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,MAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,MAAnB;AACA,IAAI,cAAc,MAAlB;AACA;AACA,IAAI,aAAa,MAAjB;AACA,IAAI,gBAAgB,MAApB;AACA;AACA;AACA,IAAI,YAAY,MAAhB;AACA,IAAI,cAAc,MAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,SAAT","file":"TDSLoader-compiled.js","sourcesContent":["/**\n * Autodesk 3DS three.js file loader, based on lib3ds.\n *\n * Loads geometry with uv and materials basic properties with texture support.\n *\n * @author @tentone\n * @author @timknip\n * @class TDSLoader\n * @constructor\n */\n\nimport {\n\tAdditiveBlending,\n\tBufferGeometry,\n\tColor,\n\tDoubleSide,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLoader,\n\tLoaderUtils,\n\tMatrix4,\n\tMesh,\n\tMeshPhongMaterial,\n\tTextureLoader\n} from \"../../../build/three.module.js\";\n\nvar TDSLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.debug = false;\n\n\tthis.group = null;\n\tthis.position = 0;\n\n\tthis.materials = [];\n\tthis.meshes = [];\n\n};\n\nTDSLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: TDSLoader,\n\n\t/**\n\t * Load 3ds file from url.\n\t *\n\t * @method load\n\t * @param {[type]} url URL for the file.\n\t * @param {Function} onLoad onLoad callback, receives group Object3D as argument.\n\t * @param {Function} onProgress onProgress callback.\n\t * @param {Function} onError onError callback.\n\t */\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( data ) {\n\n\t\t\tonLoad( scope.parse( data, path ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/**\n\t * Parse arraybuffer data and load 3ds file.\n\t *\n\t * @method parse\n\t * @param {ArrayBuffer} arraybuffer Arraybuffer data to be loaded.\n\t * @param {String} path Path for external resources.\n\t * @return {Group} Group loaded from 3ds file.\n\t */\n\tparse: function ( arraybuffer, path ) {\n\n\t\tthis.group = new Group();\n\t\tthis.position = 0;\n\t\tthis.materials = [];\n\t\tthis.meshes = [];\n\n\t\tthis.readFile( arraybuffer, path );\n\n\t\tfor ( var i = 0; i < this.meshes.length; i ++ ) {\n\n\t\t\tthis.group.add( this.meshes[ i ] );\n\n\t\t}\n\n\t\treturn this.group;\n\n\t},\n\n\t/**\n\t * Decode file content to read 3ds data.\n\t *\n\t * @method readFile\n\t * @param {ArrayBuffer} arraybuffer Arraybuffer data to be loaded.\n\t * @param {String} path Path for external resources.\n\t */\n\treadFile: function ( arraybuffer, path ) {\n\n\t\tvar data = new DataView( arraybuffer );\n\t\tvar chunk = this.readChunk( data );\n\n\t\tif ( chunk.id === MLIBMAGIC || chunk.id === CMAGIC || chunk.id === M3DMAGIC ) {\n\n\t\t\tvar next = this.nextChunk( data, chunk );\n\n\t\t\twhile ( next !== 0 ) {\n\n\t\t\t\tif ( next === M3D_VERSION ) {\n\n\t\t\t\t\tvar version = this.readDWord( data );\n\t\t\t\t\tthis.debugMessage( '3DS file version: ' + version );\n\n\t\t\t\t} else if ( next === MDATA ) {\n\n\t\t\t\t\tthis.resetPosition( data );\n\t\t\t\t\tthis.readMeshData( data, path );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.debugMessage( 'Unknown main chunk: ' + next.toString( 16 ) );\n\n\t\t\t\t}\n\n\t\t\t\tnext = this.nextChunk( data, chunk );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.debugMessage( 'Parsed ' + this.meshes.length + ' meshes' );\n\n\t},\n\n\t/**\n\t * Read mesh data chunk.\n\t *\n\t * @method readMeshData\n\t * @param {Dataview} data Dataview in use.\n\t * @param {String} path Path for external resources.\n\t */\n\treadMeshData: function ( data, path ) {\n\n\t\tvar chunk = this.readChunk( data );\n\t\tvar next = this.nextChunk( data, chunk );\n\n\t\twhile ( next !== 0 ) {\n\n\t\t\tif ( next === MESH_VERSION ) {\n\n\t\t\t\tvar version = + this.readDWord( data );\n\t\t\t\tthis.debugMessage( 'Mesh Version: ' + version );\n\n\t\t\t} else if ( next === MASTER_SCALE ) {\n\n\t\t\t\tvar scale = this.readFloat( data );\n\t\t\t\tthis.debugMessage( 'Master scale: ' + scale );\n\t\t\t\tthis.group.scale.set( scale, scale, scale );\n\n\t\t\t} else if ( next === NAMED_OBJECT ) {\n\n\t\t\t\tthis.debugMessage( 'Named Object' );\n\t\t\t\tthis.resetPosition( data );\n\t\t\t\tthis.readNamedObject( data );\n\n\t\t\t} else if ( next === MAT_ENTRY ) {\n\n\t\t\t\tthis.debugMessage( 'Material' );\n\t\t\t\tthis.resetPosition( data );\n\t\t\t\tthis.readMaterialEntry( data, path );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( 'Unknown MDATA chunk: ' + next.toString( 16 ) );\n\n\t\t\t}\n\n\t\t\tnext = this.nextChunk( data, chunk );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Read named object chunk.\n\t *\n\t * @method readNamedObject\n\t * @param {Dataview} data Dataview in use.\n\t */\n\treadNamedObject: function ( data ) {\n\n\t\tvar chunk = this.readChunk( data );\n\t\tvar name = this.readString( data, 64 );\n\t\tchunk.cur = this.position;\n\n\t\tvar next = this.nextChunk( data, chunk );\n\t\twhile ( next !== 0 ) {\n\n\t\t\tif ( next === N_TRI_OBJECT ) {\n\n\t\t\t\tthis.resetPosition( data );\n\t\t\t\tvar mesh = this.readMesh( data );\n\t\t\t\tmesh.name = name;\n\t\t\t\tthis.meshes.push( mesh );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( 'Unknown named object chunk: ' + next.toString( 16 ) );\n\n\t\t\t}\n\n\t\t\tnext = this.nextChunk( data, chunk );\n\n\t\t}\n\n\t\tthis.endChunk( chunk );\n\n\t},\n\n\t/**\n\t * Read material data chunk and add it to the material list.\n\t *\n\t * @method readMaterialEntry\n\t * @param {Dataview} data Dataview in use.\n\t * @param {String} path Path for external resources.\n\t */\n\treadMaterialEntry: function ( data, path ) {\n\n\t\tvar chunk = this.readChunk( data );\n\t\tvar next = this.nextChunk( data, chunk );\n\t\tvar material = new MeshPhongMaterial();\n\n\t\twhile ( next !== 0 ) {\n\n\t\t\tif ( next === MAT_NAME ) {\n\n\t\t\t\tmaterial.name = this.readString( data, 64 );\n\t\t\t\tthis.debugMessage( '   Name: ' + material.name );\n\n\t\t\t} else if ( next === MAT_WIRE ) {\n\n\t\t\t\tthis.debugMessage( '   Wireframe' );\n\t\t\t\tmaterial.wireframe = true;\n\n\t\t\t} else if ( next === MAT_WIRE_SIZE ) {\n\n\t\t\t\tvar value = this.readByte( data );\n\t\t\t\tmaterial.wireframeLinewidth = value;\n\t\t\t\tthis.debugMessage( '   Wireframe Thickness: ' + value );\n\n\t\t\t} else if ( next === MAT_TWO_SIDE ) {\n\n\t\t\t\tmaterial.side = DoubleSide;\n\t\t\t\tthis.debugMessage( '   DoubleSided' );\n\n\t\t\t} else if ( next === MAT_ADDITIVE ) {\n\n\t\t\t\tthis.debugMessage( '   Additive Blending' );\n\t\t\t\tmaterial.blending = AdditiveBlending;\n\n\t\t\t} else if ( next === MAT_DIFFUSE ) {\n\n\t\t\t\tthis.debugMessage( '   Diffuse Color' );\n\t\t\t\tmaterial.color = this.readColor( data );\n\n\t\t\t} else if ( next === MAT_SPECULAR ) {\n\n\t\t\t\tthis.debugMessage( '   Specular Color' );\n\t\t\t\tmaterial.specular = this.readColor( data );\n\n\t\t\t} else if ( next === MAT_AMBIENT ) {\n\n\t\t\t\tthis.debugMessage( '   Ambient color' );\n\t\t\t\tmaterial.color = this.readColor( data );\n\n\t\t\t} else if ( next === MAT_SHININESS ) {\n\n\t\t\t\tvar shininess = this.readWord( data );\n\t\t\t\tmaterial.shininess = shininess;\n\t\t\t\tthis.debugMessage( '   Shininess : ' + shininess );\n\n\t\t\t} else if ( next === MAT_TRANSPARENCY ) {\n\n\t\t\t\tvar opacity = this.readWord( data );\n\t\t\t\tmaterial.opacity = opacity * 0.01;\n\t\t\t\tthis.debugMessage( '  Opacity : ' + opacity );\n\t\t\t\tmaterial.transparent = opacity < 100 ? true : false;\n\n\t\t\t} else if ( next === MAT_TEXMAP ) {\n\n\t\t\t\tthis.debugMessage( '   ColorMap' );\n\t\t\t\tthis.resetPosition( data );\n\t\t\t\tmaterial.map = this.readMap( data, path );\n\n\t\t\t} else if ( next === MAT_BUMPMAP ) {\n\n\t\t\t\tthis.debugMessage( '   BumpMap' );\n\t\t\t\tthis.resetPosition( data );\n\t\t\t\tmaterial.bumpMap = this.readMap( data, path );\n\n\t\t\t} else if ( next === MAT_OPACMAP ) {\n\n\t\t\t\tthis.debugMessage( '   OpacityMap' );\n\t\t\t\tthis.resetPosition( data );\n\t\t\t\tmaterial.alphaMap = this.readMap( data, path );\n\n\t\t\t} else if ( next === MAT_SPECMAP ) {\n\n\t\t\t\tthis.debugMessage( '   SpecularMap' );\n\t\t\t\tthis.resetPosition( data );\n\t\t\t\tmaterial.specularMap = this.readMap( data, path );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( '   Unknown material chunk: ' + next.toString( 16 ) );\n\n\t\t\t}\n\n\t\t\tnext = this.nextChunk( data, chunk );\n\n\t\t}\n\n\t\tthis.endChunk( chunk );\n\n\t\tthis.materials[ material.name ] = material;\n\n\t},\n\n\t/**\n\t * Read mesh data chunk.\n\t *\n\t * @method readMesh\n\t * @param {Dataview} data Dataview in use.\n\t * @return {Mesh} The parsed mesh.\n\t */\n\treadMesh: function ( data ) {\n\n\t\tvar chunk = this.readChunk( data );\n\t\tvar next = this.nextChunk( data, chunk );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar uvs = [];\n\n\t\tvar material = new MeshPhongMaterial();\n\t\tvar mesh = new Mesh( geometry, material );\n\t\tmesh.name = 'mesh';\n\n\t\twhile ( next !== 0 ) {\n\n\t\t\tif ( next === POINT_ARRAY ) {\n\n\t\t\t\tvar points = this.readWord( data );\n\n\t\t\t\tthis.debugMessage( '   Vertex: ' + points );\n\n\t\t\t\t//BufferGeometry\n\n\t\t\t\tvar vertices = [];\n\n\t\t\t\tfor ( var i = 0; i < points; i ++ )\t\t{\n\n\t\t\t\t\tvertices.push( this.readFloat( data ) );\n\t\t\t\t\tvertices.push( this.readFloat( data ) );\n\t\t\t\t\tvertices.push( this.readFloat( data ) );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t\t} else if ( next === FACE_ARRAY ) {\n\n\t\t\t\tthis.resetPosition( data );\n\t\t\t\tthis.readFaceArray( data, mesh );\n\n\t\t\t} else if ( next === TEX_VERTS ) {\n\n\t\t\t\tvar texels = this.readWord( data );\n\n\t\t\t\tthis.debugMessage( '   UV: ' + texels );\n\n\t\t\t\t//BufferGeometry\n\n\t\t\t\tvar uvs = [];\n\n\t\t\t\tfor ( var i = 0; i < texels; i ++ )\t\t{\n\n\t\t\t\t\tuvs.push( this.readFloat( data ) );\n\t\t\t\t\tuvs.push( this.readFloat( data ) );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t\t} else if ( next === MESH_MATRIX ) {\n\n\t\t\t\tthis.debugMessage( '   Tranformation Matrix (TODO)' );\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var i = 0; i < 12; i ++ ) {\n\n\t\t\t\t\tvalues[ i ] = this.readFloat( data );\n\n\t\t\t\t}\n\n\t\t\t\tvar matrix = new Matrix4();\n\n\t\t\t\t//X Line\n\t\t\t\tmatrix.elements[ 0 ] = values[ 0 ];\n\t\t\t\tmatrix.elements[ 1 ] = values[ 6 ];\n\t\t\t\tmatrix.elements[ 2 ] = values[ 3 ];\n\t\t\t\tmatrix.elements[ 3 ] = values[ 9 ];\n\n\t\t\t\t//Y Line\n\t\t\t\tmatrix.elements[ 4 ] = values[ 2 ];\n\t\t\t\tmatrix.elements[ 5 ] = values[ 8 ];\n\t\t\t\tmatrix.elements[ 6 ] = values[ 5 ];\n\t\t\t\tmatrix.elements[ 7 ] = values[ 11 ];\n\n\t\t\t\t//Z Line\n\t\t\t\tmatrix.elements[ 8 ] = values[ 1 ];\n\t\t\t\tmatrix.elements[ 9 ] = values[ 7 ];\n\t\t\t\tmatrix.elements[ 10 ] = values[ 4 ];\n\t\t\t\tmatrix.elements[ 11 ] = values[ 10 ];\n\n\t\t\t\t//W Line\n\t\t\t\tmatrix.elements[ 12 ] = 0;\n\t\t\t\tmatrix.elements[ 13 ] = 0;\n\t\t\t\tmatrix.elements[ 14 ] = 0;\n\t\t\t\tmatrix.elements[ 15 ] = 1;\n\n\t\t\t\tmatrix.transpose();\n\n\t\t\t\tvar inverse = new Matrix4();\n\t\t\t\tinverse.getInverse( matrix, true );\n\t\t\t\tgeometry.applyMatrix( inverse );\n\n\t\t\t\tmatrix.decompose( mesh.position, mesh.quaternion, mesh.scale );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( '   Unknown mesh chunk: ' + next.toString( 16 ) );\n\n\t\t\t}\n\n\t\t\tnext = this.nextChunk( data, chunk );\n\n\t\t}\n\n\t\tthis.endChunk( chunk );\n\n\t\tgeometry.computeVertexNormals();\n\n\t\treturn mesh;\n\n\t},\n\n\t/**\n\t * Read face array data chunk.\n\t *\n\t * @method readFaceArray\n\t * @param {Dataview} data Dataview in use.\n\t * @param {Mesh} mesh Mesh to be filled with the data read.\n\t */\n\treadFaceArray: function ( data, mesh ) {\n\n\t\tvar chunk = this.readChunk( data );\n\t\tvar faces = this.readWord( data );\n\n\t\tthis.debugMessage( '   Faces: ' + faces );\n\n\t\tvar index = [];\n\n\t\tfor ( var i = 0; i < faces; ++ i ) {\n\n\t\t\tindex.push( this.readWord( data ), this.readWord( data ), this.readWord( data ) );\n\n\t\t\tthis.readWord( data ); // visibility\n\n\t\t}\n\n\t\tmesh.geometry.setIndex( index );\n\n\t\t//The rest of the FACE_ARRAY chunk is subchunks\n\n\t\twhile ( this.position < chunk.end ) {\n\n\t\t\tvar chunk = this.readChunk( data );\n\n\t\t\tif ( chunk.id === MSH_MAT_GROUP ) {\n\n\t\t\t\tthis.debugMessage( '      Material Group' );\n\n\t\t\t\tthis.resetPosition( data );\n\n\t\t\t\tvar group = this.readMaterialGroup( data );\n\n\t\t\t\tvar material = this.materials[ group.name ];\n\n\t\t\t\tif ( material !== undefined )\t{\n\n\t\t\t\t\tmesh.material = material;\n\n\t\t\t\t\tif ( material.name === '' )\t\t{\n\n\t\t\t\t\t\tmaterial.name = mesh.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( '      Unknown face array chunk: ' + chunk.toString( 16 ) );\n\n\t\t\t}\n\n\t\t\tthis.endChunk( chunk );\n\n\t\t}\n\n\t\tthis.endChunk( chunk );\n\n\t},\n\n\t/**\n\t * Read texture map data chunk.\n\t *\n\t * @method readMap\n\t * @param {Dataview} data Dataview in use.\n\t * @param {String} path Path for external resources.\n\t * @return {Texture} Texture read from this data chunk.\n\t */\n\treadMap: function ( data, path ) {\n\n\t\tvar chunk = this.readChunk( data );\n\t\tvar next = this.nextChunk( data, chunk );\n\t\tvar texture = {};\n\n\t\tvar loader = new TextureLoader( this.manager );\n\t\tloader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\twhile ( next !== 0 ) {\n\n\t\t\tif ( next === MAT_MAPNAME ) {\n\n\t\t\t\tvar name = this.readString( data, 128 );\n\t\t\t\ttexture = loader.load( name );\n\n\t\t\t\tthis.debugMessage( '      File: ' + path + name );\n\n\t\t\t} else if ( next === MAT_MAP_UOFFSET ) {\n\n\t\t\t\ttexture.offset.x = this.readFloat( data );\n\t\t\t\tthis.debugMessage( '      OffsetX: ' + texture.offset.x );\n\n\t\t\t} else if ( next === MAT_MAP_VOFFSET ) {\n\n\t\t\t\ttexture.offset.y = this.readFloat( data );\n\t\t\t\tthis.debugMessage( '      OffsetY: ' + texture.offset.y );\n\n\t\t\t} else if ( next === MAT_MAP_USCALE ) {\n\n\t\t\t\ttexture.repeat.x = this.readFloat( data );\n\t\t\t\tthis.debugMessage( '      RepeatX: ' + texture.repeat.x );\n\n\t\t\t} else if ( next === MAT_MAP_VSCALE ) {\n\n\t\t\t\ttexture.repeat.y = this.readFloat( data );\n\t\t\t\tthis.debugMessage( '      RepeatY: ' + texture.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( '      Unknown map chunk: ' + next.toString( 16 ) );\n\n\t\t\t}\n\n\t\t\tnext = this.nextChunk( data, chunk );\n\n\t\t}\n\n\t\tthis.endChunk( chunk );\n\n\t\treturn texture;\n\n\t},\n\n\t/**\n\t * Read material group data chunk.\n\t *\n\t * @method readMaterialGroup\n\t * @param {Dataview} data Dataview in use.\n\t * @return {Object} Object with name and index of the object.\n\t */\n\treadMaterialGroup: function ( data ) {\n\n\t\tthis.readChunk( data );\n\t\tvar name = this.readString( data, 64 );\n\t\tvar numFaces = this.readWord( data );\n\n\t\tthis.debugMessage( '         Name: ' + name );\n\t\tthis.debugMessage( '         Faces: ' + numFaces );\n\n\t\tvar index = [];\n\t\tfor ( var i = 0; i < numFaces; ++ i ) {\n\n\t\t\tindex.push( this.readWord( data ) );\n\n\t\t}\n\n\t\treturn { name: name, index: index };\n\n\t},\n\n\t/**\n\t * Read a color value.\n\t *\n\t * @method readColor\n\t * @param {DataView} data Dataview.\n\t * @return {Color} Color value read..\n\t */\n\treadColor: function ( data ) {\n\n\t\tvar chunk = this.readChunk( data );\n\t\tvar color = new Color();\n\n\t\tif ( chunk.id === COLOR_24 || chunk.id === LIN_COLOR_24 ) {\n\n\t\t\tvar r = this.readByte( data );\n\t\t\tvar g = this.readByte( data );\n\t\t\tvar b = this.readByte( data );\n\n\t\t\tcolor.setRGB( r / 255, g / 255, b / 255 );\n\n\t\t\tthis.debugMessage( '      Color: ' + color.r + ', ' + color.g + ', ' + color.b );\n\n\t\t}\telse if ( chunk.id === COLOR_F || chunk.id === LIN_COLOR_F ) {\n\n\t\t\tvar r = this.readFloat( data );\n\t\t\tvar g = this.readFloat( data );\n\t\t\tvar b = this.readFloat( data );\n\n\t\t\tcolor.setRGB( r, g, b );\n\n\t\t\tthis.debugMessage( '      Color: ' + color.r + ', ' + color.g + ', ' + color.b );\n\n\t\t}\telse {\n\n\t\t\tthis.debugMessage( '      Unknown color chunk: ' + chunk.toString( 16 ) );\n\n\t\t}\n\n\t\tthis.endChunk( chunk );\n\t\treturn color;\n\n\t},\n\n\t/**\n\t * Read next chunk of data.\n\t *\n\t * @method readChunk\n\t * @param {DataView} data Dataview.\n\t * @return {Object} Chunk of data read.\n\t */\n\treadChunk: function ( data ) {\n\n\t\tvar chunk = {};\n\n\t\tchunk.cur = this.position;\n\t\tchunk.id = this.readWord( data );\n\t\tchunk.size = this.readDWord( data );\n\t\tchunk.end = chunk.cur + chunk.size;\n\t\tchunk.cur += 6;\n\n\t\treturn chunk;\n\n\t},\n\n\t/**\n\t * Set position to the end of the current chunk of data.\n\t *\n\t * @method endChunk\n\t * @param {Object} chunk Data chunk.\n\t */\n\tendChunk: function ( chunk ) {\n\n\t\tthis.position = chunk.end;\n\n\t},\n\n\t/**\n\t * Move to the next data chunk.\n\t *\n\t * @method nextChunk\n\t * @param {DataView} data Dataview.\n\t * @param {Object} chunk Data chunk.\n\t */\n\tnextChunk: function ( data, chunk ) {\n\n\t\tif ( chunk.cur >= chunk.end ) {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tthis.position = chunk.cur;\n\n\t\ttry {\n\n\t\t\tvar next = this.readChunk( data );\n\t\t\tchunk.cur += next.size;\n\t\t\treturn next.id;\n\n\t\t}\tcatch ( e ) {\n\n\t\t\tthis.debugMessage( 'Unable to read chunk at ' + this.position );\n\t\t\treturn 0;\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Reset dataview position.\n\t *\n\t * @method resetPosition\n\t */\n\tresetPosition: function () {\n\n\t\tthis.position -= 6;\n\n\t},\n\n\t/**\n\t * Read byte value.\n\t *\n\t * @method readByte\n\t * @param {DataView} data Dataview to read data from.\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadByte: function ( data ) {\n\n\t\tvar v = data.getUint8( this.position, true );\n\t\tthis.position += 1;\n\t\treturn v;\n\n\t},\n\n\t/**\n\t * Read 32 bit float value.\n\t *\n\t * @method readFloat\n\t * @param {DataView} data Dataview to read data from.\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadFloat: function ( data ) {\n\n\t\ttry {\n\n\t\t\tvar v = data.getFloat32( this.position, true );\n\t\t\tthis.position += 4;\n\t\t\treturn v;\n\n\t\t}\tcatch ( e ) {\n\n\t\t\tthis.debugMessage( e + ' ' + this.position + ' ' + data.byteLength );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Read 32 bit signed integer value.\n\t *\n\t * @method readInt\n\t * @param {DataView} data Dataview to read data from.\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadInt: function ( data ) {\n\n\t\tvar v = data.getInt32( this.position, true );\n\t\tthis.position += 4;\n\t\treturn v;\n\n\t},\n\n\t/**\n\t * Read 16 bit signed integer value.\n\t *\n\t * @method readShort\n\t * @param {DataView} data Dataview to read data from.\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadShort: function ( data ) {\n\n\t\tvar v = data.getInt16( this.position, true );\n\t\tthis.position += 2;\n\t\treturn v;\n\n\t},\n\n\t/**\n\t * Read 64 bit unsigned integer value.\n\t *\n\t * @method readDWord\n\t * @param {DataView} data Dataview to read data from.\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadDWord: function ( data ) {\n\n\t\tvar v = data.getUint32( this.position, true );\n\t\tthis.position += 4;\n\t\treturn v;\n\n\t},\n\n\t/**\n\t * Read 32 bit unsigned integer value.\n\t *\n\t * @method readWord\n\t * @param {DataView} data Dataview to read data from.\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadWord: function ( data ) {\n\n\t\tvar v = data.getUint16( this.position, true );\n\t\tthis.position += 2;\n\t\treturn v;\n\n\t},\n\n\t/**\n\t * Read string value.\n\t *\n\t * @method readString\n\t * @param {DataView} data Dataview to read data from.\n\t * @param {Number} maxLength Max size of the string to be read.\n\t * @return {String} Data read from the dataview.\n\t */\n\treadString: function ( data, maxLength ) {\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0; i < maxLength; i ++ ) {\n\n\t\t\tvar c = this.readByte( data );\n\t\t\tif ( ! c ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\ts += String.fromCharCode( c );\n\n\t\t}\n\n\t\treturn s;\n\n\t},\n\n\t/**\n\t * Print debug message to the console.\n\t *\n\t * Is controlled by a flag to show or hide debug messages.\n\t *\n\t * @method debugMessage\n\t * @param {Object} message Debug message to print to the console.\n\t */\n\tdebugMessage: function ( message ) {\n\n\t\tif ( this.debug ) {\n\n\t\t\tconsole.log( message );\n\n\t\t}\n\n\t}\n\n} );\n\n// var NULL_CHUNK = 0x0000;\nvar M3DMAGIC = 0x4D4D;\n// var SMAGIC = 0x2D2D;\n// var LMAGIC = 0x2D3D;\nvar MLIBMAGIC = 0x3DAA;\n// var MATMAGIC = 0x3DFF;\nvar CMAGIC = 0xC23D;\nvar M3D_VERSION = 0x0002;\n// var M3D_KFVERSION = 0x0005;\nvar COLOR_F = 0x0010;\nvar COLOR_24 = 0x0011;\nvar LIN_COLOR_24 = 0x0012;\nvar LIN_COLOR_F = 0x0013;\n// var INT_PERCENTAGE = 0x0030;\n// var FLOAT_PERCENTAGE = 0x0031;\nvar MDATA = 0x3D3D;\nvar MESH_VERSION = 0x3D3E;\nvar MASTER_SCALE = 0x0100;\n// var LO_SHADOW_BIAS = 0x1400;\n// var HI_SHADOW_BIAS = 0x1410;\n// var SHADOW_MAP_SIZE = 0x1420;\n// var SHADOW_SAMPLES = 0x1430;\n// var SHADOW_RANGE = 0x1440;\n// var SHADOW_FILTER = 0x1450;\n// var RAY_BIAS = 0x1460;\n// var O_CONSTS = 0x1500;\n// var AMBIENT_LIGHT = 0x2100;\n// var BIT_MAP = 0x1100;\n// var SOLID_BGND = 0x1200;\n// var V_GRADIENT = 0x1300;\n// var USE_BIT_MAP = 0x1101;\n// var USE_SOLID_BGND = 0x1201;\n// var USE_V_GRADIENT = 0x1301;\n// var FOG = 0x2200;\n// var FOG_BGND = 0x2210;\n// var LAYER_FOG = 0x2302;\n// var DISTANCE_CUE = 0x2300;\n// var DCUE_BGND = 0x2310;\n// var USE_FOG = 0x2201;\n// var USE_LAYER_FOG = 0x2303;\n// var USE_DISTANCE_CUE = 0x2301;\nvar MAT_ENTRY = 0xAFFF;\nvar MAT_NAME = 0xA000;\nvar MAT_AMBIENT = 0xA010;\nvar MAT_DIFFUSE = 0xA020;\nvar MAT_SPECULAR = 0xA030;\nvar MAT_SHININESS = 0xA040;\n// var MAT_SHIN2PCT = 0xA041;\nvar MAT_TRANSPARENCY = 0xA050;\n// var MAT_XPFALL = 0xA052;\n// var MAT_USE_XPFALL = 0xA240;\n// var MAT_REFBLUR = 0xA053;\n// var MAT_SHADING = 0xA100;\n// var MAT_USE_REFBLUR = 0xA250;\n// var MAT_SELF_ILLUM = 0xA084;\nvar MAT_TWO_SIDE = 0xA081;\n// var MAT_DECAL = 0xA082;\nvar MAT_ADDITIVE = 0xA083;\nvar MAT_WIRE = 0xA085;\n// var MAT_FACEMAP = 0xA088;\n// var MAT_TRANSFALLOFF_IN = 0xA08A;\n// var MAT_PHONGSOFT = 0xA08C;\n// var MAT_WIREABS = 0xA08E;\nvar MAT_WIRE_SIZE = 0xA087;\nvar MAT_TEXMAP = 0xA200;\n// var MAT_SXP_TEXT_DATA = 0xA320;\n// var MAT_TEXMASK = 0xA33E;\n// var MAT_SXP_TEXTMASK_DATA = 0xA32A;\n// var MAT_TEX2MAP = 0xA33A;\n// var MAT_SXP_TEXT2_DATA = 0xA321;\n// var MAT_TEX2MASK = 0xA340;\n// var MAT_SXP_TEXT2MASK_DATA = 0xA32C;\nvar MAT_OPACMAP = 0xA210;\n// var MAT_SXP_OPAC_DATA = 0xA322;\n// var MAT_OPACMASK = 0xA342;\n// var MAT_SXP_OPACMASK_DATA = 0xA32E;\nvar MAT_BUMPMAP = 0xA230;\n// var MAT_SXP_BUMP_DATA = 0xA324;\n// var MAT_BUMPMASK = 0xA344;\n// var MAT_SXP_BUMPMASK_DATA = 0xA330;\nvar MAT_SPECMAP = 0xA204;\n// var MAT_SXP_SPEC_DATA = 0xA325;\n// var MAT_SPECMASK = 0xA348;\n// var MAT_SXP_SPECMASK_DATA = 0xA332;\n// var MAT_SHINMAP = 0xA33C;\n// var MAT_SXP_SHIN_DATA = 0xA326;\n// var MAT_SHINMASK = 0xA346;\n// var MAT_SXP_SHINMASK_DATA = 0xA334;\n// var MAT_SELFIMAP = 0xA33D;\n// var MAT_SXP_SELFI_DATA = 0xA328;\n// var MAT_SELFIMASK = 0xA34A;\n// var MAT_SXP_SELFIMASK_DATA = 0xA336;\n// var MAT_REFLMAP = 0xA220;\n// var MAT_REFLMASK = 0xA34C;\n// var MAT_SXP_REFLMASK_DATA = 0xA338;\n// var MAT_ACUBIC = 0xA310;\nvar MAT_MAPNAME = 0xA300;\n// var MAT_MAP_TILING = 0xA351;\n// var MAT_MAP_TEXBLUR = 0xA353;\nvar MAT_MAP_USCALE = 0xA354;\nvar MAT_MAP_VSCALE = 0xA356;\nvar MAT_MAP_UOFFSET = 0xA358;\nvar MAT_MAP_VOFFSET = 0xA35A;\n// var MAT_MAP_ANG = 0xA35C;\n// var MAT_MAP_COL1 = 0xA360;\n// var MAT_MAP_COL2 = 0xA362;\n// var MAT_MAP_RCOL = 0xA364;\n// var MAT_MAP_GCOL = 0xA366;\n// var MAT_MAP_BCOL = 0xA368;\nvar NAMED_OBJECT = 0x4000;\n// var N_DIRECT_LIGHT = 0x4600;\n// var DL_OFF = 0x4620;\n// var DL_OUTER_RANGE = 0x465A;\n// var DL_INNER_RANGE = 0x4659;\n// var DL_MULTIPLIER = 0x465B;\n// var DL_EXCLUDE = 0x4654;\n// var DL_ATTENUATE = 0x4625;\n// var DL_SPOTLIGHT = 0x4610;\n// var DL_SPOT_ROLL = 0x4656;\n// var DL_SHADOWED = 0x4630;\n// var DL_LOCAL_SHADOW2 = 0x4641;\n// var DL_SEE_CONE = 0x4650;\n// var DL_SPOT_RECTANGULAR = 0x4651;\n// var DL_SPOT_ASPECT = 0x4657;\n// var DL_SPOT_PROJECTOR = 0x4653;\n// var DL_SPOT_OVERSHOOT = 0x4652;\n// var DL_RAY_BIAS = 0x4658;\n// var DL_RAYSHAD = 0x4627;\n// var N_CAMERA = 0x4700;\n// var CAM_SEE_CONE = 0x4710;\n// var CAM_RANGES = 0x4720;\n// var OBJ_HIDDEN = 0x4010;\n// var OBJ_VIS_LOFTER = 0x4011;\n// var OBJ_DOESNT_CAST = 0x4012;\n// var OBJ_DONT_RECVSHADOW = 0x4017;\n// var OBJ_MATTE = 0x4013;\n// var OBJ_FAST = 0x4014;\n// var OBJ_PROCEDURAL = 0x4015;\n// var OBJ_FROZEN = 0x4016;\nvar N_TRI_OBJECT = 0x4100;\nvar POINT_ARRAY = 0x4110;\n// var POINT_FLAG_ARRAY = 0x4111;\nvar FACE_ARRAY = 0x4120;\nvar MSH_MAT_GROUP = 0x4130;\n// var SMOOTH_GROUP = 0x4150;\n// var MSH_BOXMAP = 0x4190;\nvar TEX_VERTS = 0x4140;\nvar MESH_MATRIX = 0x4160;\n// var MESH_COLOR = 0x4165;\n// var MESH_TEXTURE_INFO = 0x4170;\n// var KFDATA = 0xB000;\n// var KFHDR = 0xB00A;\n// var KFSEG = 0xB008;\n// var KFCURTIME = 0xB009;\n// var AMBIENT_NODE_TAG = 0xB001;\n// var OBJECT_NODE_TAG = 0xB002;\n// var CAMERA_NODE_TAG = 0xB003;\n// var TARGET_NODE_TAG = 0xB004;\n// var LIGHT_NODE_TAG = 0xB005;\n// var L_TARGET_NODE_TAG = 0xB006;\n// var SPOTLIGHT_NODE_TAG = 0xB007;\n// var NODE_ID = 0xB030;\n// var NODE_HDR = 0xB010;\n// var PIVOT = 0xB013;\n// var INSTANCE_NAME = 0xB011;\n// var MORPH_SMOOTH = 0xB015;\n// var BOUNDBOX = 0xB014;\n// var POS_TRACK_TAG = 0xB020;\n// var COL_TRACK_TAG = 0xB025;\n// var ROT_TRACK_TAG = 0xB021;\n// var SCL_TRACK_TAG = 0xB022;\n// var MORPH_TRACK_TAG = 0xB026;\n// var FOV_TRACK_TAG = 0xB023;\n// var ROLL_TRACK_TAG = 0xB024;\n// var HOT_TRACK_TAG = 0xB027;\n// var FALL_TRACK_TAG = 0xB028;\n// var HIDE_TRACK_TAG = 0xB029;\n// var POLY_2D = 0x5000;\n// var SHAPE_OK = 0x5010;\n// var SHAPE_NOT_OK = 0x5011;\n// var SHAPE_HOOK = 0x5020;\n// var PATH_3D = 0x6000;\n// var PATH_MATRIX = 0x6005;\n// var SHAPE_2D = 0x6010;\n// var M_SCALE = 0x6020;\n// var M_TWIST = 0x6030;\n// var M_TEETER = 0x6040;\n// var M_FIT = 0x6050;\n// var M_BEVEL = 0x6060;\n// var XZ_CURVE = 0x6070;\n// var YZ_CURVE = 0x6080;\n// var INTERPCT = 0x6090;\n// var DEFORM_LIMIT = 0x60A0;\n// var USE_CONTOUR = 0x6100;\n// var USE_TWEEN = 0x6110;\n// var USE_SCALE = 0x6120;\n// var USE_TWIST = 0x6130;\n// var USE_TEETER = 0x6140;\n// var USE_FIT = 0x6150;\n// var USE_BEVEL = 0x6160;\n// var DEFAULT_VIEW = 0x3000;\n// var VIEW_TOP = 0x3010;\n// var VIEW_BOTTOM = 0x3020;\n// var VIEW_LEFT = 0x3030;\n// var VIEW_RIGHT = 0x3040;\n// var VIEW_FRONT = 0x3050;\n// var VIEW_BACK = 0x3060;\n// var VIEW_USER = 0x3070;\n// var VIEW_CAMERA = 0x3080;\n// var VIEW_WINDOW = 0x3090;\n// var VIEWPORT_LAYOUT_OLD = 0x7000;\n// var VIEWPORT_DATA_OLD = 0x7010;\n// var VIEWPORT_LAYOUT = 0x7001;\n// var VIEWPORT_DATA = 0x7011;\n// var VIEWPORT_DATA_3 = 0x7012;\n// var VIEWPORT_SIZE = 0x7020;\n// var NETWORK_VIEW = 0x7030;\n\nexport { TDSLoader };\n"]}