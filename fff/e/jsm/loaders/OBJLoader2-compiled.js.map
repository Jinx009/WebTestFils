{"version":3,"sources":["OBJLoader2.js"],"names":[],"mappings":"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","file":"OBJLoader2-compiled.js","sourcesContent":["/**\n * @author Kai Salmen / https://kaisalmen.de\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\n */\n\nimport {\n\tFileLoader,\n\tObject3D,\n\tLoader\n} from \"../../../build/three.module.js\";\n\nimport { OBJLoader2Parser } from \"./obj2/worker/parallel/OBJLoader2Parser.js\";\nimport { MeshReceiver } from \"./obj2/shared/MeshReceiver.js\";\nimport { MaterialHandler } from \"./obj2/shared/MaterialHandler.js\";\n\n/**\n * Creates a new OBJLoader2. Use it to load OBJ data from files or to parse OBJ data from arraybuffer or text.\n *\n * @param {LoadingManager} [manager] The loadingManager for the loader to use. Default is {@link LoadingManager}\n * @constructor\n */\nconst OBJLoader2 = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.parser = new OBJLoader2Parser();\n\n\tthis.modelName = '';\n\tthis.instanceNo = 0;\n\tthis.baseObject3d = new Object3D();\n\n\tthis.materialHandler = new MaterialHandler();\n\tthis.meshReceiver = new MeshReceiver( this.materialHandler );\n\n\t// as OBJLoader2 is no longer derived from OBJLoader2Parser, we need to override the default onAssetAvailable callback\n\tlet scope = this;\n\tlet defaultOnAssetAvailable = function ( payload ) {\n\n\t\tscope._onAssetAvailable( payload );\n\n\t};\n\tthis.parser.setCallbackOnAssetAvailable( defaultOnAssetAvailable );\n\n};\n\nOBJLoader2.OBJLOADER2_VERSION = '3.1.1';\nconsole.info( 'Using OBJLoader2 version: ' + OBJLoader2.OBJLOADER2_VERSION );\n\n\nOBJLoader2.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: OBJLoader2,\n\n\t/**\n\t * See {@link OBJLoader2Parser.setLogging}\n\t * @return {OBJLoader2}\n\t */\n\tsetLogging: function ( enabled, debug ) {\n\n\t\tthis.parser.setLogging( enabled, debug );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setMaterialPerSmoothingGroup}\n\t * @return {OBJLoader2}\n\t */\n\tsetMaterialPerSmoothingGroup: function ( materialPerSmoothingGroup ) {\n\n\t\tthis.parser.setMaterialPerSmoothingGroup( materialPerSmoothingGroup );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setUseOAsMesh}\n\t * @return {OBJLoader2}\n\t */\n\tsetUseOAsMesh: function ( useOAsMesh ) {\n\n\t\tthis.parser.setUseOAsMesh( useOAsMesh );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setUseIndices}\n\t * @return {OBJLoader2}\n\t */\n\tsetUseIndices: function ( useIndices ) {\n\n\t\tthis.parser.setUseIndices( useIndices );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setDisregardNormals}\n\t * @return {OBJLoader2}\n\t */\n\tsetDisregardNormals: function ( disregardNormals ) {\n\n\t\tthis.parser.setDisregardNormals( disregardNormals );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Set the name of the model.\n\t *\n\t * @param {string} modelName\n\t * @return {OBJLoader2}\n\t */\n\tsetModelName: function ( modelName ) {\n\n\t\tthis.modelName = modelName ? modelName : this.modelName;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Set the node where the loaded objects will be attached directly.\n\t *\n\t * @param {Object3D} baseObject3d Object already attached to scenegraph where new meshes will be attached to\n\t * @return {OBJLoader2}\n\t */\n\tsetBaseObject3d: function ( baseObject3d ) {\n\n\t\tthis.baseObject3d = ( baseObject3d === undefined || baseObject3d === null ) ? this.baseObject3d : baseObject3d;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Add materials as associated array.\n\t *\n\t * @param {Object} materials Object with named {@link Material}\n\t * @param overrideExisting boolean Override existing material\n\t * @return {OBJLoader2}\n\t */\n\taddMaterials: function ( materials, overrideExisting ) {\n\n\t\tthis.materialHandler.addMaterials( materials, overrideExisting );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnAssetAvailable}\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnAssetAvailable: function ( onAssetAvailable ) {\n\n\t\tthis.parser.setCallbackOnAssetAvailable( onAssetAvailable );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnProgress}\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnProgress: function ( onProgress ) {\n\n\t\tthis.parser.setCallbackOnProgress( onProgress );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnError}\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnError: function ( onError ) {\n\n\t\tthis.parser.setCallbackOnError( onError );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnLoad}\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnLoad: function ( onLoad ) {\n\n\t\tthis.parser.setCallbackOnLoad( onLoad );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Register a function that is called once a single mesh is available and it could be altered by the supplied function.\n\t *\n\t * @param {Function} [onMeshAlter]\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnMeshAlter: function ( onMeshAlter ) {\n\n\t\tthis.meshReceiver._setCallbacks( this.parser.callbacks.onProgress, onMeshAlter );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Register a function that is called once all materials have been loaded and they could be altered by the supplied function.\n\t *\n\t * @param {Function} [onLoadMaterials]\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnLoadMaterials: function ( onLoadMaterials ) {\n\n\t\tthis.materialHandler._setCallbacks( onLoadMaterials );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Use this convenient method to load a file at the given URL. By default the fileLoader uses an ArrayBuffer.\n\t *\n\t * @param {string}  url A string containing the path/URL of the file to be loaded.\n\t * @param {function} onLoad A function to be called after loading is successfully completed. The function receives loaded Object3D as an argument.\n\t * @param {function} [onFileLoadProgress] A function to be called while the loading is in progress. The argument will be the XMLHttpRequest instance, which contains total and Integer bytes.\n\t * @param {function} [onError] A function to be called if an error occurs during loading. The function receives the error as an argument.\n\t * @param {function} [onMeshAlter] Called after every single mesh is made available by the parser\n\t */\n\tload: function ( url, onLoad, onFileLoadProgress, onError, onMeshAlter ) {\n\n\t\tlet scope = this;\n\t\tif ( onLoad === null || onLoad === undefined || ! ( onLoad instanceof Function ) ) {\n\n\t\t\tlet errorMessage = 'onLoad is not a function! Aborting...';\n\t\t\tscope.parser.callbacks.onError( errorMessage );\n\t\t\tthrow errorMessage;\n\n\t\t} else {\n\n\t\t\tthis.parser.setCallbackOnLoad( onLoad );\n\n\t\t}\n\t\tif ( onError === null || onError === undefined || ! ( onError instanceof Function ) ) {\n\n\t\t\tonError = function ( event ) {\n\n\t\t\t\tlet errorMessage = event;\n\t\t\t\tif ( event.currentTarget && event.currentTarget.statusText !== null ) {\n\n\t\t\t\t\terrorMessage = 'Error occurred while downloading!\\nurl: ' + event.currentTarget.responseURL + '\\nstatus: ' + event.currentTarget.statusText;\n\n\t\t\t\t}\n\t\t\t\tscope.parser.callbacks.onError( errorMessage );\n\n\t\t\t};\n\n\t\t}\n\t\tif ( ! url ) {\n\n\t\t\tonError( 'An invalid url was provided. Unable to continue!' );\n\n\t\t}\n\t\tlet urlFull = new URL( url, window.location.href ).href;\n\t\tlet filename = urlFull;\n\t\tlet urlParts = urlFull.split( '/' );\n\t\tif ( urlParts.length > 2 ) {\n\n\t\t\tfilename = urlParts[ urlParts.length - 1 ];\n\t\t\tlet urlPartsPath = urlParts.slice( 0, urlParts.length - 1 ).join( '/' ) + '/';\n\t\t\tif ( urlPartsPath !== undefined && urlPartsPath !== null ) this.path = urlPartsPath;\n\n\t\t}\n\t\tif ( onFileLoadProgress === null || onFileLoadProgress === undefined || ! ( onFileLoadProgress instanceof Function ) ) {\n\n\t\t\tlet numericalValueRef = 0;\n\t\t\tlet numericalValue = 0;\n\t\t\tonFileLoadProgress = function ( event ) {\n\n\t\t\t\tif ( ! event.lengthComputable ) return;\n\n\t\t\t\tnumericalValue = event.loaded / event.total;\n\t\t\t\tif ( numericalValue > numericalValueRef ) {\n\n\t\t\t\t\tnumericalValueRef = numericalValue;\n\t\t\t\t\tlet output = 'Download of \"' + url + '\": ' + ( numericalValue * 100 ).toFixed( 2 ) + '%';\n\t\t\t\t\tscope.parser.callbacks.onProgress( 'progressLoad', output, numericalValue );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tthis.setCallbackOnMeshAlter( onMeshAlter );\n\t\tlet fileLoaderOnLoad = function ( content ) {\n\n\t\t\tscope.parser.callbacks.onLoad( scope.parse( content ), \"OBJLoader2#load: Parsing completed\" );\n\n\t\t};\n\t\tlet fileLoader = new FileLoader( this.manager );\n\t\tfileLoader.setPath( this.path || this.resourcePath );\n\t\tfileLoader.setResponseType( 'arraybuffer' );\n\t\tfileLoader.load( filename, fileLoaderOnLoad, onFileLoadProgress, onError );\n\n\t},\n\n\t/**\n\t * Parses OBJ data synchronously from arraybuffer or string and returns the {@link Object3D}.\n\t *\n\t * @param {arraybuffer|string} content OBJ data as Uint8Array or String\n\t * @return {Object3D}\n\t */\n\tparse: function ( content ) {\n\n\t\t// fast-fail in case of illegal data\n\t\tif ( content === null || content === undefined ) {\n\n\t\t\tthrow 'Provided content is not a valid ArrayBuffer or String. Unable to continue parsing';\n\n\t\t}\n\t\tif ( this.parser.logging.enabled ) {\n\n\t\t\tconsole.time( 'OBJLoader parse: ' + this.modelName );\n\n\t\t}\n\n\t\t// Create default materials beforehand, but do not override previously set materials (e.g. during init)\n\t\tthis.materialHandler.createDefaultMaterials( false );\n\n\t\t// code works directly on the material references, parser clear its materials before updating\n\t\tthis.parser.setMaterials( this.materialHandler.getMaterials() );\n\n\t\tif ( content instanceof ArrayBuffer || content instanceof Uint8Array ) {\n\n\t\t\tif ( this.parser.logging.enabled ) console.info( 'Parsing arrayBuffer...' );\n\t\t\tthis.parser.execute( content );\n\n\t\t} else if ( typeof ( content ) === 'string' || content instanceof String ) {\n\n\t\t\tif ( this.parser.logging.enabled ) console.info( 'Parsing text...' );\n\t\t\tthis.parser.executeLegacy( content );\n\n\t\t} else {\n\n\t\t\tthis.parser.callbacks.onError( 'Provided content was neither of type String nor Uint8Array! Aborting...' );\n\n\t\t}\n\t\tif ( this.parser.logging.enabled ) {\n\n\t\t\tconsole.timeEnd( 'OBJLoader parse: ' + this.modelName );\n\n\t\t}\n\t\treturn this.baseObject3d;\n\n\t},\n\n\t_onAssetAvailable: function ( payload ) {\n\n\t\tif ( payload.cmd !== 'assetAvailable' ) return;\n\n\t\tif ( payload.type === 'mesh' ) {\n\n\t\t\tlet meshes = this.meshReceiver.buildMeshes( payload );\n\t\t\tfor ( let mesh of meshes ) {\n\n\t\t\t\tthis.baseObject3d.add( mesh );\n\n\t\t\t}\n\n\t\t} else if ( payload.type === 'material' ) {\n\n\t\t\tthis.materialHandler.addPayloadMaterials( payload );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { OBJLoader2 };\n"]}