{"version":3,"sources":["EXRLoader.js"],"names":[],"mappings":"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","file":"EXRLoader-compiled.js","sourcesContent":["/**\n * @author Richard M. / https://github.com/richardmonette\n *\n * OpenEXR loader which, currently, supports reading 16 bit half data, in either\n * uncompressed or PIZ wavelet compressed form.\n *\n * Referred to the original Industrial Light & Magic OpenEXR implementation and the TinyEXR / Syoyo Fujita\n * implementation, so I have preserved their copyright notices.\n */\n\nimport {\n\tDataTextureLoader,\n\tFloatType,\n\tHalfFloatType,\n\tLinearEncoding,\n\tLinearFilter,\n\tRGBAFormat,\n\tRGBFormat\n} from \"../../../build/three.module.js\";\n\n// /*\n// Copyright (c) 2014 - 2017, Syoyo Fujita\n// All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Syoyo Fujita nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// */\n\n// // TinyEXR contains some OpenEXR code, which is licensed under ------------\n\n// ///////////////////////////////////////////////////////////////////////////\n// //\n// // Copyright (c) 2002, Industrial Light & Magic, a division of Lucas\n// // Digital Ltd. LLC\n// //\n// // All rights reserved.\n// //\n// // Redistribution and use in source and binary forms, with or without\n// // modification, are permitted provided that the following conditions are\n// // met:\n// // *       Redistributions of source code must retain the above copyright\n// // notice, this list of conditions and the following disclaimer.\n// // *       Redistributions in binary form must reproduce the above\n// // copyright notice, this list of conditions and the following disclaimer\n// // in the documentation and/or other materials provided with the\n// // distribution.\n// // *       Neither the name of Industrial Light & Magic nor the names of\n// // its contributors may be used to endorse or promote products derived\n// // from this software without specific prior written permission.\n// //\n// // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// // \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// //\n// ///////////////////////////////////////////////////////////////////////////\n\n// // End of OpenEXR license -------------------------------------------------\n\nvar EXRLoader = function ( manager ) {\n\n\tDataTextureLoader.call( this, manager );\n\n\tthis.type = FloatType;\n\n};\n\nEXRLoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\n\n\tconstructor: EXRLoader,\n\n\tparse: function ( buffer ) {\n\n\t\tconst USHORT_RANGE = ( 1 << 16 );\n\t\tconst BITMAP_SIZE = ( USHORT_RANGE >> 3 );\n\n\t\tconst HUF_ENCBITS = 16; // literal (value) bit length\n\t\tconst HUF_DECBITS = 14; // decoding bit size (>= 8)\n\n\t\tconst HUF_ENCSIZE = ( 1 << HUF_ENCBITS ) + 1; // encoding table size\n\t\tconst HUF_DECSIZE = 1 << HUF_DECBITS; // decoding table size\n\t\tconst HUF_DECMASK = HUF_DECSIZE - 1;\n\n\t\tconst SHORT_ZEROCODE_RUN = 59;\n\t\tconst LONG_ZEROCODE_RUN = 63;\n\t\tconst SHORTEST_LONG_RUN = 2 + LONG_ZEROCODE_RUN - SHORT_ZEROCODE_RUN;\n\n\t\tconst BYTES_PER_HALF = 2;\n\n\t\tconst ULONG_SIZE = 8;\n\t\tconst FLOAT32_SIZE = 4;\n\t\tconst INT32_SIZE = 4;\n\t\tconst INT16_SIZE = 2;\n\t\tconst INT8_SIZE = 1;\n\n\t\tfunction reverseLutFromBitmap( bitmap, lut ) {\n\n\t\t\tvar k = 0;\n\n\t\t\tfor ( var i = 0; i < USHORT_RANGE; ++ i ) {\n\n\t\t\t\tif ( ( i == 0 ) || ( bitmap[ i >> 3 ] & ( 1 << ( i & 7 ) ) ) ) {\n\n\t\t\t\t\tlut[ k ++ ] = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar n = k - 1;\n\n\t\t\twhile ( k < USHORT_RANGE ) lut[ k ++ ] = 0;\n\n\t\t\treturn n;\n\n\t\t}\n\n\t\tfunction hufClearDecTable( hdec ) {\n\n\t\t\tfor ( var i = 0; i < HUF_DECSIZE; i ++ ) {\n\n\t\t\t\thdec[ i ] = {};\n\t\t\t\thdec[ i ].len = 0;\n\t\t\t\thdec[ i ].lit = 0;\n\t\t\t\thdec[ i ].p = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst getBitsReturn = { l: 0, c: 0, lc: 0 };\n\n\t\tfunction getBits( nBits, c, lc, uInt8Array, inOffset ) {\n\n\t\t\twhile ( lc < nBits ) {\n\n\t\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\n\t\t\t\tlc += 8;\n\n\t\t\t}\n\n\t\t\tlc -= nBits;\n\n\t\t\tgetBitsReturn.l = ( c >> lc ) & ( ( 1 << nBits ) - 1 );\n\t\t\tgetBitsReturn.c = c;\n\t\t\tgetBitsReturn.lc = lc;\n\n\t\t}\n\n\t\tconst hufTableBuffer = new Array( 59 );\n\n\t\tfunction hufCanonicalCodeTable( hcode ) {\n\n\t\t\tfor ( var i = 0; i <= 58; ++ i ) hufTableBuffer[ i ] = 0;\n\t\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) hufTableBuffer[ hcode[ i ] ] += 1;\n\n\t\t\tvar c = 0;\n\n\t\t\tfor ( var i = 58; i > 0; -- i ) {\n\n\t\t\t\tvar nc = ( ( c + hufTableBuffer[ i ] ) >> 1 );\n\t\t\t\thufTableBuffer[ i ] = c;\n\t\t\t\tc = nc;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) {\n\n\t\t\t\tvar l = hcode[ i ];\n\t\t\t\tif ( l > 0 ) hcode[ i ] = l | ( hufTableBuffer[ l ] ++ << 6 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction hufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, hcode ) {\n\n\t\t\tvar p = inOffset;\n\t\t\tvar c = 0;\n\t\t\tvar lc = 0;\n\n\t\t\tfor ( ; im <= iM; im ++ ) {\n\n\t\t\t\tif ( p.value - inOffset.value > ni ) return false;\n\n\t\t\t\tgetBits( 6, c, lc, uInt8Array, p );\n\n\t\t\t\tvar l = getBitsReturn.l;\n\t\t\t\tc = getBitsReturn.c;\n\t\t\t\tlc = getBitsReturn.lc;\n\n\t\t\t\thcode[ im ] = l;\n\n\t\t\t\tif ( l == LONG_ZEROCODE_RUN ) {\n\n\t\t\t\t\tif ( p.value - inOffset.value > ni ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgetBits( 8, c, lc, uInt8Array, p );\n\n\t\t\t\t\tvar zerun = getBitsReturn.l + SHORTEST_LONG_RUN;\n\t\t\t\t\tc = getBitsReturn.c;\n\t\t\t\t\tlc = getBitsReturn.lc;\n\n\t\t\t\t\tif ( im + zerun > iM + 1 ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\n\n\t\t\t\t\tim --;\n\n\t\t\t\t} else if ( l >= SHORT_ZEROCODE_RUN ) {\n\n\t\t\t\t\tvar zerun = l - SHORT_ZEROCODE_RUN + 2;\n\n\t\t\t\t\tif ( im + zerun > iM + 1 ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\n\n\t\t\t\t\tim --;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thufCanonicalCodeTable( hcode );\n\n\t\t}\n\n\t\tfunction hufLength( code ) {\n\n\t\t\treturn code & 63;\n\n\t\t}\n\n\t\tfunction hufCode( code ) {\n\n\t\t\treturn code >> 6;\n\n\t\t}\n\n\t\tfunction hufBuildDecTable( hcode, im, iM, hdecod ) {\n\n\t\t\tfor ( ; im <= iM; im ++ ) {\n\n\t\t\t\tvar c = hufCode( hcode[ im ] );\n\t\t\t\tvar l = hufLength( hcode[ im ] );\n\n\t\t\t\tif ( c >> l ) {\n\n\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t}\n\n\t\t\t\tif ( l > HUF_DECBITS ) {\n\n\t\t\t\t\tvar pl = hdecod[ ( c >> ( l - HUF_DECBITS ) ) ];\n\n\t\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpl.lit ++;\n\n\t\t\t\t\tif ( pl.p ) {\n\n\t\t\t\t\t\tvar p = pl.p;\n\t\t\t\t\t\tpl.p = new Array( pl.lit );\n\n\t\t\t\t\t\tfor ( var i = 0; i < pl.lit - 1; ++ i ) {\n\n\t\t\t\t\t\t\tpl.p[ i ] = p[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpl.p = new Array( 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpl.p[ pl.lit - 1 ] = im;\n\n\t\t\t\t} else if ( l ) {\n\n\t\t\t\t\tvar plOffset = 0;\n\n\t\t\t\t\tfor ( var i = 1 << ( HUF_DECBITS - l ); i > 0; i -- ) {\n\n\t\t\t\t\t\tvar pl = hdecod[ ( c << ( HUF_DECBITS - l ) ) + plOffset ];\n\n\t\t\t\t\t\tif ( pl.len || pl.p ) {\n\n\t\t\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpl.len = l;\n\t\t\t\t\t\tpl.lit = im;\n\n\t\t\t\t\t\tplOffset ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst getCharReturn = { c: 0, lc: 0 };\n\n\t\tfunction getChar( c, lc, uInt8Array, inOffset ) {\n\n\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\n\t\t\tlc += 8;\n\n\t\t\tgetCharReturn.c = c;\n\t\t\tgetCharReturn.lc = lc;\n\n\t\t}\n\n\t\tconst getCodeReturn = { c: 0, lc: 0 };\n\n\t\tfunction getCode( po, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outBufferOffset, outBufferEndOffset ) {\n\n\t\t\tif ( po == rlc ) {\n\n\t\t\t\tif ( lc < 8 ) {\n\n\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\t\t\t\t\tc = getCharReturn.c;\n\t\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\t}\n\n\t\t\t\tlc -= 8;\n\n\t\t\t\tvar cs = ( c >> lc );\n\t\t\t\tvar cs = new Uint8Array( [ cs ] )[ 0 ];\n\n\t\t\t\tif ( outBufferOffset.value + cs > outBufferEndOffset ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t\tvar s = outBuffer[ outBufferOffset.value - 1 ];\n\n\t\t\t\twhile ( cs -- > 0 ) {\n\n\t\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = s;\n\n\t\t\t\t}\n\n\t\t\t} else if ( outBufferOffset.value < outBufferEndOffset ) {\n\n\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = po;\n\n\t\t\t} else {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\tgetCodeReturn.c = c;\n\t\t\tgetCodeReturn.lc = lc;\n\n\t\t}\n\n\t\tfunction UInt16( value ) {\n\n\t\t\treturn ( value & 0xFFFF );\n\n\t\t}\n\n\t\tfunction Int16( value ) {\n\n\t\t\tvar ref = UInt16( value );\n\t\t\treturn ( ref > 0x7FFF ) ? ref - 0x10000 : ref;\n\n\t\t}\n\n\t\tconst wdec14Return = { a: 0, b: 0 };\n\n\t\tfunction wdec14( l, h ) {\n\n\t\t\tvar ls = Int16( l );\n\t\t\tvar hs = Int16( h );\n\n\t\t\tvar hi = hs;\n\t\t\tvar ai = ls + ( hi & 1 ) + ( hi >> 1 );\n\n\t\t\tvar as = ai;\n\t\t\tvar bs = ai - hi;\n\n\t\t\twdec14Return.a = as;\n\t\t\twdec14Return.b = bs;\n\n\t\t}\n\n\t\tfunction wav2Decode( j, buffer, nx, ox, ny, oy ) {\n\n\t\t\tvar n = ( nx > ny ) ? ny : nx;\n\t\t\tvar p = 1;\n\t\t\tvar p2;\n\n\t\t\twhile ( p <= n ) p <<= 1;\n\n\t\t\tp >>= 1;\n\t\t\tp2 = p;\n\t\t\tp >>= 1;\n\n\t\t\twhile ( p >= 1 ) {\n\n\t\t\t\tvar py = 0;\n\t\t\t\tvar ey = py + oy * ( ny - p2 );\n\t\t\t\tvar oy1 = oy * p;\n\t\t\t\tvar oy2 = oy * p2;\n\t\t\t\tvar ox1 = ox * p;\n\t\t\t\tvar ox2 = ox * p2;\n\t\t\t\tvar i00, i01, i10, i11;\n\n\t\t\t\tfor ( ; py <= ey; py += oy2 ) {\n\n\t\t\t\t\tvar px = py;\n\t\t\t\t\tvar ex = py + ox * ( nx - p2 );\n\n\t\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\n\n\t\t\t\t\t\tvar p01 = px + ox1;\n\t\t\t\t\t\tvar p10 = px + oy1;\n\t\t\t\t\t\tvar p11 = p10 + ox1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\ti10 = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( buffer[ p01 + j ], buffer[ p11 + j ] );\n\n\t\t\t\t\t\ti01 = wdec14Return.a;\n\t\t\t\t\t\ti11 = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( i00, i01 );\n\n\t\t\t\t\t\tbuffer[ px + j ] = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( i10, i11 );\n\n\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p11 + j ] = wdec14Return.b;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nx & p ) {\n\n\t\t\t\t\t\tvar p10 = px + oy1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\tbuffer[ px + j ] = i00;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ny & p ) {\n\n\t\t\t\t\tvar px = py;\n\t\t\t\t\tvar ex = py + ox * ( nx - p2 );\n\n\t\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\n\n\t\t\t\t\t\tvar p01 = px + ox1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p01 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\tbuffer[ px + j ] = i00;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tp2 = p;\n\t\t\t\tp >>= 1;\n\n\t\t\t}\n\n\t\t\treturn py;\n\n\t\t}\n\n\t\tfunction hufDecode( encodingTable, decodingTable, uInt8Array, inDataView, inOffset, ni, rlc, no, outBuffer, outOffset ) {\n\n\t\t\tvar c = 0;\n\t\t\tvar lc = 0;\n\t\t\tvar outBufferEndOffset = no;\n\t\t\tvar inOffsetEnd = Math.trunc( inOffset.value + ( ni + 7 ) / 8 );\n\n\t\t\twhile ( inOffset.value < inOffsetEnd ) {\n\n\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\n\t\t\t\tc = getCharReturn.c;\n\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\twhile ( lc >= HUF_DECBITS ) {\n\n\t\t\t\t\tvar index = ( c >> ( lc - HUF_DECBITS ) ) & HUF_DECMASK;\n\t\t\t\t\tvar pl = decodingTable[ index ];\n\n\t\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\t\tlc -= pl.len;\n\n\t\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! pl.p ) {\n\n\t\t\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar j;\n\n\t\t\t\t\t\tfor ( j = 0; j < pl.lit; j ++ ) {\n\n\t\t\t\t\t\t\tvar l = hufLength( encodingTable[ pl.p[ j ] ] );\n\n\t\t\t\t\t\t\twhile ( lc < l && inOffset.value < inOffsetEnd ) {\n\n\t\t\t\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\n\t\t\t\t\t\t\t\tc = getCharReturn.c;\n\t\t\t\t\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( lc >= l ) {\n\n\t\t\t\t\t\t\t\tif ( hufCode( encodingTable[ pl.p[ j ] ] ) == ( ( c >> ( lc - l ) ) & ( ( 1 << l ) - 1 ) ) ) {\n\n\t\t\t\t\t\t\t\t\tlc -= l;\n\n\t\t\t\t\t\t\t\t\tgetCode( pl.p[ j ], rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( j == pl.lit ) {\n\n\t\t\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar i = ( 8 - ni ) & 7;\n\n\t\t\tc >>= i;\n\t\t\tlc -= i;\n\n\t\t\twhile ( lc > 0 ) {\n\n\t\t\t\tvar pl = decodingTable[ ( c << ( HUF_DECBITS - lc ) ) & HUF_DECMASK ];\n\n\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\tlc -= pl.len;\n\n\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction hufUncompress( uInt8Array, inDataView, inOffset, nCompressed, outBuffer, outOffset, nRaw ) {\n\n\t\t\tvar initialInOffset = inOffset.value;\n\n\t\t\tvar im = parseUint32( inDataView, inOffset );\n\t\t\tvar iM = parseUint32( inDataView, inOffset );\n\n\t\t\tinOffset.value += 4;\n\n\t\t\tvar nBits = parseUint32( inDataView, inOffset );\n\n\t\t\tinOffset.value += 4;\n\n\t\t\tif ( im < 0 || im >= HUF_ENCSIZE || iM < 0 || iM >= HUF_ENCSIZE ) {\n\n\t\t\t\tthrow 'Something wrong with HUF_ENCSIZE';\n\n\t\t\t}\n\n\t\t\tvar freq = new Array( HUF_ENCSIZE );\n\t\t\tvar hdec = new Array( HUF_DECSIZE );\n\n\t\t\thufClearDecTable( hdec );\n\n\t\t\tvar ni = nCompressed - ( inOffset.value - initialInOffset );\n\n\t\t\thufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, freq );\n\n\t\t\tif ( nBits > 8 * ( nCompressed - ( inOffset.value - initialInOffset ) ) ) {\n\n\t\t\t\tthrow 'Something wrong with hufUncompress';\n\n\t\t\t}\n\n\t\t\thufBuildDecTable( freq, im, iM, hdec );\n\n\t\t\thufDecode( freq, hdec, uInt8Array, inDataView, inOffset, nBits, iM, nRaw, outBuffer, outOffset );\n\n\t\t}\n\n\t\tfunction applyLut( lut, data, nData ) {\n\n\t\t\tfor ( var i = 0; i < nData; ++ i ) {\n\n\t\t\t\tdata[ i ] = lut[ data[ i ] ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction decompressPIZ( outBuffer, outOffset, uInt8Array, inDataView, inOffset, tmpBufSize, num_channels, exrChannelInfos, dataWidth, num_lines ) {\n\n\t\t\tvar bitmap = new Uint8Array( BITMAP_SIZE );\n\n\t\t\tvar minNonZero = parseUint16( inDataView, inOffset );\n\t\t\tvar maxNonZero = parseUint16( inDataView, inOffset );\n\n\t\t\tif ( maxNonZero >= BITMAP_SIZE ) {\n\n\t\t\t\tthrow 'Something is wrong with PIZ_COMPRESSION BITMAP_SIZE';\n\n\t\t\t}\n\n\t\t\tif ( minNonZero <= maxNonZero ) {\n\n\t\t\t\tfor ( var i = 0; i < maxNonZero - minNonZero + 1; i ++ ) {\n\n\t\t\t\t\tbitmap[ i + minNonZero ] = parseUint8( inDataView, inOffset );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar lut = new Uint16Array( USHORT_RANGE );\n\t\t\treverseLutFromBitmap( bitmap, lut );\n\n\t\t\tvar length = parseUint32( inDataView, inOffset );\n\n\t\t\thufUncompress( uInt8Array, inDataView, inOffset, length, outBuffer, outOffset, tmpBufSize );\n\n\t\t\tvar pizChannelData = new Array( num_channels );\n\n\t\t\tvar outBufferEnd = 0;\n\n\t\t\tfor ( var i = 0; i < num_channels; i ++ ) {\n\n\t\t\t\tpizChannelData[ i ] = {};\n\t\t\t\tpizChannelData[ i ][ 'start' ] = outBufferEnd;\n\t\t\t\tpizChannelData[ i ][ 'end' ] = pizChannelData[ i ][ 'start' ];\n\t\t\t\tpizChannelData[ i ][ 'nx' ] = dataWidth;\n\t\t\t\tpizChannelData[ i ][ 'ny' ] = num_lines;\n\t\t\t\tpizChannelData[ i ][ 'size' ] = 1;\n\n\t\t\t\toutBufferEnd += pizChannelData[ i ].nx * pizChannelData[ i ].ny * pizChannelData[ i ].size;\n\n\t\t\t}\n\n\t\t\tvar fooOffset = 0;\n\n\t\t\tfor ( var i = 0; i < num_channels; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < pizChannelData[ i ].size; ++ j ) {\n\n\t\t\t\t\tfooOffset += wav2Decode(\n\t\t\t\t\t\tj + fooOffset,\n\t\t\t\t\t\toutBuffer,\n\t\t\t\t\t\tpizChannelData[ i ].nx,\n\t\t\t\t\t\tpizChannelData[ i ].size,\n\t\t\t\t\t\tpizChannelData[ i ].ny,\n\t\t\t\t\t\tpizChannelData[ i ].nx * pizChannelData[ i ].size\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tapplyLut( lut, outBuffer, outBufferEnd );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction parseNullTerminatedString( buffer, offset ) {\n\n\t\t\tvar uintBuffer = new Uint8Array( buffer );\n\t\t\tvar endOffset = 0;\n\n\t\t\twhile ( uintBuffer[ offset.value + endOffset ] != 0 ) {\n\n\t\t\t\tendOffset += 1;\n\n\t\t\t}\n\n\t\t\tvar stringValue = new TextDecoder().decode(\n\t\t\t\tuintBuffer.slice( offset.value, offset.value + endOffset )\n\t\t\t);\n\n\t\t\toffset.value = offset.value + endOffset + 1;\n\n\t\t\treturn stringValue;\n\n\t\t}\n\n\t\tfunction parseFixedLengthString( buffer, offset, size ) {\n\n\t\t\tvar stringValue = new TextDecoder().decode(\n\t\t\t\tnew Uint8Array( buffer ).slice( offset.value, offset.value + size )\n\t\t\t);\n\n\t\t\toffset.value = offset.value + size;\n\n\t\t\treturn stringValue;\n\n\t\t}\n\n\t\tfunction parseUlong( dataView, offset ) {\n\n\t\t\tvar uLong = dataView.getUint32( 0, true );\n\n\t\t\toffset.value = offset.value + ULONG_SIZE;\n\n\t\t\treturn uLong;\n\n\t\t}\n\n\t\tfunction parseUint32( dataView, offset ) {\n\n\t\t\tvar Uint32 = dataView.getUint32( offset.value, true );\n\n\t\t\toffset.value = offset.value + INT32_SIZE;\n\n\t\t\treturn Uint32;\n\n\t\t}\n\n\t\tfunction parseUint8Array( uInt8Array, offset ) {\n\n\t\t\tvar Uint8 = uInt8Array[ offset.value ];\n\n\t\t\toffset.value = offset.value + INT8_SIZE;\n\n\t\t\treturn Uint8;\n\n\t\t}\n\n\t\tfunction parseUint8( dataView, offset ) {\n\n\t\t\tvar Uint8 = dataView.getUint8( offset.value );\n\n\t\t\toffset.value = offset.value + INT8_SIZE;\n\n\t\t\treturn Uint8;\n\n\t\t}\n\n\t\tfunction parseFloat32( dataView, offset ) {\n\n\t\t\tvar float = dataView.getFloat32( offset.value, true );\n\n\t\t\toffset.value += FLOAT32_SIZE;\n\n\t\t\treturn float;\n\n\t\t}\n\n\t\t// https://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript\n\t\tfunction decodeFloat16( binary ) {\n\n\t\t\tvar exponent = ( binary & 0x7C00 ) >> 10,\n\t\t\t\tfraction = binary & 0x03FF;\n\n\t\t\treturn ( binary >> 15 ? - 1 : 1 ) * (\n\t\t\t\texponent ?\n\t\t\t\t\t(\n\t\t\t\t\t\texponent === 0x1F ?\n\t\t\t\t\t\t\tfraction ? NaN : Infinity :\n\t\t\t\t\t\t\tMath.pow( 2, exponent - 15 ) * ( 1 + fraction / 0x400 )\n\t\t\t\t\t) :\n\t\t\t\t\t6.103515625e-5 * ( fraction / 0x400 )\n\t\t\t);\n\n\t\t}\n\n\t\tfunction parseUint16( dataView, offset ) {\n\n\t\t\tvar Uint16 = dataView.getUint16( offset.value, true );\n\n\t\t\toffset.value += INT16_SIZE;\n\n\t\t\treturn Uint16;\n\n\t\t}\n\n\t\tfunction parseFloat16( buffer, offset ) {\n\n\t\t\treturn decodeFloat16( parseUint16( buffer, offset ) );\n\n\t\t}\n\n\t\tfunction parseChlist( dataView, buffer, offset, size ) {\n\n\t\t\tvar startOffset = offset.value;\n\t\t\tvar channels = [];\n\n\t\t\twhile ( offset.value < ( startOffset + size - 1 ) ) {\n\n\t\t\t\tvar name = parseNullTerminatedString( buffer, offset );\n\t\t\t\tvar pixelType = parseUint32( dataView, offset ); // TODO: Cast this to UINT, HALF or FLOAT\n\t\t\t\tvar pLinear = parseUint8( dataView, offset );\n\t\t\t\toffset.value += 3; // reserved, three chars\n\t\t\t\tvar xSampling = parseUint32( dataView, offset );\n\t\t\t\tvar ySampling = parseUint32( dataView, offset );\n\n\t\t\t\tchannels.push( {\n\t\t\t\t\tname: name,\n\t\t\t\t\tpixelType: pixelType,\n\t\t\t\t\tpLinear: pLinear,\n\t\t\t\t\txSampling: xSampling,\n\t\t\t\t\tySampling: ySampling\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\toffset.value += 1;\n\n\t\t\treturn channels;\n\n\t\t}\n\n\t\tfunction parseChromaticities( dataView, offset ) {\n\n\t\t\tvar redX = parseFloat32( dataView, offset );\n\t\t\tvar redY = parseFloat32( dataView, offset );\n\t\t\tvar greenX = parseFloat32( dataView, offset );\n\t\t\tvar greenY = parseFloat32( dataView, offset );\n\t\t\tvar blueX = parseFloat32( dataView, offset );\n\t\t\tvar blueY = parseFloat32( dataView, offset );\n\t\t\tvar whiteX = parseFloat32( dataView, offset );\n\t\t\tvar whiteY = parseFloat32( dataView, offset );\n\n\t\t\treturn { redX: redX, redY: redY, greenX: greenX, greenY: greenY, blueX: blueX, blueY: blueY, whiteX: whiteX, whiteY: whiteY };\n\n\t\t}\n\n\t\tfunction parseCompression( dataView, offset ) {\n\n\t\t\tvar compressionCodes = [\n\t\t\t\t'NO_COMPRESSION',\n\t\t\t\t'RLE_COMPRESSION',\n\t\t\t\t'ZIPS_COMPRESSION',\n\t\t\t\t'ZIP_COMPRESSION',\n\t\t\t\t'PIZ_COMPRESSION',\n\t\t\t\t'PXR24_COMPRESSION',\n\t\t\t\t'B44_COMPRESSION',\n\t\t\t\t'B44A_COMPRESSION',\n\t\t\t\t'DWAA_COMPRESSION',\n\t\t\t\t'DWAB_COMPRESSION'\n\t\t\t];\n\n\t\t\tvar compression = parseUint8( dataView, offset );\n\n\t\t\treturn compressionCodes[ compression ];\n\n\t\t}\n\n\t\tfunction parseBox2i( dataView, offset ) {\n\n\t\t\tvar xMin = parseUint32( dataView, offset );\n\t\t\tvar yMin = parseUint32( dataView, offset );\n\t\t\tvar xMax = parseUint32( dataView, offset );\n\t\t\tvar yMax = parseUint32( dataView, offset );\n\n\t\t\treturn { xMin: xMin, yMin: yMin, xMax: xMax, yMax: yMax };\n\n\t\t}\n\n\t\tfunction parseLineOrder( dataView, offset ) {\n\n\t\t\tvar lineOrders = [\n\t\t\t\t'INCREASING_Y'\n\t\t\t];\n\n\t\t\tvar lineOrder = parseUint8( dataView, offset );\n\n\t\t\treturn lineOrders[ lineOrder ];\n\n\t\t}\n\n\t\tfunction parseV2f( dataView, offset ) {\n\n\t\t\tvar x = parseFloat32( dataView, offset );\n\t\t\tvar y = parseFloat32( dataView, offset );\n\n\t\t\treturn [ x, y ];\n\n\t\t}\n\n\t\tfunction parseValue( dataView, buffer, offset, type, size ) {\n\n\t\t\tif ( type === 'string' || type === 'iccProfile' ) {\n\n\t\t\t\treturn parseFixedLengthString( buffer, offset, size );\n\n\t\t\t} else if ( type === 'chlist' ) {\n\n\t\t\t\treturn parseChlist( dataView, buffer, offset, size );\n\n\t\t\t} else if ( type === 'chromaticities' ) {\n\n\t\t\t\treturn parseChromaticities( dataView, offset );\n\n\t\t\t} else if ( type === 'compression' ) {\n\n\t\t\t\treturn parseCompression( dataView, offset );\n\n\t\t\t} else if ( type === 'box2i' ) {\n\n\t\t\t\treturn parseBox2i( dataView, offset );\n\n\t\t\t} else if ( type === 'lineOrder' ) {\n\n\t\t\t\treturn parseLineOrder( dataView, offset );\n\n\t\t\t} else if ( type === 'float' ) {\n\n\t\t\t\treturn parseFloat32( dataView, offset );\n\n\t\t\t} else if ( type === 'v2f' ) {\n\n\t\t\t\treturn parseV2f( dataView, offset );\n\n\t\t\t} else if ( type === 'int' ) {\n\n\t\t\t\treturn parseUint32( dataView, offset );\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'Cannot parse value for unsupported type: ' + type;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bufferDataView = new DataView( buffer );\n\t\tvar uInt8Array = new Uint8Array( buffer );\n\n\t\tvar EXRHeader = {};\n\n\t\tbufferDataView.getUint32( 0, true ); // magic\n\t\tbufferDataView.getUint8( 4, true ); // versionByteZero\n\t\tbufferDataView.getUint8( 5, true ); // fullMask\n\n\t\t// start of header\n\n\t\tvar offset = { value: 8 }; // start at 8, after magic stuff\n\n\t\tvar keepReading = true;\n\n\t\twhile ( keepReading ) {\n\n\t\t\tvar attributeName = parseNullTerminatedString( buffer, offset );\n\n\t\t\tif ( attributeName == 0 ) {\n\n\t\t\t\tkeepReading = false;\n\n\t\t\t} else {\n\n\t\t\t\tvar attributeType = parseNullTerminatedString( buffer, offset );\n\t\t\t\tvar attributeSize = parseUint32( bufferDataView, offset );\n\t\t\t\tvar attributeValue = parseValue( bufferDataView, buffer, offset, attributeType, attributeSize );\n\n\t\t\t\tEXRHeader[ attributeName ] = attributeValue;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// offsets\n\n\t\tvar dataWindowHeight = EXRHeader.dataWindow.yMax + 1;\n\t\tvar scanlineBlockSize = 1; // 1 for NO_COMPRESSION\n\n\t\tif ( EXRHeader.compression === 'PIZ_COMPRESSION' ) {\n\n\t\t\tscanlineBlockSize = 32;\n\n\t\t}\n\n\t\tvar numBlocks = dataWindowHeight / scanlineBlockSize;\n\n\t\tfor ( var i = 0; i < numBlocks; i ++ ) {\n\n\t\t\tparseUlong( bufferDataView, offset ); // scanlineOffset\n\n\t\t}\n\n\t\t// we should be passed the scanline offset table, start reading pixel data\n\n\t\tvar width = EXRHeader.dataWindow.xMax - EXRHeader.dataWindow.xMin + 1;\n\t\tvar height = EXRHeader.dataWindow.yMax - EXRHeader.dataWindow.yMin + 1;\n\t\tvar numChannels = EXRHeader.channels.length;\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tvar byteArray = new Float32Array( width * height * numChannels );\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tvar byteArray = new Uint16Array( width * height * numChannels );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.error( 'THREE.EXRLoader: unsupported type: ', this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tvar channelOffsets = {\n\t\t\tR: 0,\n\t\t\tG: 1,\n\t\t\tB: 2,\n\t\t\tA: 3\n\t\t};\n\n\t\tif ( EXRHeader.compression === 'NO_COMPRESSION' ) {\n\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\n\n\t\t\t\tvar y_scanline = parseUint32( bufferDataView, offset );\n\t\t\t\tparseUint32( bufferDataView, offset ); // dataSize\n\n\t\t\t\tfor ( var channelID = 0; channelID < EXRHeader.channels.length; channelID ++ ) {\n\n\t\t\t\t\tvar cOff = channelOffsets[ EXRHeader.channels[ channelID ].name ];\n\n\t\t\t\t\tif ( EXRHeader.channels[ channelID ].pixelType === 1 ) { // half\n\n\t\t\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\t\t\t\tvar val = parseFloat16( bufferDataView, offset );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\t\t\t\tvar val = parseUint16( bufferDataView, offset );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbyteArray[ ( ( ( height - y_scanline ) * ( width * numChannels ) ) + ( x * numChannels ) ) + cOff ] = val;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow 'EXRLoader._parser: unsupported pixelType ' + EXRHeader.channels[ channelID ].pixelType + '. Only pixelType is 1 (HALF) is supported.';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( EXRHeader.compression === 'PIZ_COMPRESSION' ) {\n\n\t\t\tfor ( var scanlineBlockIdx = 0; scanlineBlockIdx < height / scanlineBlockSize; scanlineBlockIdx ++ ) {\n\n\t\t\t\tparseUint32( bufferDataView, offset ); // line_no\n\t\t\t\tparseUint32( bufferDataView, offset ); // data_len\n\n\t\t\t\tvar tmpBufferSize = width * scanlineBlockSize * ( EXRHeader.channels.length * BYTES_PER_HALF );\n\t\t\t\tvar tmpBuffer = new Uint16Array( tmpBufferSize );\n\t\t\t\tvar tmpOffset = { value: 0 };\n\n\t\t\t\tdecompressPIZ( tmpBuffer, tmpOffset, uInt8Array, bufferDataView, offset, tmpBufferSize, numChannels, EXRHeader.channels, width, scanlineBlockSize );\n\n\t\t\t\tfor ( var line_y = 0; line_y < scanlineBlockSize; line_y ++ ) {\n\n\t\t\t\t\tfor ( var channelID = 0; channelID < EXRHeader.channels.length; channelID ++ ) {\n\n\t\t\t\t\t\tvar cOff = channelOffsets[ EXRHeader.channels[ channelID ].name ];\n\n\t\t\t\t\t\tif ( EXRHeader.channels[ channelID ].pixelType === 1 ) { // half\n\n\t\t\t\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\t\t\t\tvar idx = ( channelID * ( scanlineBlockSize * width ) ) + ( line_y * width ) + x;\n\n\t\t\t\t\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\t\t\t\t\tvar val = decodeFloat16( tmpBuffer[ idx ] );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\t\t\t\t\tvar val = tmpBuffer[ idx ];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar true_y = line_y + ( scanlineBlockIdx * scanlineBlockSize );\n\n\t\t\t\t\t\t\t\tbyteArray[ ( ( ( height - true_y ) * ( width * numChannels ) ) + ( x * numChannels ) ) + cOff ] = val;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthrow 'EXRLoader._parser: unsupported pixelType ' + EXRHeader.channels[ channelID ].pixelType + '. Only pixelType is 1 (HALF) is supported.';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow 'EXRLoader._parser: ' + EXRHeader.compression + ' is unsupported';\n\n\t\t}\n\n\t\treturn {\n\t\t\theader: EXRHeader,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdata: byteArray,\n\t\t\tformat: EXRHeader.channels.length == 4 ? RGBAFormat : RGBFormat,\n\t\t\ttype: this.type\n\t\t};\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = false;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\n\n\t}\n\n} );\n\nexport { EXRLoader };\n"]}