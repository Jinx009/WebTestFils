{"version":3,"sources":["VRMLLoader.js"],"names":[],"mappings":"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","file":"VRMLLoader-compiled.js","sourcesContent":["/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport {\n\tBackSide,\n\tBoxBufferGeometry,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tConeBufferGeometry,\n\tCylinderBufferGeometry,\n\tDoubleSide,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tFrontSide,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tLoaderUtils,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhongMaterial,\n\tObject3D,\n\tPoints,\n\tPointsMaterial,\n\tRepeatWrapping,\n\tScene,\n\tSphereBufferGeometry,\n\tTextureLoader,\n\tVector2,\n\tVector3,\n\tVertexColors\n} from \"../../../build/three.module.js\";\nimport { chevrotain } from \"../libs/chevrotain.module.min.js\";\n\n/* global chevrotain */\n\nvar VRMLLoader = ( function () {\n\n\t// dependency check\n\n\tif ( typeof chevrotain === 'undefined' ) {\n\n\t\tthrow Error( 'THREE.VRMLLoader: External library chevrotain.min.js required.' );\n\n\t}\n\n\t// class definitions\n\n\tfunction VRMLLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tVRMLLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: VRMLLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( data, path ) {\n\n\t\t\tvar nodeMap = {};\n\n\t\t\tfunction generateVRMLTree( data ) {\n\n\t\t\t\t// create lexer, parser and visitor\n\n\t\t\t\tvar tokenData = createTokens();\n\n\t\t\t\tvar lexer = new VRMLLexer( tokenData.tokens );\n\t\t\t\tvar parser = new VRMLParser( tokenData.tokenVocabulary );\n\t\t\t\tvar visitor = createVisitor( parser.getBaseCstVisitorConstructor() );\n\n\t\t\t\t// lexing\n\n\t\t\t\tvar lexingResult = lexer.lex( data );\n\t\t\t\tparser.input = lexingResult.tokens;\n\n\t\t\t\t// parsing\n\n\t\t\t\tvar cstOutput = parser.vrml();\n\n\t\t\t\tif ( parser.errors.length > 0 ) {\n\n\t\t\t\t\tconsole.error( parser.errors );\n\n\t\t\t\t\tthrow Error( 'THREE.VRMLLoader: Parsing errors detected.' );\n\n\t\t\t\t}\n\n\t\t\t\t// actions\n\n\t\t\t\tvar ast = visitor.visit( cstOutput );\n\n\t\t\t\treturn ast;\n\n\t\t\t}\n\n\t\t\tfunction createTokens() {\n\n\t\t\t\tvar createToken = chevrotain.createToken;\n\n\t\t\t\t// from http://gun.teipir.gr/VRML-amgem/spec/part1/concepts.html#SyntaxBasics\n\n\t\t\t\tvar RouteIdentifier = createToken( { name: 'RouteIdentifier', pattern: /[^\\x30-\\x39\\0-\\x20\\x22\\x27\\x23\\x2b\\x2c\\x2d\\x2e\\x5b\\x5d\\x5c\\x7b\\x7d][^\\0-\\x20\\x22\\x27\\x23\\x2b\\x2c\\x2d\\x2e\\x5b\\x5d\\x5c\\x7b\\x7d]*[\\.][^\\x30-\\x39\\0-\\x20\\x22\\x27\\x23\\x2b\\x2c\\x2d\\x2e\\x5b\\x5d\\x5c\\x7b\\x7d][^\\0-\\x20\\x22\\x27\\x23\\x2b\\x2c\\x2d\\x2e\\x5b\\x5d\\x5c\\x7b\\x7d]*/ } );\n\t\t\t\tvar Identifier = createToken( { name: 'Identifier', pattern: /[^\\x30-\\x39\\0-\\x20\\x22\\x27\\x23\\x2b\\x2c\\x2d\\x2e\\x5b\\x5d\\x5c\\x7b\\x7d][^\\0-\\x20\\x22\\x27\\x23\\x2b\\x2c\\x2d\\x2e\\x5b\\x5d\\x5c\\x7b\\x7d]*/, longer_alt: RouteIdentifier } );\n\n\t\t\t\t// from http://gun.teipir.gr/VRML-amgem/spec/part1/nodesRef.html\n\n\t\t\t\tvar nodeTypes = [\n\t\t\t\t\t'Anchor', 'Billboard', 'Collision', 'Group', 'Transform', // grouping nodes\n\t\t\t\t\t'Inline', 'LOD', 'Switch', // special groups\n\t\t\t\t\t'AudioClip', 'DirectionalLight', 'PointLight', 'Script', 'Shape', 'Sound', 'SpotLight', 'WorldInfo', // common nodes\n\t\t\t\t\t'CylinderSensor', 'PlaneSensor', 'ProximitySensor', 'SphereSensor', 'TimeSensor', 'TouchSensor', 'VisibilitySensor', // sensors\n\t\t\t\t\t'Box', 'Cone', 'Cylinder', 'ElevationGrid', 'Extrusion', 'IndexedFaceSet', 'IndexedLineSet', 'PointSet', 'Sphere', // geometries\n\t\t\t\t\t'Color', 'Coordinate', 'Normal', 'TextureCoordinate', // geometric properties\n\t\t\t\t\t'Appearance', 'FontStyle', 'ImageTexture', 'Material', 'MovieTexture', 'PixelTexture', 'TextureTransform', // appearance\n\t\t\t\t\t'ColorInterpolator', 'CoordinateInterpolator', 'NormalInterpolator', 'OrientationInterpolator', 'PositionInterpolator', 'ScalarInterpolator', // interpolators\n\t\t\t\t\t'Background', 'Fog', 'NavigationInfo', 'Viewpoint', // bindable nodes\n\t\t\t\t\t'Text' // Text must be placed at the end of the regex so there are no matches for TextureTransform and TextureCoordinate\n\t\t\t\t];\n\n\t\t\t\t//\n\n\t\t\t\tvar Version = createToken( {\n\t\t\t\t\tname: 'Version',\n\t\t\t\t\tpattern: /#VRML.*/,\n\t\t\t\t\tlonger_alt: Identifier\n\t\t\t\t} );\n\n\t\t\t\tvar NodeName = createToken( {\n\t\t\t\t\tname: 'NodeName',\n\t\t\t\t\tpattern: new RegExp( nodeTypes.join( '|' ) ),\n\t\t\t\t\tlonger_alt: Identifier\n\t\t\t\t} );\n\n\t\t\t\tvar DEF = createToken( {\n\t\t\t\t\tname: 'DEF',\n\t\t\t\t\tpattern: /DEF/,\n\t\t\t\t\tlonger_alt: Identifier\n\t\t\t\t} );\n\n\t\t\t\tvar USE = createToken( {\n\t\t\t\t\tname: 'USE',\n\t\t\t\t\tpattern: /USE/,\n\t\t\t\t\tlonger_alt: Identifier\n\t\t\t\t} );\n\n\t\t\t\tvar ROUTE = createToken( {\n\t\t\t\t\tname: 'ROUTE',\n\t\t\t\t\tpattern: /ROUTE/,\n\t\t\t\t\tlonger_alt: Identifier\n\t\t\t\t} );\n\n\t\t\t\tvar TO = createToken( {\n\t\t\t\t\tname: 'TO',\n\t\t\t\t\tpattern: /TO/,\n\t\t\t\t\tlonger_alt: Identifier\n\t\t\t\t} );\n\n\t\t\t\t//\n\n\t\t\t\tvar StringLiteral = createToken( { name: \"StringLiteral\", pattern: /\"(:?[^\\\\\"\\n\\r]+|\\\\(:?[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"/ } );\n\t\t\t\tvar NumberLiteral = createToken( { name: 'NumberLiteral', pattern: /[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?/ } );\n\t\t\t\tvar TrueLiteral = createToken( { name: 'TrueLiteral', pattern: /TRUE/ } );\n\t\t\t\tvar FalseLiteral = createToken( { name: 'FalseLiteral', pattern: /FALSE/ } );\n\t\t\t\tvar NullLiteral = createToken( { name: 'NullLiteral', pattern: /NULL/ } );\n\t\t\t\tvar LSquare = createToken( { name: 'LSquare', pattern: /\\[/ } );\n\t\t\t\tvar RSquare = createToken( { name: 'RSquare', pattern: /]/ } );\n\t\t\t\tvar LCurly = createToken( { name: 'LCurly', pattern: /{/ } );\n\t\t\t\tvar RCurly = createToken( { name: 'RCurly', pattern: /}/ } );\n\t\t\t\tvar Comment = createToken( {\n\t\t\t\t\tname: 'Comment',\n\t\t\t\t\tpattern: /#.*/,\n\t\t\t\t\tgroup: chevrotain.Lexer.SKIPPED\n\t\t\t\t} );\n\n\t\t\t\t// commas, blanks, tabs, newlines and carriage returns are whitespace characters wherever they appear outside of string fields\n\n\t\t\t\tvar WhiteSpace = createToken( {\n\t\t\t\t\tname: 'WhiteSpace',\n\t\t\t\t\tpattern: /[ ,\\s]/,\n\t\t\t\t\tgroup: chevrotain.Lexer.SKIPPED\n\t\t\t\t} );\n\n\t\t\t\tvar tokens = [\n\t\t\t\t\tWhiteSpace,\n\t\t\t\t\t// keywords appear before the Identifier\n\t\t\t\t\tNodeName,\n\t\t\t\t\tDEF,\n\t\t\t\t\tUSE,\n\t\t\t\t\tROUTE,\n\t\t\t\t\tTO,\n\t\t\t\t\tTrueLiteral,\n\t\t\t\t\tFalseLiteral,\n\t\t\t\t\tNullLiteral,\n\t\t\t\t\t// the Identifier must appear after the keywords because all keywords are valid identifiers\n\t\t\t\t\tVersion,\n\t\t\t\t\tIdentifier,\n\t\t\t\t\tRouteIdentifier,\n\t\t\t\t\tStringLiteral,\n\t\t\t\t\tNumberLiteral,\n\t\t\t\t\tLSquare,\n\t\t\t\t\tRSquare,\n\t\t\t\t\tLCurly,\n\t\t\t\t\tRCurly,\n\t\t\t\t\tComment\n\t\t\t\t];\n\n\t\t\t\tvar tokenVocabulary = {};\n\n\t\t\t\tfor ( var i = 0, l = tokens.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar token = tokens[ i ];\n\n\t\t\t\t\ttokenVocabulary[ token.name ] = token;\n\n\t\t\t\t}\n\n\t\t\t\treturn { tokens: tokens, tokenVocabulary: tokenVocabulary };\n\n\t\t\t}\n\n\n\t\t\tfunction createVisitor( BaseVRMLVisitor ) {\n\n\t\t\t\t// the visitor is created dynmaically based on the given base class\n\n\t\t\t\tfunction VRMLToASTVisitor() {\n\n\t\t\t\t\tBaseVRMLVisitor.call( this );\n\n\t\t\t\t\tthis.validateVisitor();\n\n\t\t\t\t}\n\n\t\t\t\tVRMLToASTVisitor.prototype = Object.assign( Object.create( BaseVRMLVisitor.prototype ), {\n\n\t\t\t\t\tconstructor: VRMLToASTVisitor,\n\n\t\t\t\t\tvrml: function ( ctx ) {\n\n\t\t\t\t\t\tvar data = {\n\t\t\t\t\t\t\tversion: this.visit( ctx.version ),\n\t\t\t\t\t\t\tnodes: [],\n\t\t\t\t\t\t\troutes: []\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfor ( var i = 0, l = ctx.node.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar node = ctx.node[ i ];\n\n\t\t\t\t\t\t\tdata.nodes.push( this.visit( node ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ctx.route ) {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ctx.route.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar route = ctx.route[ i ];\n\n\t\t\t\t\t\t\t\tdata.routes.push( this.visit( route ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn data;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tversion: function ( ctx ) {\n\n\t\t\t\t\t\treturn ctx.Version[ 0 ].image;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tnode: function ( ctx ) {\n\n\t\t\t\t\t\tvar data = {\n\t\t\t\t\t\t\tname: ctx.NodeName[ 0 ].image,\n\t\t\t\t\t\t\tfields: []\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ( ctx.field ) {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ctx.field.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar field = ctx.field[ i ];\n\n\t\t\t\t\t\t\t\tdata.fields.push( this.visit( field ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// DEF\n\n\t\t\t\t\t\tif ( ctx.def ) {\n\n\t\t\t\t\t\t\tdata.DEF = this.visit( ctx.def[ 0 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn data;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfield: function ( ctx ) {\n\n\t\t\t\t\t\tvar data = {\n\t\t\t\t\t\t\tname: ctx.Identifier[ 0 ].image,\n\t\t\t\t\t\t\ttype: null,\n\t\t\t\t\t\t\tvalues: null\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar result;\n\n\t\t\t\t\t\t// SFValue\n\n\t\t\t\t\t\tif ( ctx.singleFieldValue ) {\n\n\t\t\t\t\t\t\tresult = this.visit( ctx.singleFieldValue[ 0 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// MFValue\n\n\t\t\t\t\t\tif ( ctx.multiFieldValue ) {\n\n\t\t\t\t\t\t\tresult = this.visit( ctx.multiFieldValue[ 0 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata.type = result.type;\n\t\t\t\t\t\tdata.values = result.values;\n\n\t\t\t\t\t\treturn data;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tdef: function ( ctx ) {\n\n\t\t\t\t\t\treturn ctx.Identifier[ 0 ].image;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tuse: function ( ctx ) {\n\n\t\t\t\t\t\treturn { USE: ctx.Identifier[ 0 ].image };\n\n\t\t\t\t\t},\n\n\t\t\t\t\tsingleFieldValue: function ( ctx ) {\n\n\t\t\t\t\t\treturn processField( this, ctx );\n\n\t\t\t\t\t},\n\n\t\t\t\t\tmultiFieldValue: function ( ctx ) {\n\n\t\t\t\t\t\treturn processField( this, ctx );\n\n\t\t\t\t\t},\n\n\t\t\t\t\troute: function ( ctx ) {\n\n\t\t\t\t\t\tvar data = {\n\t\t\t\t\t\t\tFROM: ctx.RouteIdentifier[ 0 ].image,\n\t\t\t\t\t\t\tTO: ctx.RouteIdentifier[ 1 ].image\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn data;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tfunction processField( scope, ctx ) {\n\n\t\t\t\t\tvar field = {\n\t\t\t\t\t\ttype: null,\n\t\t\t\t\t\tvalues: []\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( ctx.node ) {\n\n\t\t\t\t\t\tfield.type = 'node';\n\n\t\t\t\t\t\tfor ( var i = 0, l = ctx.node.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar node = ctx.node[ i ];\n\n\t\t\t\t\t\t\tfield.values.push( scope.visit( node ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ctx.use ) {\n\n\t\t\t\t\t\tfield.type = 'use';\n\n\t\t\t\t\t\tfor ( var i = 0, l = ctx.use.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar use = ctx.use[ i ];\n\n\t\t\t\t\t\t\tfield.values.push( scope.visit( use ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ctx.StringLiteral ) {\n\n\t\t\t\t\t\tfield.type = 'string';\n\n\t\t\t\t\t\tfor ( var i = 0, l = ctx.StringLiteral.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar stringLiteral = ctx.StringLiteral[ i ];\n\n\t\t\t\t\t\t\tfield.values.push( stringLiteral.image.replace( /'|\"/g, '' ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ctx.NumberLiteral ) {\n\n\t\t\t\t\t\tfield.type = 'number';\n\n\t\t\t\t\t\tfor ( var i = 0, l = ctx.NumberLiteral.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar numberLiteral = ctx.NumberLiteral[ i ];\n\n\t\t\t\t\t\t\tfield.values.push( parseFloat( numberLiteral.image ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ctx.TrueLiteral ) {\n\n\t\t\t\t\t\tfield.type = 'boolean';\n\n\t\t\t\t\t\tfor ( var i = 0, l = ctx.TrueLiteral.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar trueLiteral = ctx.TrueLiteral[ i ];\n\n\t\t\t\t\t\t\tif ( trueLiteral.image === 'TRUE' ) field.values.push( true );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ctx.FalseLiteral ) {\n\n\t\t\t\t\t\tfield.type = 'boolean';\n\n\t\t\t\t\t\tfor ( var i = 0, l = ctx.FalseLiteral.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar falseLiteral = ctx.FalseLiteral[ i ];\n\n\t\t\t\t\t\t\tif ( falseLiteral.image === 'FALSE' ) field.values.push( false );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ctx.NullLiteral ) {\n\n\t\t\t\t\t\tfield.type = 'null';\n\n\t\t\t\t\t\tctx.NullLiteral.forEach( function () {\n\n\t\t\t\t\t\t\tfield.values.push( null );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn field;\n\n\t\t\t\t}\n\n\t\t\t\treturn new VRMLToASTVisitor();\n\n\t\t\t}\n\n\t\t\tfunction parseTree( tree ) {\n\n\t\t\t\t// console.log( JSON.stringify( tree, null, 2 ) );\n\n\t\t\t\tvar nodes = tree.nodes;\n\t\t\t\tvar scene = new Scene();\n\n\t\t\t\t// first iteration: build nodemap based on DEF statements\n\n\t\t\t\tfor ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar node = nodes[ i ];\n\n\t\t\t\t\tbuildNodeMap( node );\n\n\t\t\t\t}\n\n\t\t\t\t// second iteration: build nodes\n\n\t\t\t\tfor ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar node = nodes[ i ];\n\t\t\t\t\tvar object = getNode( node );\n\n\t\t\t\t\tif ( object instanceof Object3D ) scene.add( object );\n\n\t\t\t\t}\n\n\t\t\t\treturn scene;\n\n\t\t\t}\n\n\t\t\tfunction buildNodeMap( node ) {\n\n\t\t\t\tif ( node.DEF ) {\n\n\t\t\t\t\tnodeMap[ node.DEF ] = node;\n\n\t\t\t\t}\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\n\t\t\t\t\tif ( field.type === 'node' ) {\n\n\t\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = fieldValues.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tbuildNodeMap( fieldValues[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction getNode( node ) {\n\n\t\t\t\t// handle case where a node refers to a different one\n\n\t\t\t\tif ( node.USE ) {\n\n\t\t\t\t\treturn resolveUSE( node.USE );\n\n\t\t\t\t}\n\n\t\t\t\tif ( node.build !== undefined ) return node.build;\n\n\t\t\t\tnode.build = buildNode( node );\n\n\t\t\t\treturn node.build;\n\n\t\t\t}\n\n\t\t\t// node builder\n\n\t\t\tfunction buildNode( node ) {\n\n\t\t\t\tvar nodeName = node.name;\n\t\t\t\tvar build;\n\n\t\t\t\tswitch ( nodeName ) {\n\n\t\t\t\t\tcase 'Group':\n\t\t\t\t\tcase 'Transform':\n\t\t\t\t\t\tbuild = buildGroupingNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Background':\n\t\t\t\t\t\tbuild = buildBackgroundNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Shape':\n\t\t\t\t\t\tbuild = buildShapeNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Appearance':\n\t\t\t\t\t\tbuild = buildApperanceNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Material':\n\t\t\t\t\t\tbuild = buildMaterialNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ImageTexture':\n\t\t\t\t\t\tbuild = buildImageTextureNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TextureTransform':\n\t\t\t\t\t\tbuild = buildTextureTransformNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'IndexedFaceSet':\n\t\t\t\t\t\tbuild = buildIndexedFaceSetNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'IndexedLineSet':\n\t\t\t\t\t\tbuild = buildIndexedLineSetNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointSet':\n\t\t\t\t\t\tbuild = buildPointSetNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Box':\n\t\t\t\t\t\tbuild = buildBoxNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Cone':\n\t\t\t\t\t\tbuild = buildConeNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Cylinder':\n\t\t\t\t\t\tbuild = buildCylinderNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sphere':\n\t\t\t\t\t\tbuild = buildSphereNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Color':\n\t\t\t\t\tcase 'Coordinate':\n\t\t\t\t\tcase 'Normal':\n\t\t\t\t\tcase 'TextureCoordinate':\n\t\t\t\t\t\tbuild = buildGeometricNode( node );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Anchor':\n\t\t\t\t\tcase 'Billboard':\n\t\t\t\t\tcase 'Collision':\n\n\t\t\t\t\tcase 'Inline':\n\t\t\t\t\tcase 'LOD':\n\t\t\t\t\tcase 'Switch':\n\n\t\t\t\t\tcase 'AudioClip':\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\tcase 'Script':\n\t\t\t\t\tcase 'Sound':\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tcase 'WorldInfo':\n\n\t\t\t\t\tcase 'CylinderSensor':\n\t\t\t\t\tcase 'PlaneSensor':\n\t\t\t\t\tcase 'ProximitySensor':\n\t\t\t\t\tcase 'SphereSensor':\n\t\t\t\t\tcase 'TimeSensor':\n\t\t\t\t\tcase 'TouchSensor':\n\t\t\t\t\tcase 'VisibilitySensor':\n\n\t\t\t\t\tcase 'ElevationGrid':\n\t\t\t\t\tcase 'Extrusion':\n\t\t\t\t\tcase 'Text':\n\n\t\t\t\t\tcase 'FontStyle':\n\t\t\t\t\tcase 'MovieTexture':\n\t\t\t\t\tcase 'PixelTexture':\n\n\t\t\t\t\tcase 'ColorInterpolator':\n\t\t\t\t\tcase 'CoordinateInterpolator':\n\t\t\t\t\tcase 'NormalInterpolator':\n\t\t\t\t\tcase 'OrientationInterpolator':\n\t\t\t\t\tcase 'PositionInterpolator':\n\t\t\t\t\tcase 'ScalarInterpolator':\n\n\t\t\t\t\tcase 'Fog':\n\t\t\t\t\tcase 'NavigationInfo':\n\t\t\t\t\tcase 'Viewpoint':\n\t\t\t\t\t\t// node not supported yet\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown node:', nodeName );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn build;\n\n\t\t\t}\n\n\t\t\tfunction buildGroupingNode( node ) {\n\n\t\t\t\tvar object = new Group();\n\n\t\t\t\t//\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'center':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'children':\n\t\t\t\t\t\t\tparseFieldChildren( fieldValues, object );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'rotation':\n\t\t\t\t\t\t\tvar axis = new Vector3( fieldValues[ 0 ], fieldValues[ 1 ], fieldValues[ 2 ] );\n\t\t\t\t\t\t\tvar angle = fieldValues[ 3 ];\n\t\t\t\t\t\t\tobject.quaternion.setFromAxisAngle( axis, angle );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\tobject.scale.set( fieldValues[ 0 ], fieldValues[ 1 ], fieldValues[ 2 ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'scaleOrientation':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'translation':\n\t\t\t\t\t\t\tobject.position.set( fieldValues[ 0 ], fieldValues[ 1 ], fieldValues[ 2 ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'bboxCenter':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'bboxSize':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t\tfunction buildBackgroundNode( node ) {\n\n\t\t\t\tvar group = new Group();\n\n\t\t\t\tvar groundAngle, groundColor;\n\t\t\t\tvar skyAngle, skyColor;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'groundAngle':\n\t\t\t\t\t\t\tgroundAngle = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'groundColor':\n\t\t\t\t\t\t\tgroundColor = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'backUrl':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'bottomUrl':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'frontUrl':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'leftUrl':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'rightUrl':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'topUrl':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'skyAngle':\n\t\t\t\t\t\t\tskyAngle = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'skyColor':\n\t\t\t\t\t\t\tskyColor = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// sky\n\n\t\t\t\tif ( skyColor ) {\n\n\t\t\t\t\tvar radius = 10000;\n\n\t\t\t\t\tvar skyGeometry = new SphereBufferGeometry( radius, 32, 16 );\n\t\t\t\t\tvar skyMaterial = new MeshBasicMaterial( { fog: false, side: BackSide, depthWrite: false, depthTest: false } );\n\n\t\t\t\t\tif ( skyColor.length > 3 ) {\n\n\t\t\t\t\t\tpaintFaces( skyGeometry, radius, skyAngle, toColorArray( skyColor ), true );\n\t\t\t\t\t\tskyMaterial.vertexColors = VertexColors;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tskyMaterial.color.setRGB( skyColor[ 0 ], skyColor[ 1 ], skyColor[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar sky = new Mesh( skyGeometry, skyMaterial );\n\t\t\t\t\tgroup.add( sky );\n\n\t\t\t\t}\n\n\t\t\t\t// ground\n\n\t\t\t\tif ( groundColor ) {\n\n\t\t\t\t\tif ( groundColor.length > 0 ) {\n\n\t\t\t\t\t\tvar groundGeometry = new SphereBufferGeometry( radius, 32, 16, 0, 2 * Math.PI, 0.5 * Math.PI, 1.5 * Math.PI );\n\t\t\t\t\t\tvar groundMaterial = new MeshBasicMaterial( { fog: false, side: BackSide, vertexColors: VertexColors, depthWrite: false, depthTest: false } );\n\n\t\t\t\t\t\tpaintFaces( groundGeometry, radius, groundAngle, toColorArray( groundColor ), false );\n\n\t\t\t\t\t\tvar ground = new Mesh( groundGeometry, groundMaterial );\n\t\t\t\t\t\tgroup.add( ground );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// render background group first\n\n\t\t\t\tgroup.renderOrder = - Infinity;\n\n\t\t\t\treturn group;\n\n\t\t\t}\n\n\t\t\tfunction buildShapeNode( node ) {\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\t// if the appearance field is NULL or unspecified, lighting is off and the unlit object color is (0, 0, 0)\n\n\t\t\t\tvar material = new MeshBasicMaterial( { color: 0x000000 } );\n\t\t\t\tvar geometry;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'appearance':\n\t\t\t\t\t\t\tif ( fieldValues[ 0 ] !== null ) {\n\n\t\t\t\t\t\t\t\tmaterial = getNode( fieldValues[ 0 ] );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'geometry':\n\t\t\t\t\t\t\tif ( fieldValues[ 0 ] !== null ) {\n\n\t\t\t\t\t\t\t\tgeometry = getNode( fieldValues[ 0 ] );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// build 3D object\n\n\t\t\t\tvar object;\n\n\t\t\t\tif ( geometry && geometry.attributes.position ) {\n\n\t\t\t\t\tvar type = geometry._type;\n\n\t\t\t\t\tif ( type === 'points' ) { // points\n\n\t\t\t\t\t\tvar pointsMaterial = new PointsMaterial( { color: 0xffffff } );\n\n\t\t\t\t\t\tif ( geometry.attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tpointsMaterial.vertexColors = VertexColors;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if the color field is NULL and there is a material defined for the appearance affecting this PointSet, then use the emissiveColor of the material to draw the points\n\n\t\t\t\t\t\t\tif ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\t\t\t\tpointsMaterial.color.copy( material.emissive );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobject = new Points( geometry, pointsMaterial );\n\n\t\t\t\t\t} else if ( type === 'line' ) { // lines\n\n\t\t\t\t\t\tvar lineMaterial = new LineBasicMaterial( { color: 0xffffff } );\n\n\t\t\t\t\t\tif ( geometry.attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tlineMaterial.vertexColors = VertexColors;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if the color field is NULL and there is a material defined for the appearance affecting this IndexedLineSet, then use the emissiveColor of the material to draw the lines\n\n\t\t\t\t\t\t\tif ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\t\t\t\tlineMaterial.color.copy( material.emissive );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobject = new LineSegments( geometry, lineMaterial );\n\n\t\t\t\t\t} else { // consider meshes\n\n\t\t\t\t\t\t// check \"solid\" hint (it's placed in the geometry but affects the material)\n\n\t\t\t\t\t\tif ( geometry._solid !== undefined ) {\n\n\t\t\t\t\t\t\tmaterial.side = ( geometry._solid ) ? FrontSide : DoubleSide;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// check for vertex colors\n\n\t\t\t\t\t\tif ( geometry.attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tmaterial.vertexColors = VertexColors;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t\t\t// if the geometry field is NULL or no vertices are defined the object is not drawn\n\n\t\t\t\t\tobject.visible = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t\tfunction buildApperanceNode( node ) {\n\n\t\t\t\tvar material = new MeshPhongMaterial();\n\t\t\t\tvar transformData;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'material':\n\t\t\t\t\t\t\tif ( fieldValues[ 0 ] !== null ) {\n\n\t\t\t\t\t\t\t\tvar materialData = getNode( fieldValues[ 0 ] );\n\n\t\t\t\t\t\t\t\tif ( materialData.diffuseColor ) material.color.copy( materialData.diffuseColor );\n\t\t\t\t\t\t\t\tif ( materialData.emissiveColor ) material.emissive.copy( materialData.emissiveColor );\n\t\t\t\t\t\t\t\tif ( materialData.shininess ) material.shininess = materialData.shininess;\n\t\t\t\t\t\t\t\tif ( materialData.specularColor ) material.specular.copy( materialData.specularColor );\n\t\t\t\t\t\t\t\tif ( materialData.transparency ) material.opacity = 1 - materialData.transparency;\n\t\t\t\t\t\t\t\tif ( materialData.transparency > 0 ) material.transparent = true;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// if the material field is NULL or unspecified, lighting is off and the unlit object color is (0, 0, 0)\n\n\t\t\t\t\t\t\t\tmaterial = new MeshBasicMaterial( { color: 0x000000 } );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\t\tvar textureNode = fieldValues[ 0 ];\n\t\t\t\t\t\t\tif ( textureNode !== null ) {\n\n\t\t\t\t\t\t\t\tif ( textureNode.name === 'ImageTexture' ) {\n\n\t\t\t\t\t\t\t\t\tmaterial.map = getNode( textureNode );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// MovieTexture and PixelTexture not supported yet\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'textureTransform':\n\t\t\t\t\t\t\tif ( fieldValues[ 0 ] !== null ) {\n\n\t\t\t\t\t\t\t\ttransformData = getNode( fieldValues[ 0 ] );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// only apply texture transform data if a texture was defined\n\n\t\t\t\tif ( material.map && transformData ) {\n\n\t\t\t\t\tmaterial.map.center.copy( transformData.center );\n\t\t\t\t\tmaterial.map.rotation = transformData.rotation;\n\t\t\t\t\tmaterial.map.repeat.copy( transformData.scale );\n\t\t\t\t\tmaterial.map.offset.copy( transformData.translation );\n\n\t\t\t\t}\n\n\t\t\t\treturn material;\n\n\t\t\t}\n\n\t\t\tfunction buildMaterialNode( node ) {\n\n\t\t\t\tvar materialData = {};\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'ambientIntensity':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'diffuseColor':\n\t\t\t\t\t\t\tmaterialData.diffuseColor = new Color( fieldValues[ 0 ], fieldValues[ 1 ], fieldValues[ 2 ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'emissiveColor':\n\t\t\t\t\t\t\tmaterialData.emissiveColor = new Color( fieldValues[ 0 ], fieldValues[ 1 ], fieldValues[ 2 ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'shininess':\n\t\t\t\t\t\t\tmaterialData.shininess = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'specularColor':\n\t\t\t\t\t\t\tmaterialData.emissiveColor = new Color( fieldValues[ 0 ], fieldValues[ 1 ], fieldValues[ 2 ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tmaterialData.transparency = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn materialData;\n\n\t\t\t}\n\n\t\t\tfunction buildImageTextureNode( node ) {\n\n\t\t\t\tvar texture;\n\t\t\t\tvar wrapS = RepeatWrapping;\n\t\t\t\tvar wrapT = RepeatWrapping;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'url':\n\t\t\t\t\t\t\tvar url = fieldValues[ 0 ];\n\t\t\t\t\t\t\tif ( url ) texture = textureLoader.load( url );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'repeatS':\n\t\t\t\t\t\t\tif ( fieldValues[ 0 ] === false ) wrapS = ClampToEdgeWrapping;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'repeatT':\n\t\t\t\t\t\t\tif ( fieldValues[ 0 ] === false ) wrapT = ClampToEdgeWrapping;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture ) {\n\n\t\t\t\t\ttexture.wrapS = wrapS;\n\t\t\t\t\ttexture.wrapT = wrapT;\n\n\t\t\t\t}\n\n\t\t\t\treturn texture;\n\n\t\t\t}\n\n\t\t\tfunction buildTextureTransformNode( node ) {\n\n\t\t\t\tvar transformData = {\n\t\t\t\t\tcenter: new Vector2(),\n\t\t\t\t\trotation: new Vector2(),\n\t\t\t\t\tscale: new Vector2(),\n\t\t\t\t\ttranslation: new Vector2()\n\t\t\t\t};\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'center':\n\t\t\t\t\t\t\ttransformData.center.set( fieldValues[ 0 ], fieldValues[ 1 ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'rotation':\n\t\t\t\t\t\t\ttransformData.rotation = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\ttransformData.scale.set( fieldValues[ 0 ], fieldValues[ 1 ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'translation':\n\t\t\t\t\t\t\ttransformData.translation.set( fieldValues[ 0 ], fieldValues[ 1 ] );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn transformData;\n\n\t\t\t}\n\n\t\t\tfunction buildGeometricNode( node ) {\n\n\t\t\t\treturn node.fields[ 0 ].values;\n\n\t\t\t}\n\n\t\t\tfunction buildIndexedFaceSetNode( node ) {\n\n\t\t\t\tvar color, coord, normal, texCoord;\n\t\t\t\tvar ccw = true, solid = true, creaseAngle = 0;\n\t\t\t\tvar colorIndex, coordIndex, normalIndex, texCoordIndex;\n\t\t\t\tvar colorPerVertex = true, normalPerVertex = true;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tvar colorNode = fieldValues[ 0 ];\n\n\t\t\t\t\t\t\tif ( colorNode !== null ) {\n\n\t\t\t\t\t\t\t\tcolor = getNode( colorNode );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'coord':\n\t\t\t\t\t\t\tvar coordNode = fieldValues[ 0 ];\n\n\t\t\t\t\t\t\tif ( coordNode !== null ) {\n\n\t\t\t\t\t\t\t\tcoord = getNode( coordNode );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'normal':\n\t\t\t\t\t\t\tvar normalNode = fieldValues[ 0 ];\n\n\t\t\t\t\t\t\tif ( normalNode !== null ) {\n\n\t\t\t\t\t\t\t\tnormal = getNode( normalNode );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'texCoord':\n\t\t\t\t\t\t\tvar texCoordNode = fieldValues[ 0 ];\n\n\t\t\t\t\t\t\tif ( texCoordNode !== null ) {\n\n\t\t\t\t\t\t\t\ttexCoord = getNode( texCoordNode );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ccw':\n\t\t\t\t\t\t\tccw = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'colorIndex':\n\t\t\t\t\t\t\tcolorIndex = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'colorPerVertex':\n\t\t\t\t\t\t\tcolorPerVertex = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'convex':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'coordIndex':\n\t\t\t\t\t\t\tcoordIndex = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'creaseAngle':\n\t\t\t\t\t\t\tcreaseAngle = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'normalIndex':\n\t\t\t\t\t\t\tnormalIndex = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'normalPerVertex':\n\t\t\t\t\t\t\tnormalPerVertex = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'solid':\n\t\t\t\t\t\t\tsolid = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'texCoordIndex':\n\t\t\t\t\t\t\ttexCoordIndex = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( coordIndex === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Missing coordIndex.' );\n\n\t\t\t\t\treturn new BufferGeometry(); // handle VRML files with incomplete geometry definition\n\n\t\t\t\t}\n\n\t\t\t\tvar triangulatedCoordIndex = triangulateFaceIndex( coordIndex, ccw );\n\n\t\t\t\tvar positionAttribute;\n\t\t\t\tvar colorAttribute;\n\t\t\t\tvar normalAttribute;\n\t\t\t\tvar uvAttribute;\n\n\t\t\t\tif ( color ) {\n\n\t\t\t\t\tif ( colorPerVertex === true ) {\n\n\t\t\t\t\t\tif ( colorIndex && colorIndex.length > 0 ) {\n\n\t\t\t\t\t\t\t// if the colorIndex field is not empty, then it is used to choose colors for each vertex of the IndexedFaceSet.\n\n\t\t\t\t\t\t\tvar triangulatedColorIndex = triangulateFaceIndex( colorIndex, ccw );\n\t\t\t\t\t\t\tcolorAttribute = computeAttributeFromIndexedData( triangulatedCoordIndex, triangulatedColorIndex, color, 3 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if the colorIndex field is empty, then the coordIndex field is used to choose colors from the Color node\n\n\t\t\t\t\t\t\tcolorAttribute = toNonIndexedAttribute( triangulatedCoordIndex, new Float32BufferAttribute( color, 3 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( colorIndex && colorIndex.length > 0 ) {\n\n\t\t\t\t\t\t\t// if the colorIndex field is not empty, then they are used to choose one color for each face of the IndexedFaceSet\n\n\t\t\t\t\t\t\tvar flattenFaceColors = flattenData( color, colorIndex );\n\t\t\t\t\t\t\tvar triangulatedFaceColors = triangulateFaceData( flattenFaceColors, coordIndex );\n\t\t\t\t\t\t\tcolorAttribute = computeAttributeFromFaceData( triangulatedCoordIndex, triangulatedFaceColors );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if the colorIndex field is empty, then the color are applied to each face of the IndexedFaceSet in order\n\n\t\t\t\t\t\t\tvar triangulatedFaceColors = triangulateFaceData( color, coordIndex );\n\t\t\t\t\t\t\tcolorAttribute = computeAttributeFromFaceData( triangulatedCoordIndex, triangulatedFaceColors );\n\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( normal ) {\n\n\t\t\t\t\tif ( normalPerVertex === true ) {\n\n\t\t\t\t\t\t// consider vertex normals\n\n\t\t\t\t\t\tif ( normalIndex && normalIndex.length > 0 ) {\n\n\t\t\t\t\t\t\t// if the normalIndex field is not empty, then it is used to choose normals for each vertex of the IndexedFaceSet.\n\n\t\t\t\t\t\t\tvar triangulatedNormalIndex = triangulateFaceIndex( normalIndex, ccw );\n\t\t\t\t\t\t\tnormalAttribute = computeAttributeFromIndexedData( triangulatedCoordIndex, triangulatedNormalIndex, normal, 3 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if the normalIndex field is empty, then the coordIndex field is used to choose normals from the Normal node\n\n\t\t\t\t\t\t\tnormalAttribute = toNonIndexedAttribute( triangulatedCoordIndex, new Float32BufferAttribute( normal, 3 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// consider face normals\n\n\t\t\t\t\t\tif ( normalIndex && normalIndex.length > 0 ) {\n\n\t\t\t\t\t\t\t// if the normalIndex field is not empty, then they are used to choose one normal for each face of the IndexedFaceSet\n\n\t\t\t\t\t\t\tvar flattenFaceNormals = flattenData( normal, normalIndex );\n\t\t\t\t\t\t\tvar triangulatedFaceNormals = triangulateFaceData( flattenFaceNormals, coordIndex );\n\t\t\t\t\t\t\tnormalAttribute = computeAttributeFromFaceData( triangulatedCoordIndex, triangulatedFaceNormals );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if the normalIndex field is empty, then the normals are applied to each face of the IndexedFaceSet in order\n\n\t\t\t\t\t\t\tvar triangulatedFaceNormals = triangulateFaceData( normal, coordIndex );\n\t\t\t\t\t\t\tnormalAttribute = computeAttributeFromFaceData( triangulatedCoordIndex, triangulatedFaceNormals );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if the normal field is NULL, then the loader should automatically generate normals, using creaseAngle to determine if and how normals are smoothed across shared vertices\n\n\t\t\t\t\tnormalAttribute = computeNormalAttribute( triangulatedCoordIndex, coord, creaseAngle );\n\n\t\t\t\t}\n\n\t\t\t\tif ( texCoord ) {\n\n\t\t\t\t\t// texture coordinates are always defined on vertex level\n\n\t\t\t\t\tif ( texCoordIndex && texCoordIndex.length > 0 ) {\n\n\t\t\t\t\t\t// if the texCoordIndex field is not empty, then it is used to choose texture coordinates for each vertex of the IndexedFaceSet.\n\n\t\t\t\t\t\tvar triangulatedTexCoordIndex = triangulateFaceIndex( texCoordIndex, ccw );\n\t\t\t\t\t\tuvAttribute = computeAttributeFromIndexedData( triangulatedCoordIndex, triangulatedTexCoordIndex, texCoord, 2 );\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// if the texCoordIndex field is empty, then the coordIndex array is used to choose texture coordinates from the TextureCoordinate node\n\n\t\t\t\t\t\tuvAttribute = toNonIndexedAttribute( triangulatedCoordIndex, new Float32BufferAttribute( texCoord, 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new BufferGeometry();\n\t\t\t\tpositionAttribute = toNonIndexedAttribute( triangulatedCoordIndex, new Float32BufferAttribute( coord, 3 ) );\n\n\t\t\t\tgeometry.setAttribute( 'position', positionAttribute );\n\t\t\t\tgeometry.setAttribute( 'normal', normalAttribute );\n\n\t\t\t\t// optional attributes\n\n\t\t\t\tif ( colorAttribute ) geometry.setAttribute( 'color', colorAttribute );\n\t\t\t\tif ( uvAttribute ) geometry.setAttribute( 'uv', uvAttribute );\n\n\t\t\t\t// \"solid\" influences the material so let's store it for later use\n\n\t\t\t\tgeometry._solid = solid;\n\t\t\t\tgeometry._type = 'mesh';\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\tfunction buildIndexedLineSetNode( node ) {\n\n\t\t\t\tvar color, coord;\n\t\t\t\tvar colorIndex, coordIndex;\n\t\t\t\tvar colorPerVertex = true;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tvar colorNode = fieldValues[ 0 ];\n\n\t\t\t\t\t\t\tif ( colorNode !== null ) {\n\n\t\t\t\t\t\t\t\tcolor = getNode( colorNode );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'coord':\n\t\t\t\t\t\t\tvar coordNode = fieldValues[ 0 ];\n\n\t\t\t\t\t\t\tif ( coordNode !== null ) {\n\n\t\t\t\t\t\t\t\tcoord = getNode( coordNode );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'colorIndex':\n\t\t\t\t\t\t\tcolorIndex = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'colorPerVertex':\n\t\t\t\t\t\t\tcolorPerVertex = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'coordIndex':\n\t\t\t\t\t\t\tcoordIndex = fieldValues;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// build lines\n\n\t\t\t\tvar colorAttribute;\n\n\t\t\t\tvar expandedLineIndex = expandLineIndex( coordIndex ); // create an index for three.js's linesegment primitive\n\n\t\t\t\tif ( color ) {\n\n\t\t\t\t\tif ( colorPerVertex === true ) {\n\n\t\t\t\t\t\tif ( colorIndex.length > 0 ) {\n\n\t\t\t\t\t\t\t// if the colorIndex field is not empty, then one color is used for each polyline of the IndexedLineSet.\n\n\t\t\t\t\t\t\tvar expandedColorIndex = expandLineIndex( colorIndex ); // compute colors for each line segment (rendering primitve)\n\t\t\t\t\t\t\tcolorAttribute = computeAttributeFromIndexedData( expandedLineIndex, expandedColorIndex, color, 3 ); // compute data on vertex level\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if the colorIndex field is empty, then the colors are applied to each polyline of the IndexedLineSet in order.\n\n\t\t\t\t\t\t\tcolorAttribute = toNonIndexedAttribute( expandedLineIndex, new Float32BufferAttribute( color, 3 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( colorIndex.length > 0 ) {\n\n\t\t\t\t\t\t\t// if the colorIndex field is not empty, then colors are applied to each vertex of the IndexedLineSet\n\n\t\t\t\t\t\t\tvar flattenLineColors = flattenData( color, colorIndex ); // compute colors for each VRML primitve\n\t\t\t\t\t\t\tvar expandedLineColors = expandLineData( flattenLineColors, coordIndex ); // compute colors for each line segment (rendering primitve)\n\t\t\t\t\t\t\tcolorAttribute = computeAttributeFromLineData( expandedLineIndex, expandedLineColors ); // compute data on vertex level\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if the colorIndex field is empty, then the coordIndex field is used to choose colors from the Color node\n\n\t\t\t\t\t\t\tvar expandedLineColors = expandLineData( color, coordIndex ); // compute colors for each line segment (rendering primitve)\n\t\t\t\t\t\t\tcolorAttribute = computeAttributeFromLineData( expandedLineIndex, expandedLineColors ); // compute data on vertex level\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\t\tvar positionAttribute = toNonIndexedAttribute( expandedLineIndex, new Float32BufferAttribute( coord, 3 ) );\n\t\t\t\tgeometry.setAttribute( 'position', positionAttribute );\n\n\t\t\t\tif ( colorAttribute ) geometry.setAttribute( 'color', colorAttribute );\n\n\t\t\t\tgeometry._type = 'line';\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\tfunction buildPointSetNode( node ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar color, coord;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tvar colorNode = fieldValues[ 0 ];\n\n\t\t\t\t\t\t\tif ( colorNode !== null ) {\n\n\t\t\t\t\t\t\t\tcolor = getNode( colorNode );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'coord':\n\t\t\t\t\t\t\tvar coordNode = fieldValues[ 0 ];\n\n\t\t\t\t\t\t\tif ( coordNode !== null ) {\n\n\t\t\t\t\t\t\t\tcoord = getNode( coordNode );\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( coord, 3 ) );\n\t\t\t\tif ( color ) geometry.setAttribute( 'color', new Float32BufferAttribute( color, 3 ) );\n\n\t\t\t\tgeometry._type = 'points';\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\tfunction buildBoxNode( node ) {\n\n\t\t\t\tvar size = new Vector3( 2, 2, 2 );\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'size':\n\t\t\t\t\t\t\tsize.x = fieldValues[ 0 ];\n\t\t\t\t\t\t\tsize.y = fieldValues[ 1 ];\n\t\t\t\t\t\t\tsize.z = fieldValues[ 2 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new BoxBufferGeometry( size.x, size.y, size.z );\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\tfunction buildConeNode( node ) {\n\n\t\t\t\tvar radius = 1, height = 2, openEnded = false;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\t\topenEnded = ! fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'bottomRadius':\n\t\t\t\t\t\t\tradius = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'height':\n\t\t\t\t\t\t\theight = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'side':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new ConeBufferGeometry( radius, height, 16, 1, openEnded );\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\tfunction buildCylinderNode( node ) {\n\n\t\t\t\tvar radius = 1, height = 2;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'radius':\n\t\t\t\t\t\t\tradius = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'height':\n\t\t\t\t\t\t\theight = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'side':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'top':\n\t\t\t\t\t\t\t// field not supported\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new CylinderBufferGeometry( radius, radius, height, 16, 1 );\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\tfunction buildSphereNode( node ) {\n\n\t\t\t\tvar radius = 1;\n\n\t\t\t\tvar fields = node.fields;\n\n\t\t\t\tfor ( var i = 0, l = fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar field = fields[ i ];\n\t\t\t\t\tvar fieldName = field.name;\n\t\t\t\t\tvar fieldValues = field.values;\n\n\t\t\t\t\tswitch ( fieldName ) {\n\n\t\t\t\t\t\tcase 'radius':\n\t\t\t\t\t\t\tradius = fieldValues[ 0 ];\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.VRMLLoader: Unknown field:', fieldName );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new SphereBufferGeometry( radius, 16, 16 );\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\t// helper functions\n\n\t\t\tfunction resolveUSE( identifier ) {\n\n\t\t\t\tvar node = nodeMap[ identifier ];\n\t\t\t\tvar build = getNode( node );\n\n\t\t\t\t// because the same 3D objects can have different transformations, it's necessary to clone them.\n\t\t\t\t// materials can be influenced by the geometry (e.g. vertex normals). cloning is necessary to avoid\n\t\t\t\t// any side effects\n\n\t\t\t\treturn ( build.isObject3D || build.isMaterial ) ? build.clone() : build;\n\n\t\t\t}\n\n\t\t\tfunction parseFieldChildren( children, owner ) {\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar object = getNode( children[ i ] );\n\n\t\t\t\t\tif ( object instanceof Object3D ) owner.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction triangulateFaceIndex( index, ccw ) {\n\n\t\t\t\tvar indices = [];\n\n\t\t\t\t// since face defintions can have more than three vertices, it's necessary to\n\t\t\t\t// perform a simple triangulation\n\n\t\t\t\tvar start = 0;\n\n\t\t\t\tfor ( var i = 0, l = index.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar i1 = index[ start ];\n\t\t\t\t\tvar i2 = index[ i + ( ccw ? 1 : 2 ) ];\n\t\t\t\t\tvar i3 = index[ i + ( ccw ? 2 : 1 ) ];\n\n\t\t\t\t\tindices.push( i1, i2, i3 );\n\n\t\t\t\t\t// an index of -1 indicates that the current face has ended and the next one begins\n\n\t\t\t\t\tif ( index[ i + 3 ] === - 1 || i + 3 >= l ) {\n\n\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\tstart = i + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn indices;\n\n\t\t\t}\n\n\t\t\tfunction triangulateFaceData( data, index ) {\n\n\t\t\t\tvar triangulatedData = [];\n\n\t\t\t\tvar start = 0;\n\n\t\t\t\tfor ( var i = 0, l = index.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar stride = start * 3;\n\n\t\t\t\t\tvar x = data[ stride ];\n\t\t\t\t\tvar y = data[ stride + 1 ];\n\t\t\t\t\tvar z = data[ stride + 2 ];\n\n\t\t\t\t\ttriangulatedData.push( x, y, z );\n\n\t\t\t\t\t// an index of -1 indicates that the current face has ended and the next one begins\n\n\t\t\t\t\tif ( index[ i + 3 ] === - 1 || i + 3 >= l ) {\n\n\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\tstart ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn triangulatedData;\n\n\t\t\t}\n\n\t\t\tfunction flattenData( data, index ) {\n\n\t\t\t\tvar flattenData = [];\n\n\t\t\t\tfor ( var i = 0, l = index.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar i1 = index[ i ];\n\n\t\t\t\t\tvar stride = i1 * 3;\n\n\t\t\t\t\tvar x = data[ stride ];\n\t\t\t\t\tvar y = data[ stride + 1 ];\n\t\t\t\t\tvar z = data[ stride + 2 ];\n\n\t\t\t\t\tflattenData.push( x, y, z );\n\n\t\t\t\t}\n\n\t\t\t\treturn flattenData;\n\n\t\t\t}\n\n\t\t\tfunction expandLineIndex( index ) {\n\n\t\t\t\tvar indices = [];\n\n\t\t\t\tfor ( var i = 0, l = index.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar i1 = index[ i ];\n\t\t\t\t\tvar i2 = index[ i + 1 ];\n\n\t\t\t\t\tindices.push( i1, i2 );\n\n\t\t\t\t\t// an index of -1 indicates that the current line has ended and the next one begins\n\n\t\t\t\t\tif ( index[ i + 2 ] === - 1 || i + 2 >= l ) {\n\n\t\t\t\t\t\ti += 2;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn indices;\n\n\t\t\t}\n\n\t\t\tfunction expandLineData( data, index ) {\n\n\t\t\t\tvar triangulatedData = [];\n\n\t\t\t\tvar start = 0;\n\n\t\t\t\tfor ( var i = 0, l = index.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar stride = start * 3;\n\n\t\t\t\t\tvar x = data[ stride ];\n\t\t\t\t\tvar y = data[ stride + 1 ];\n\t\t\t\t\tvar z = data[ stride + 2 ];\n\n\t\t\t\t\ttriangulatedData.push( x, y, z );\n\n\t\t\t\t\t// an index of -1 indicates that the current line has ended and the next one begins\n\n\t\t\t\t\tif ( index[ i + 2 ] === - 1 || i + 2 >= l ) {\n\n\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\tstart ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn triangulatedData;\n\n\t\t\t}\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfunction computeAttributeFromIndexedData( coordIndex, index, data, itemSize ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\t// we use the coordIndex.length as delimiter since normalIndex must contain at least as many indices\n\n\t\t\t\tfor ( var i = 0, l = coordIndex.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = index[ i ];\n\t\t\t\t\tvar b = index[ i + 1 ];\n\t\t\t\t\tvar c = index[ i + 2 ];\n\n\t\t\t\t\tif ( itemSize === 2 ) {\n\n\t\t\t\t\t\tuvA.fromArray( data, a * itemSize );\n\t\t\t\t\t\tuvB.fromArray( data, b * itemSize );\n\t\t\t\t\t\tuvC.fromArray( data, c * itemSize );\n\n\t\t\t\t\t\tarray.push( uvA.x, uvA.y );\n\t\t\t\t\t\tarray.push( uvB.x, uvB.y );\n\t\t\t\t\t\tarray.push( uvC.x, uvC.y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvA.fromArray( data, a * itemSize );\n\t\t\t\t\t\tvB.fromArray( data, b * itemSize );\n\t\t\t\t\t\tvC.fromArray( data, c * itemSize );\n\n\t\t\t\t\t\tarray.push( vA.x, vA.y, vA.z );\n\t\t\t\t\t\tarray.push( vB.x, vB.y, vB.z );\n\t\t\t\t\t\tarray.push( vC.x, vC.y, vC.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t\t\t}\n\n\t\t\tfunction computeAttributeFromFaceData( index, faceData ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, j = 0, l = index.length; i < l; i += 3, j ++ ) {\n\n\t\t\t\t\tvA.fromArray( faceData, j * 3 );\n\n\t\t\t\t\tarray.push( vA.x, vA.y, vA.z );\n\t\t\t\t\tarray.push( vA.x, vA.y, vA.z );\n\t\t\t\t\tarray.push( vA.x, vA.y, vA.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn new Float32BufferAttribute( array, 3 );\n\n\t\t\t}\n\n\t\t\tfunction computeAttributeFromLineData( index, lineData ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, j = 0, l = index.length; i < l; i += 2, j ++ ) {\n\n\t\t\t\t\tvA.fromArray( lineData, j * 3 );\n\n\t\t\t\t\tarray.push( vA.x, vA.y, vA.z );\n\t\t\t\t\tarray.push( vA.x, vA.y, vA.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn new Float32BufferAttribute( array, 3 );\n\n\t\t\t}\n\n\t\t\tfunction toNonIndexedAttribute( indices, attribute ) {\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Float32BufferAttribute( array2, itemSize );\n\n\t\t\t}\n\n\t\t\tvar ab = new Vector3();\n\t\t\tvar cb = new Vector3();\n\n\t\t\tfunction computeNormalAttribute( index, coord, creaseAngle ) {\n\n\t\t\t\tvar faces = [];\n\t\t\t\tvar vertexNormals = {};\n\n\t\t\t\t// prepare face and raw vertex normals\n\n\t\t\t\tfor ( var i = 0, l = index.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = index[ i ];\n\t\t\t\t\tvar b = index[ i + 1 ];\n\t\t\t\t\tvar c = index[ i + 2 ];\n\n\t\t\t\t\tvar face = new Face( a, b, c );\n\n\t\t\t\t\tvA.fromArray( coord, a * 3 );\n\t\t\t\t\tvB.fromArray( coord, b * 3 );\n\t\t\t\t\tvC.fromArray( coord, c * 3 );\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tcb.normalize();\n\n\t\t\t\t\tface.normal.copy( cb );\n\n\t\t\t\t\tif ( vertexNormals[ a ] === undefined ) vertexNormals[ a ] = [];\n\t\t\t\t\tif ( vertexNormals[ b ] === undefined ) vertexNormals[ b ] = [];\n\t\t\t\t\tif ( vertexNormals[ c ] === undefined ) vertexNormals[ c ] = [];\n\n\t\t\t\t\tvertexNormals[ a ].push( face.normal );\n\t\t\t\t\tvertexNormals[ b ].push( face.normal );\n\t\t\t\t\tvertexNormals[ c ].push( face.normal );\n\n\t\t\t\t\tfaces.push( face );\n\n\t\t\t\t}\n\n\t\t\t\t// compute vertex normals and build final geometry\n\n\t\t\t\tvar normals = [];\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tvar nA = weightedNormal( vertexNormals[ face.a ], face.normal, creaseAngle );\n\t\t\t\t\tvar nB = weightedNormal( vertexNormals[ face.b ], face.normal, creaseAngle );\n\t\t\t\t\tvar nC = weightedNormal( vertexNormals[ face.c ], face.normal, creaseAngle );\n\n\t\t\t\t\tvA.fromArray( coord, face.a * 3 );\n\t\t\t\t\tvB.fromArray( coord, face.b * 3 );\n\t\t\t\t\tvC.fromArray( coord, face.c * 3 );\n\n\t\t\t\t\tnormals.push( nA.x, nA.y, nA.z );\n\t\t\t\t\tnormals.push( nB.x, nB.y, nB.z );\n\t\t\t\t\tnormals.push( nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn new Float32BufferAttribute( normals, 3 );\n\n\t\t\t}\n\n\t\t\tfunction weightedNormal( normals, vector, creaseAngle ) {\n\n\t\t\t\tvar normal = new Vector3();\n\n\t\t\t\tif ( creaseAngle === 0 ) {\n\n\t\t\t\t\tnormal.copy( vector );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( normals[ i ].angleTo( vector ) < creaseAngle ) {\n\n\t\t\t\t\t\t\tnormal.add( normals[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn normal.normalize();\n\n\t\t\t}\n\n\t\t\tfunction toColorArray( colors ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\tarray.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Vertically paints the faces interpolating between the\n\t\t\t * specified colors at the specified angels. This is used for the Background\n\t\t\t * node, but could be applied to other nodes with multiple faces as well.\n\t\t\t *\n\t\t\t * When used with the Background node, default is directionIsDown is true if\n\t\t\t * interpolating the skyColor down from the Zenith. When interpolationg up from\n\t\t\t * the Nadir i.e. interpolating the groundColor, the directionIsDown is false.\n\t\t\t *\n\t\t\t * The first angle is never specified, it is the Zenith (0 rad). Angles are specified\n\t\t\t * in radians. The geometry is thought a sphere, but could be anything. The color interpolation\n\t\t\t * is linear along the Y axis in any case.\n\t\t\t *\n\t\t\t * You must specify one more color than you have angles at the beginning of the colors array.\n\t\t\t * This is the color of the Zenith (the top of the shape).\n\t\t\t *\n\t\t\t * @param {BufferGeometry} geometry\n\t\t\t * @param {number} radius\n\t\t\t * @param {array} angles\n\t\t\t * @param {array} colors\n\t\t\t * @param {boolean} topDown - Whether to work top down or bottom up.\n\t\t\t */\n\t\t\tfunction paintFaces( geometry, radius, angles, colors, topDown ) {\n\n\t\t\t\tvar direction = ( topDown === true ) ? 1 : - 1;\n\n\t\t\t\tvar coord = [], A = {}, B = {}, applyColor = false;\n\n\t\t\t\tfor ( var k = 0; k < angles.length; k ++ ) {\n\n\t\t\t\t\t// push the vector at which the color changes\n\n\t\t\t\t\tvar vec = {\n\t\t\t\t\t\tx: direction * ( Math.cos( angles[ k ] ) * radius ),\n\t\t\t\t\t\ty: direction * ( Math.sin( angles[ k ] ) * radius )\n\t\t\t\t\t};\n\n\t\t\t\t\tcoord.push( vec );\n\n\t\t\t\t}\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\tvar colorAttribute = new BufferAttribute( new Float32Array( geometry.attributes.position.count * 3 ), 3 );\n\n\t\t\t\tvar position = new Vector3();\n\t\t\t\tvar color = new Color();\n\n\t\t\t\tfor ( var i = 0; i < index.count; i ++ ) {\n\n\t\t\t\t\tvar vertexIndex = index.getX( i );\n\n\t\t\t\t\tposition.fromBufferAttribute( positionAttribute, vertexIndex );\n\n\t\t\t\t\tfor ( var j = 0; j < colors.length; j ++ ) {\n\n\t\t\t\t\t\t// linear interpolation between aColor and bColor, calculate proportion\n\t\t\t\t\t\t// A is previous point (angle)\n\n\t\t\t\t\t\tif ( j === 0 ) {\n\n\t\t\t\t\t\t\tA.x = 0;\n\t\t\t\t\t\t\tA.y = ( topDown === true ) ? radius : - 1 * radius;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tA.x = coord[ j - 1 ].x;\n\t\t\t\t\t\t\tA.y = coord[ j - 1 ].y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// B is current point (angle)\n\n\t\t\t\t\t\tB = coord[ j ];\n\n\t\t\t\t\t\tif ( B !== undefined ) {\n\n\t\t\t\t\t\t\t// p has to be between the points A and B which we interpolate\n\n\t\t\t\t\t\t\tapplyColor = ( topDown === true ) ? ( position.y <= A.y && position.y > B.y ) : ( position.y >= A.y && position.y < B.y );\n\n\t\t\t\t\t\t\tif ( applyColor === true ) {\n\n\t\t\t\t\t\t\t\tvar aColor = colors[ j ];\n\t\t\t\t\t\t\t\tvar bColor = colors[ j + 1 ];\n\n\t\t\t\t\t\t\t\t// below is simple linear interpolation\n\n\t\t\t\t\t\t\t\tvar t = Math.abs( position.y - A.y ) / ( A.y - B.y );\n\n\t\t\t\t\t\t\t\t// to make it faster, you can only calculate this if the y coord changes, the color is the same for points with the same y\n\n\t\t\t\t\t\t\t\tcolor.copy( aColor ).lerp( bColor, t );\n\n\t\t\t\t\t\t\t\tcolorAttribute.setXYZ( vertexIndex, color.r, color.g, color.b );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar colorIndex = ( topDown === true ) ? colors.length - 1 : 0;\n\t\t\t\t\t\t\t\tvar c = colors[ colorIndex ];\n\t\t\t\t\t\t\t\tcolorAttribute.setXYZ( vertexIndex, c.r, c.g, c.b );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'color', colorAttribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar textureLoader = new TextureLoader( this.manager );\n\t\t\ttextureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\t// create JSON representing the tree structure of the VRML asset\n\n\t\t\tvar tree = generateVRMLTree( data );\n\n\t\t\t// check version (only 2.0 is supported)\n\n\t\t\tif ( tree.version.indexOf( 'V2.0' ) === - 1 ) {\n\n\t\t\t\tthrow Error( 'THREE.VRMLLexer: Version of VRML asset not supported.' );\n\n\t\t\t}\n\n\t\t\t// parse the tree structure to a three.js scene\n\n\t\t\tvar scene = parseTree( tree );\n\n\t\t\treturn scene;\n\n\t\t}\n\n\t} );\n\n\tfunction VRMLLexer( tokens ) {\n\n\t\tthis.lexer = new chevrotain.Lexer( tokens );\n\n\t}\n\n\tVRMLLexer.prototype = {\n\n\t\tconstructor: VRMLLexer,\n\n\t\tlex: function ( inputText ) {\n\n\t\t\tvar lexingResult = this.lexer.tokenize( inputText );\n\n\t\t\tif ( lexingResult.errors.length > 0 ) {\n\n\t\t\t\tconsole.error( lexingResult.errors );\n\n\t\t\t\tthrow Error( 'THREE.VRMLLexer: Lexing errors detected.' );\n\n\t\t\t}\n\n\t\t\treturn lexingResult;\n\n\t\t}\n\n\t};\n\n\tfunction VRMLParser( tokenVocabulary ) {\n\n\t\tchevrotain.Parser.call( this, tokenVocabulary );\n\n\t\tvar $ = this;\n\n\t\tvar Version = tokenVocabulary[ 'Version' ];\n\t\tvar LCurly = tokenVocabulary[ 'LCurly' ];\n\t\tvar RCurly = tokenVocabulary[ 'RCurly' ];\n\t\tvar LSquare = tokenVocabulary[ 'LSquare' ];\n\t\tvar RSquare = tokenVocabulary[ 'RSquare' ];\n\t\tvar Identifier = tokenVocabulary[ 'Identifier' ];\n\t\tvar RouteIdentifier = tokenVocabulary[ 'RouteIdentifier' ];\n\t\tvar StringLiteral = tokenVocabulary[ 'StringLiteral' ];\n\t\tvar NumberLiteral = tokenVocabulary[ 'NumberLiteral' ];\n\t\tvar TrueLiteral = tokenVocabulary[ 'TrueLiteral' ];\n\t\tvar FalseLiteral = tokenVocabulary[ 'FalseLiteral' ];\n\t\tvar NullLiteral = tokenVocabulary[ 'NullLiteral' ];\n\t\tvar DEF = tokenVocabulary[ 'DEF' ];\n\t\tvar USE = tokenVocabulary[ 'USE' ];\n\t\tvar ROUTE = tokenVocabulary[ 'ROUTE' ];\n\t\tvar TO = tokenVocabulary[ 'TO' ];\n\t\tvar NodeName = tokenVocabulary[ 'NodeName' ];\n\n\t\t$.RULE( 'vrml', function () {\n\n\t\t\t$.SUBRULE( $.version );\n\t\t\t$.AT_LEAST_ONE( function () {\n\n\t\t\t\t$.SUBRULE( $.node );\n\n\t\t\t} );\n\t\t\t$.MANY( function () {\n\n\t\t\t\t$.SUBRULE( $.route );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t$.RULE( 'version', function () {\n\n\t\t\t$.CONSUME( Version );\n\n\t\t} );\n\n\t\t$.RULE( 'node', function () {\n\n\t\t\t$.OPTION( function () {\n\n\t\t\t\t$.SUBRULE( $.def );\n\n\t\t\t} );\n\n\t\t\t$.CONSUME( NodeName );\n\t\t\t$.CONSUME( LCurly );\n\t\t\t$.MANY( function () {\n\n\t\t\t\t$.SUBRULE( $.field );\n\n\t\t\t} );\n\t\t\t$.CONSUME( RCurly );\n\n\t\t} );\n\n\t\t$.RULE( 'field', function () {\n\n\t\t\t$.CONSUME( Identifier );\n\n\t\t\t$.OR2( [\n\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t$.SUBRULE( $.singleFieldValue );\n\n\t\t\t\t} },\n\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t$.SUBRULE( $.multiFieldValue );\n\n\t\t\t\t} }\n\t\t\t] );\n\n\t\t} );\n\n\t\t$.RULE( 'def', function () {\n\n\t\t\t$.CONSUME( DEF );\n\t\t\t$.CONSUME( Identifier );\n\n\t\t} );\n\n\t\t$.RULE( 'use', function () {\n\n\t\t\t$.CONSUME( USE );\n\t\t\t$.CONSUME( Identifier );\n\n\t\t} );\n\n\t\t$.RULE( 'singleFieldValue', function () {\n\n\t\t\t$.AT_LEAST_ONE( function () {\n\n\t\t\t\t$.OR( [\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.SUBRULE( $.node );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.SUBRULE( $.use );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.CONSUME( StringLiteral );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.CONSUME( NumberLiteral );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.CONSUME( TrueLiteral );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.CONSUME( FalseLiteral );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.CONSUME( NullLiteral );\n\n\t\t\t\t\t} }\n\t\t\t\t] );\n\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t$.RULE( 'multiFieldValue', function () {\n\n\t\t\t$.CONSUME( LSquare );\n\t\t\t$.MANY( function () {\n\n\t\t\t\t$.OR( [\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.SUBRULE( $.node );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.SUBRULE( $.use );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.CONSUME( StringLiteral );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.CONSUME( NumberLiteral );\n\n\t\t\t\t\t} },\n\t\t\t\t\t{ ALT: function () {\n\n\t\t\t\t\t\t$.CONSUME( NullLiteral );\n\n\t\t\t\t\t} }\n\t\t\t\t] );\n\n\t\t\t} );\n\t\t\t$.CONSUME( RSquare );\n\n\t\t} );\n\n\t\t$.RULE( 'route', function () {\n\n\t\t\t$.CONSUME( ROUTE );\n\t\t\t$.CONSUME( RouteIdentifier );\n\t\t\t$.CONSUME( TO );\n\t\t\t$.CONSUME2( RouteIdentifier );\n\n\t\t} );\n\n\t\tthis.performSelfAnalysis();\n\n\t}\n\n\tVRMLParser.prototype = Object.create( chevrotain.Parser.prototype );\n\tVRMLParser.prototype.constructor = VRMLParser;\n\n\tfunction Face( a, b, c ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.normal = new Vector3();\n\n\t}\n\n\treturn VRMLLoader;\n\n} )();\n\nexport { VRMLLoader };\n"]}