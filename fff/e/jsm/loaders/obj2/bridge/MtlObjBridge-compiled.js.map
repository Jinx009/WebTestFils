{"version":3,"sources":["MtlObjBridge.js"],"names":[],"mappings":"AAAA;;;;;AAKA,SAAS,SAAT,QAA0B,sCAA1B;;AAGA,MAAM,eAAe;;AAEpB;;;;;AAKA,OAAM,UAAW,aAAX,EAA0B,WAA1B,EAAwC;;AAE7C,MAAK,OAAO,YAAY,YAAnB,KAAoC,UAAzC,EAAsD;;AAErD,eAAY,YAAZ,CAA0B,KAAK,yBAAL,CAAgC,aAAhC,CAA1B,EAA2E,IAA3E;AAEA;AAED,EAfmB;;AAiBpB;;;;;AAKA,4BAA2B,UAAW,eAAX,EAA6B;;AAEvD,MAAI,eAAe,EAAnB;AACA,MAAK,2BAA2B,UAAU,eAA1C,EAA4D;;AAE3D,mBAAgB,OAAhB;AACA,kBAAe,gBAAgB,SAA/B;AAEA;AACD,SAAO,YAAP;AAEA;AAjCmB,CAArB;;AAoCA,SAAS,YAAT","file":"MtlObjBridge-compiled.js","sourcesContent":["/**\n * @author Kai Salmen / https://kaisalmen.de\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\n */\n\nimport { MTLLoader } from \"../../../../jsm/loaders/MTLLoader.js\";\n\n\nconst MtlObjBridge = {\n\n\t/**\n\t *\n\t * @param processResult\n\t * @param assetLoader\n\t */\n\tlink: function ( processResult, assetLoader ) {\n\n\t\tif ( typeof assetLoader.addMaterials === 'function' ) {\n\n\t\t\tassetLoader.addMaterials( this.addMaterialsFromMtlLoader( processResult ), true );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Returns the array instance of {@link MTLLoader.MaterialCreator}.\n\t *\n\t * @param Instance of {@link MTLLoader.MaterialCreator}\n\t */\n\taddMaterialsFromMtlLoader: function ( materialCreator ) {\n\n\t\tlet newMaterials = {};\n\t\tif ( materialCreator instanceof MTLLoader.MaterialCreator ) {\n\n\t\t\tmaterialCreator.preload();\n\t\t\tnewMaterials = materialCreator.materials;\n\n\t\t}\n\t\treturn newMaterials;\n\n\t}\n};\n\nexport { MtlObjBridge };\n"]}