{"version":3,"sources":["CodeSerializer.js"],"names":[],"mappings":"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","file":"CodeSerializer-compiled.js","sourcesContent":["/**\n * @author Kai Salmen / https://kaisalmen.de\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\n */\n\nconst CodeSerializer = {\n\n\t/**\n\t * Serialize an object without specific prototype definition.\n\t *\n\t * @param {String} fullObjectName complete object name\n\t * @param {Object} serializationTarget The object that should be serialized\n\t * @returns {String}\n\t */\n\tserializeObject: function ( fullObjectName, serializationTarget ) {\n\n\t\tlet objectString = fullObjectName + ' = {\\n\\n';\n\t\tlet part;\n\t\tfor ( let name in serializationTarget ) {\n\n\t\t\tpart = serializationTarget[ name ];\n\t\t\tif ( typeof ( part ) === 'string' || part instanceof String ) {\n\n\t\t\t\tpart = part.replace( /\\n/g, '\\\\n' );\n\t\t\t\tpart = part.replace( /\\r/g, '\\\\r' );\n\t\t\t\tobjectString += '\\t' + name + ': \"' + part + '\",\\n';\n\n\t\t\t} else if ( part instanceof Array ) {\n\n\t\t\t\tobjectString += '\\t' + name + ': [' + part + '],\\n';\n\n\t\t\t} else if ( typeof part === 'object' ) {\n\n\t\t\t\tconsole.log( 'Omitting object \"' + name + '\" and replace it with empty object.' );\n\t\t\t\tobjectString += '\\t' + name + ': {},\\n';\n\n\t\t\t} else {\n\n\t\t\t\tobjectString += '\\t' + name + ': ' + part + ',\\n';\n\n\t\t\t}\n\n\t\t}\n\t\tobjectString += '}\\n\\n';\n\n\t\treturn objectString;\n\n\t},\n\n\t/**\n\t * Serialize an object with specific prototype definition.\n\t *\n\t * @param {String} fullObjectName Specifies the complete object name\n\t * @param {Object} serializationTarget The object that should be serialized\n\t * @param {String} [basePrototypeName] Name of the prototype\n\t * @param {Object} [overrideFunctions} Array of {@Link CodeSerializationInstruction} allows to replace or remove function with provided content\n\t *\n\t * @returns {String}\n\t */\n\tserializeClass: function ( fullObjectName, serializationTarget, basePrototypeName, overrideFunctions ) {\n\n\t\tlet objectPart, constructorString, i, funcInstructions, funcTemp;\n\t\tlet prototypeFunctions = [];\n\t\tlet objectProperties = [];\n\t\tlet objectFunctions = [];\n\t\tlet isExtended = ( basePrototypeName !== null && basePrototypeName !== undefined );\n\n\t\tif ( ! Array.isArray( overrideFunctions ) ) overrideFunctions = [];\n\n\t\tfor ( let name in serializationTarget.prototype ) {\n\n\t\t\tobjectPart = serializationTarget.prototype[ name ];\n\t\t\tfuncInstructions = new CodeSerializationInstruction( name, fullObjectName + '.prototype.' + name );\n\t\t\tfuncInstructions.setCode( objectPart.toString() );\n\n\t\t\tif ( name === 'constructor' ) {\n\n\t\t\t\tif ( ! funcInstructions.isRemoveCode() ) {\n\n\t\t\t\t\tconstructorString = fullObjectName + ' = ' + funcInstructions.getCode() + ';\\n\\n';\n\n\t\t\t\t}\n\n\t\t\t} else if ( typeof objectPart === 'function' ) {\n\n\t\t\t\tfuncTemp = overrideFunctions[ name ];\n\t\t\t\tif ( funcTemp instanceof CodeSerializationInstruction && funcTemp.getName() === funcInstructions.getName() ) {\n\n\t\t\t\t\tfuncInstructions = funcTemp;\n\n\t\t\t\t}\n\t\t\t\tif ( ! funcInstructions.isRemoveCode() ) {\n\n\t\t\t\t\tif ( isExtended ) {\n\n\t\t\t\t\t\tprototypeFunctions.push( funcInstructions.getFullName() + ' = ' + funcInstructions.getCode() + ';\\n\\n' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprototypeFunctions.push( '\\t' + funcInstructions.getName() + ': ' + funcInstructions.getCode() + ',\\n\\n' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\tfor ( let name in serializationTarget ) {\n\n\t\t\tobjectPart = serializationTarget[ name ];\n\t\t\tfuncInstructions = new CodeSerializationInstruction( name, fullObjectName + '.' + name );\n\t\t\tif ( typeof objectPart === 'function' ) {\n\n\t\t\t\tfuncTemp = overrideFunctions[ name ];\n\t\t\t\tif ( funcTemp instanceof CodeSerializationInstruction && funcTemp.getName() === funcInstructions.getName() ) {\n\n\t\t\t\t\tfuncInstructions = funcTemp;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfuncInstructions.setCode( objectPart.toString() );\n\n\t\t\t\t}\n\t\t\t\tif ( ! funcInstructions.isRemoveCode() ) {\n\n\t\t\t\t\tobjectFunctions.push( funcInstructions.getFullName() + ' = ' + funcInstructions.getCode() + ';\\n\\n' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( typeof ( objectPart ) === 'string' || objectPart instanceof String ) {\n\n\t\t\t\t\tfuncInstructions.setCode( '\\\"' + objectPart.toString() + '\\\"' );\n\n\t\t\t\t} else if ( typeof objectPart === 'object' ) {\n\n\t\t\t\t\tconsole.log( 'Omitting object \"' + funcInstructions.getName() + '\" and replace it with empty object.' );\n\t\t\t\t\tfuncInstructions.setCode( \"{}\" );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfuncInstructions.setCode( objectPart );\n\n\t\t\t\t}\n\t\t\t\tif ( ! funcInstructions.isRemoveCode() ) {\n\n\t\t\t\t\tobjectProperties.push( funcInstructions.getFullName() + ' = ' + funcInstructions.getCode() + ';\\n' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\tlet objectString = constructorString + '\\n\\n';\n\t\tif ( isExtended ) {\n\n\t\t\tobjectString += fullObjectName + '.prototype = Object.create( ' + basePrototypeName + '.prototype );\\n';\n\n\t\t}\n\t\tobjectString += fullObjectName + '.prototype.constructor = ' + fullObjectName + ';\\n';\n\t\tobjectString += '\\n\\n';\n\n\t\tfor ( i = 0; i < objectProperties.length; i ++ ) {\n\n\t\t\tobjectString += objectProperties[ i ];\n\n\t\t}\n\t\tobjectString += '\\n\\n';\n\n\t\tfor ( i = 0; i < objectFunctions.length; i ++ ) {\n\n\t\t\tobjectString += objectFunctions[ i ];\n\n\t\t}\n\t\tobjectString += '\\n\\n';\n\n\t\tif ( isExtended ) {\n\n\t\t\tfor ( i = 0; i < prototypeFunctions.length; i ++ ) {\n\n\t\t\t\tobjectString += prototypeFunctions[ i ];\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tobjectString += fullObjectName + '.prototype = {\\n\\n';\n\t\t\tfor ( i = 0; i < prototypeFunctions.length; i ++ ) {\n\n\t\t\t\tobjectString += prototypeFunctions[ i ];\n\n\t\t\t}\n\t\t\tobjectString += '\\n};';\n\n\t\t}\n\t\tobjectString += '\\n\\n';\n\n\t\treturn objectString;\n\n\t},\n};\n\n/**\n * Allows to define instructions to override or remove\n * @param {String} name Usually the name of a function\n * @param {String} fullName The name plus full object description\n * @constructor\n */\nconst CodeSerializationInstruction = function ( name, fullName ) {\n\n\tthis.name = name;\n\tthis.fullName = fullName;\n\tthis.code = null;\n\tthis.removeCode = false;\n\n};\n\nCodeSerializationInstruction.prototype = {\n\n\tconstructor: CodeSerializationInstruction,\n\n\t/**\n\t * Returns the name of the function\n\t * @return {String}\n\t */\n\tgetName: function () {\n\n\t\treturn this.name;\n\n\t},\n\n\t/**\n\t * Returns the full name of the function\n\t * @return {String}\n\t */\n\tgetFullName: function () {\n\n\t\treturn this.fullName;\n\n\t},\n\n\t/**\n\t * Set the string containing the serialized function\n\t * @param {String} code\n\t * @return {CodeSerializationInstruction}\n\t */\n\tsetCode: function ( code ) {\n\n\t\tthis.code = code;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Returns the serialized function code\n\t * @return {String}\n\t */\n\tgetCode: function () {\n\n\t\treturn this.code;\n\n\t},\n\n\t/**\n\t * Set if function should be removed\n\t * @param {boolean} removeCode\n\t * @return {CodeSerializationInstruction}\n\t */\n\tsetRemoveCode: function ( removeCode ) {\n\n\t\tthis.removeCode = removeCode;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * If function should be completely removed\n\t * @return {boolean}\n\t */\n\tisRemoveCode: function () {\n\n\t\treturn this.removeCode;\n\n\t}\n\n};\n\nexport {\n\tCodeSerializer,\n\tCodeSerializationInstruction\n};\n"]}