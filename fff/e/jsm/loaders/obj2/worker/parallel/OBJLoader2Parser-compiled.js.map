{"version":3,"sources":["OBJLoader2Parser.js"],"names":[],"mappings":"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","file":"OBJLoader2Parser-compiled.js","sourcesContent":["/**\n * @author Kai Salmen / https://kaisalmen.de\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\n */\n\n/**\n * Parse OBJ data either from ArrayBuffer or string\n */\nconst OBJLoader2Parser = function () {\n\n\tthis.logging = {\n\t\tenabled: false,\n\t\tdebug: false\n\t};\n\n\tlet scope = this;\n\tthis.callbacks = {\n\t\tonProgress: function ( text ) {\n\n\t\t\tscope._onProgress( text );\n\n\t\t},\n\t\tonAssetAvailable: function ( payload ) {\n\n\t\t\tscope._onAssetAvailable( payload );\n\n\t\t},\n\t\tonError: function ( errorMessage ) {\n\n\t\t\tscope._onError( errorMessage );\n\n\t\t},\n\t\tonLoad: function ( object3d, message ) {\n\n\t\t\tscope._onLoad( object3d, message );\n\n\t\t},\n\t};\n\tthis.contentRef = null;\n\tthis.legacyMode = false;\n\n\tthis.materials = {};\n\tthis.materialPerSmoothingGroup = false;\n\tthis.useOAsMesh = false;\n\tthis.useIndices = false;\n\tthis.disregardNormals = false;\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.normals = [];\n\tthis.uvs = [];\n\n\tthis.rawMesh = {\n\t\tobjectName: '',\n\t\tgroupName: '',\n\t\tactiveMtlName: '',\n\t\tmtllibName: '',\n\n\t\t// reset with new mesh\n\t\tfaceType: - 1,\n\t\tsubGroups: [],\n\t\tsubGroupInUse: null,\n\t\tsmoothingGroup: {\n\t\t\tsplitMaterials: false,\n\t\t\tnormalized: - 1,\n\t\t\treal: - 1\n\t\t},\n\t\tcounts: {\n\t\t\tdoubleIndicesCount: 0,\n\t\t\tfaceCount: 0,\n\t\t\tmtlCount: 0,\n\t\t\tsmoothingGroupCount: 0\n\t\t}\n\t};\n\n\tthis.inputObjectCount = 1;\n\tthis.outputObjectCount = 1;\n\tthis.globalCounts = {\n\t\tvertices: 0,\n\t\tfaces: 0,\n\t\tdoubleIndicesCount: 0,\n\t\tlineByte: 0,\n\t\tcurrentByte: 0,\n\t\ttotalBytes: 0\n\t};\n\n};\n\nOBJLoader2Parser.prototype = {\n\n\tconstructor: OBJLoader2Parser,\n\n\t_resetRawMesh: function () {\n\n\t\t// faces are stored according combined index of group, material and smoothingGroup (0 or not)\n\t\tthis.rawMesh.subGroups = [];\n\t\tthis.rawMesh.subGroupInUse = null;\n\t\tthis.rawMesh.smoothingGroup.normalized = - 1;\n\t\tthis.rawMesh.smoothingGroup.real = - 1;\n\n\t\t// this default index is required as it is possible to define faces without 'g' or 'usemtl'\n\t\tthis._pushSmoothingGroup( 1 );\n\n\t\tthis.rawMesh.counts.doubleIndicesCount = 0;\n\t\tthis.rawMesh.counts.faceCount = 0;\n\t\tthis.rawMesh.counts.mtlCount = 0;\n\t\tthis.rawMesh.counts.smoothingGroupCount = 0;\n\n\t},\n\n\t/**\n\t * Tells whether a material shall be created per smoothing group.\n\t *\n\t * @param {boolean} materialPerSmoothingGroup=false\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetMaterialPerSmoothingGroup: function ( materialPerSmoothingGroup ) {\n\n\t\tthis.materialPerSmoothingGroup = materialPerSmoothingGroup === true;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Usually 'o' is meta-information and does not result in creation of new meshes, but mesh creation on occurrence of \"o\" can be enforced.\n\t *\n\t * @param {boolean} useOAsMesh=false\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetUseOAsMesh: function ( useOAsMesh ) {\n\n\t\tthis.useOAsMesh = useOAsMesh === true;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Instructs loaders to create indexed {@link BufferGeometry}.\n\t *\n\t * @param {boolean} useIndices=false\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetUseIndices: function ( useIndices ) {\n\n\t\tthis.useIndices = useIndices === true;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Tells whether normals should be completely disregarded and regenerated.\n\t *\n\t * @param {boolean} disregardNormals=false\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetDisregardNormals: function ( disregardNormals ) {\n\n\t\tthis.disregardNormals = disregardNormals === true;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Clears materials object and sets the new ones.\n\t *\n\t * @param {Object} materials Object with named materials\n\t */\n\tsetMaterials: function ( materials ) {\n\n \t\tthis.materials = Object.assign( {}, materials );\n\n\t},\n\n\t/**\n\t * Register a function that is called once an asset (mesh/material) becomes available.\n\t *\n\t * @param onAssetAvailable\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetCallbackOnAssetAvailable: function ( onAssetAvailable ) {\n\n\t\tif ( onAssetAvailable !== null && onAssetAvailable !== undefined && onAssetAvailable instanceof Function ) {\n\n\t\t\tthis.callbacks.onAssetAvailable = onAssetAvailable;\n\n\t\t}\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Register a function that is used to report overall processing progress.\n\t *\n\t * @param {Function} onProgress\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetCallbackOnProgress: function ( onProgress ) {\n\n\t\tif ( onProgress !== null && onProgress !== undefined && onProgress instanceof Function ) {\n\n\t\t\tthis.callbacks.onProgress = onProgress;\n\n\t\t}\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Register an error handler function that is called if errors occur. It can decide to just log or to throw an exception.\n\t *\n\t * @param {Function} onError\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetCallbackOnError: function ( onError ) {\n\n\t\tif ( onError !== null && onError !== undefined && onError instanceof Function ) {\n\n\t\t\tthis.callbacks.onError = onError;\n\n\t\t}\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Register a function that is called when parsing was completed.\n\t *\n\t * @param {Function} onLoad\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetCallbackOnLoad: function ( onLoad ) {\n\n\t\tif ( onLoad !== null && onLoad !== undefined && onLoad instanceof Function ) {\n\n\t\t\tthis.callbacks.onLoad = onLoad;\n\n\t\t}\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Announce parse progress feedback which is logged to the console.\n\t * @private\n\t *\n\t * @param {string} text Textual description of the event\n\t */\n\t_onProgress: function ( text ) {\n\n\t\tlet message = text ? text : '';\n\t\tif ( this.logging.enabled && this.logging.debug ) {\n\n\t\t\tconsole.log( message );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Announce error feedback which is logged as error message.\n\t * @private\n\t *\n\t * @param {String} errorMessage The event containing the error\n\t */\n\t_onError: function ( errorMessage ) {\n\n\t\tif ( this.logging.enabled && this.logging.debug ) {\n\n\t\t\tconsole.error( errorMessage );\n\n\t\t}\n\n\t},\n\n\t_onAssetAvailable: function ( payload ) {\n\n\t\tlet errorMessage = 'OBJLoader2Parser does not provide implementation for onAssetAvailable. Aborting...';\n\t\tthis.callbacks.onError( errorMessage );\n\t\tthrow errorMessage;\n\n\t},\n\n\t_onLoad: function ( object3d, message ) {\n\n\t\tconsole.log( \"You reached parser default onLoad callback: \" + message );\n\n\t},\n\n\t/**\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n\t *\n\t * @param {boolean} enabled True or false.\n\t * @param {boolean} debug True or false.\n\t *\n\t * @return {OBJLoader2Parser}\n\t */\n\tsetLogging: function ( enabled, debug ) {\n\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t\treturn this;\n\n\t},\n\n\t_configure: function () {\n\n\t\tthis._pushSmoothingGroup( 1 );\n\t\tif ( this.logging.enabled ) {\n\n\t\t\tlet matKeys = Object.keys( this.materials );\n\t\t\tlet matNames = ( matKeys.length > 0 ) ? '\\n\\tmaterialNames:\\n\\t\\t- ' + matKeys.join( '\\n\\t\\t- ' ) : '\\n\\tmaterialNames: None';\n\t\t\tlet printedConfig = 'OBJLoader.Parser configuration:'\n\t\t\t\t+ matNames\n\t\t\t\t+ '\\n\\tmaterialPerSmoothingGroup: ' + this.materialPerSmoothingGroup\n\t\t\t\t+ '\\n\\tuseOAsMesh: ' + this.useOAsMesh\n\t\t\t\t+ '\\n\\tuseIndices: ' + this.useIndices\n\t\t\t\t+ '\\n\\tdisregardNormals: ' + this.disregardNormals;\n\t\t\tprintedConfig += '\\n\\tcallbacks.onProgress: ' + this.callbacks.onProgress.name;\n\t\t\tprintedConfig += '\\n\\tcallbacks.onAssetAvailable: ' + this.callbacks.onAssetAvailable.name;\n\t\t\tprintedConfig += '\\n\\tcallbacks.onError: ' + this.callbacks.onError.name;\n\t\t\tconsole.info( printedConfig );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Parse the provided arraybuffer\n\t *\n\t * @param {Uint8Array} arrayBuffer OBJ data as Uint8Array\n\t */\n\texecute: function ( arrayBuffer ) {\n\n\t\tif ( this.logging.enabled ) console.time( 'OBJLoader2Parser.execute' );\n\t\tthis._configure();\n\n\t\tlet arrayBufferView = new Uint8Array( arrayBuffer );\n\t\tthis.contentRef = arrayBufferView;\n\t\tlet length = arrayBufferView.byteLength;\n\t\tthis.globalCounts.totalBytes = length;\n\t\tlet buffer = new Array( 128 );\n\n\t\tfor ( let code, word = '', bufferPointer = 0, slashesCount = 0, i = 0; i < length; i ++ ) {\n\n\t\t\tcode = arrayBufferView[ i ];\n\t\t\tswitch ( code ) {\n\n\t\t\t\t// space\n\t\t\t\tcase 32:\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\n\t\t\t\t\tword = '';\n\t\t\t\t\tbreak;\n\t\t\t\t// slash\n\t\t\t\tcase 47:\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\n\t\t\t\t\tslashesCount ++;\n\t\t\t\t\tword = '';\n\t\t\t\t\tbreak;\n\n\t\t\t\t// LF\n\t\t\t\tcase 10:\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\n\t\t\t\t\tword = '';\n\t\t\t\t\tthis.globalCounts.lineByte = this.globalCounts.currentByte;\n\t\t\t\t\tthis.globalCounts.currentByte = i;\n\t\t\t\t\tthis._processLine( buffer, bufferPointer, slashesCount );\n\t\t\t\t\tbufferPointer = 0;\n\t\t\t\t\tslashesCount = 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// CR\n\t\t\t\tcase 13:\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tword += String.fromCharCode( code );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\t\tthis._finalizeParsing();\n\t\tif ( this.logging.enabled ) console.timeEnd( 'OBJLoader2Parser.execute' );\n\n\t},\n\n\t/**\n\t * Parse the provided text\n\t *\n\t * @param {string} text OBJ data as string\n\t */\n\texecuteLegacy: function ( text ) {\n\n\t\tif ( this.logging.enabled ) console.time( 'OBJLoader2Parser.executeLegacy' );\n\t\tthis._configure();\n\t\tthis.legacyMode = true;\n\t\tthis.contentRef = text;\n\t\tlet length = text.length;\n\t\tthis.globalCounts.totalBytes = length;\n\t\tlet buffer = new Array( 128 );\n\n\t\tfor ( let char, word = '', bufferPointer = 0, slashesCount = 0, i = 0; i < length; i ++ ) {\n\n\t\t\tchar = text[ i ];\n\t\t\tswitch ( char ) {\n\n\t\t\t\tcase ' ':\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\n\t\t\t\t\tword = '';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '/':\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\n\t\t\t\t\tslashesCount ++;\n\t\t\t\t\tword = '';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '\\n':\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\n\t\t\t\t\tword = '';\n\t\t\t\t\tthis.globalCounts.lineByte = this.globalCounts.currentByte;\n\t\t\t\t\tthis.globalCounts.currentByte = i;\n\t\t\t\t\tthis._processLine( buffer, bufferPointer, slashesCount );\n\t\t\t\t\tbufferPointer = 0;\n\t\t\t\t\tslashesCount = 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '\\r':\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tword += char;\n\n\t\t\t}\n\n\t\t}\n\t\tthis._finalizeParsing();\n\t\tif ( this.logging.enabled ) console.timeEnd( 'OBJLoader2Parser.executeLegacy' );\n\n\t},\n\n\t_processLine: function ( buffer, bufferPointer, slashesCount ) {\n\n\t\tif ( bufferPointer < 1 ) return;\n\n\t\tlet reconstructString = function ( content, legacyMode, start, stop ) {\n\n\t\t\tlet line = '';\n\t\t\tif ( stop > start ) {\n\n\t\t\t\tlet i;\n\t\t\t\tif ( legacyMode ) {\n\n\t\t\t\t\tfor ( i = start; i < stop; i ++ ) line += content[ i ];\n\n\t\t\t\t} else {\n\n\n\t\t\t\t\tfor ( i = start; i < stop; i ++ ) line += String.fromCharCode( content[ i ] );\n\n\t\t\t\t}\n\t\t\t\tline = line.trim();\n\n\t\t\t}\n\t\t\treturn line;\n\n\t\t};\n\n\t\tlet bufferLength, length, i, lineDesignation;\n\t\tlineDesignation = buffer[ 0 ];\n\t\tswitch ( lineDesignation ) {\n\n\t\t\tcase 'v':\n\t\t\t\tthis.vertices.push( parseFloat( buffer[ 1 ] ) );\n\t\t\t\tthis.vertices.push( parseFloat( buffer[ 2 ] ) );\n\t\t\t\tthis.vertices.push( parseFloat( buffer[ 3 ] ) );\n\t\t\t\tif ( bufferPointer > 4 ) {\n\n\t\t\t\t\tthis.colors.push( parseFloat( buffer[ 4 ] ) );\n\t\t\t\t\tthis.colors.push( parseFloat( buffer[ 5 ] ) );\n\t\t\t\t\tthis.colors.push( parseFloat( buffer[ 6 ] ) );\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'vt':\n\t\t\t\tthis.uvs.push( parseFloat( buffer[ 1 ] ) );\n\t\t\t\tthis.uvs.push( parseFloat( buffer[ 2 ] ) );\n\t\t\t\tbreak;\n\n\t\t\tcase 'vn':\n\t\t\t\tthis.normals.push( parseFloat( buffer[ 1 ] ) );\n\t\t\t\tthis.normals.push( parseFloat( buffer[ 2 ] ) );\n\t\t\t\tthis.normals.push( parseFloat( buffer[ 3 ] ) );\n\t\t\t\tbreak;\n\n\t\t\tcase 'f':\n\t\t\t\tbufferLength = bufferPointer - 1;\n\n\t\t\t\t// \"f vertex ...\"\n\t\t\t\tif ( slashesCount === 0 ) {\n\n\t\t\t\t\tthis._checkFaceType( 0 );\n\t\t\t\t\tfor ( i = 2, length = bufferLength; i < length; i ++ ) {\n\n\t\t\t\t\t\tthis._buildFace( buffer[ 1 ] );\n\t\t\t\t\t\tthis._buildFace( buffer[ i ] );\n\t\t\t\t\t\tthis._buildFace( buffer[ i + 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// \"f vertex/uv ...\"\n\n\t\t\t\t} else if ( bufferLength === slashesCount * 2 ) {\n\n\t\t\t\t\tthis._checkFaceType( 1 );\n\t\t\t\t\tfor ( i = 3, length = bufferLength - 2; i < length; i += 2 ) {\n\n\t\t\t\t\t\tthis._buildFace( buffer[ 1 ], buffer[ 2 ] );\n\t\t\t\t\t\tthis._buildFace( buffer[ i ], buffer[ i + 1 ] );\n\t\t\t\t\t\tthis._buildFace( buffer[ i + 2 ], buffer[ i + 3 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// \"f vertex/uv/normal ...\"\n\n\t\t\t\t} else if ( bufferLength * 2 === slashesCount * 3 ) {\n\n\t\t\t\t\tthis._checkFaceType( 2 );\n\t\t\t\t\tfor ( i = 4, length = bufferLength - 3; i < length; i += 3 ) {\n\n\t\t\t\t\t\tthis._buildFace( buffer[ 1 ], buffer[ 2 ], buffer[ 3 ] );\n\t\t\t\t\t\tthis._buildFace( buffer[ i ], buffer[ i + 1 ], buffer[ i + 2 ] );\n\t\t\t\t\t\tthis._buildFace( buffer[ i + 3 ], buffer[ i + 4 ], buffer[ i + 5 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// \"f vertex//normal ...\"\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._checkFaceType( 3 );\n\t\t\t\t\tfor ( i = 3, length = bufferLength - 2; i < length; i += 2 ) {\n\n\t\t\t\t\t\tthis._buildFace( buffer[ 1 ], undefined, buffer[ 2 ] );\n\t\t\t\t\t\tthis._buildFace( buffer[ i ], undefined, buffer[ i + 1 ] );\n\t\t\t\t\t\tthis._buildFace( buffer[ i + 2 ], undefined, buffer[ i + 3 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'l':\n\t\t\tcase 'p':\n\t\t\t\tbufferLength = bufferPointer - 1;\n\t\t\t\tif ( bufferLength === slashesCount * 2 ) {\n\n\t\t\t\t\tthis._checkFaceType( 4 );\n\t\t\t\t\tfor ( i = 1, length = bufferLength + 1; i < length; i += 2 ) this._buildFace( buffer[ i ], buffer[ i + 1 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._checkFaceType( ( lineDesignation === 'l' ) ? 5 : 6 );\n\t\t\t\t\tfor ( i = 1, length = bufferLength + 1; i < length; i ++ ) this._buildFace( buffer[ i ] );\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 's':\n\t\t\t\tthis._pushSmoothingGroup( buffer[ 1 ] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'g':\n\t\t\t\t// 'g' leads to creation of mesh if valid data (faces declaration was done before), otherwise only groupName gets set\n\t\t\t\tthis._processCompletedMesh();\n\t\t\t\tthis.rawMesh.groupName = reconstructString( this.contentRef, this.legacyMode, this.globalCounts.lineByte + 2, this.globalCounts.currentByte );\n\t\t\t\tbreak;\n\n\t\t\tcase 'o':\n\t\t\t\t// 'o' is meta-information and usually does not result in creation of new meshes, but can be enforced with \"useOAsMesh\"\n\t\t\t\tif ( this.useOAsMesh ) this._processCompletedMesh();\n\t\t\t\tthis.rawMesh.objectName = reconstructString( this.contentRef, this.legacyMode, this.globalCounts.lineByte + 2, this.globalCounts.currentByte );\n\t\t\t\tbreak;\n\n\t\t\tcase 'mtllib':\n\t\t\t\tthis.rawMesh.mtllibName = reconstructString( this.contentRef, this.legacyMode, this.globalCounts.lineByte + 7, this.globalCounts.currentByte );\n\t\t\t\tbreak;\n\n\t\t\tcase 'usemtl':\n\t\t\t\tlet mtlName = reconstructString( this.contentRef, this.legacyMode, this.globalCounts.lineByte + 7, this.globalCounts.currentByte );\n\t\t\t\tif ( mtlName !== '' && this.rawMesh.activeMtlName !== mtlName ) {\n\n\t\t\t\t\tthis.rawMesh.activeMtlName = mtlName;\n\t\t\t\t\tthis.rawMesh.counts.mtlCount ++;\n\t\t\t\t\tthis._checkSubGroup();\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t}\n\n\t},\n\n\t_pushSmoothingGroup: function ( smoothingGroup ) {\n\n\t\tlet smoothingGroupInt = parseInt( smoothingGroup );\n\t\tif ( isNaN( smoothingGroupInt ) ) {\n\n\t\t\tsmoothingGroupInt = smoothingGroup === \"off\" ? 0 : 1;\n\n\t\t}\n\n\t\tlet smoothCheck = this.rawMesh.smoothingGroup.normalized;\n\t\tthis.rawMesh.smoothingGroup.normalized = this.rawMesh.smoothingGroup.splitMaterials ? smoothingGroupInt : ( smoothingGroupInt === 0 ) ? 0 : 1;\n\t\tthis.rawMesh.smoothingGroup.real = smoothingGroupInt;\n\n\t\tif ( smoothCheck !== smoothingGroupInt ) {\n\n\t\t\tthis.rawMesh.counts.smoothingGroupCount ++;\n\t\t\tthis._checkSubGroup();\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Expanded faceTypes include all four face types, both line types and the point type\n\t * faceType = 0: \"f vertex ...\"\n\t * faceType = 1: \"f vertex/uv ...\"\n\t * faceType = 2: \"f vertex/uv/normal ...\"\n\t * faceType = 3: \"f vertex//normal ...\"\n\t * faceType = 4: \"l vertex/uv ...\" or \"l vertex ...\"\n\t * faceType = 5: \"l vertex ...\"\n\t * faceType = 6: \"p vertex ...\"\n\t */\n\t_checkFaceType: function ( faceType ) {\n\n\t\tif ( this.rawMesh.faceType !== faceType ) {\n\n\t\t\tthis._processCompletedMesh();\n\t\t\tthis.rawMesh.faceType = faceType;\n\t\t\tthis._checkSubGroup();\n\n\t\t}\n\n\t},\n\n\t_checkSubGroup: function () {\n\n\t\tlet index = this.rawMesh.activeMtlName + '|' + this.rawMesh.smoothingGroup.normalized;\n\t\tthis.rawMesh.subGroupInUse = this.rawMesh.subGroups[ index ];\n\n\t\tif ( this.rawMesh.subGroupInUse === undefined || this.rawMesh.subGroupInUse === null ) {\n\n\t\t\tthis.rawMesh.subGroupInUse = {\n\t\t\t\tindex: index,\n\t\t\t\tobjectName: this.rawMesh.objectName,\n\t\t\t\tgroupName: this.rawMesh.groupName,\n\t\t\t\tmaterialName: this.rawMesh.activeMtlName,\n\t\t\t\tsmoothingGroup: this.rawMesh.smoothingGroup.normalized,\n\t\t\t\tvertices: [],\n\t\t\t\tindexMappingsCount: 0,\n\t\t\t\tindexMappings: [],\n\t\t\t\tindices: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tnormals: []\n\t\t\t};\n\t\t\tthis.rawMesh.subGroups[ index ] = this.rawMesh.subGroupInUse;\n\n\t\t}\n\n\t},\n\n\t_buildFace: function ( faceIndexV, faceIndexU, faceIndexN ) {\n\n\t\tlet subGroupInUse = this.rawMesh.subGroupInUse;\n\t\tlet scope = this;\n\t\tlet updateSubGroupInUse = function () {\n\n\t\t\tlet faceIndexVi = parseInt( faceIndexV );\n\t\t\tlet indexPointerV = 3 * ( faceIndexVi > 0 ? faceIndexVi - 1 : faceIndexVi + scope.vertices.length / 3 );\n\t\t\tlet indexPointerC = scope.colors.length > 0 ? indexPointerV : null;\n\n\t\t\tlet vertices = subGroupInUse.vertices;\n\t\t\tvertices.push( scope.vertices[ indexPointerV ++ ] );\n\t\t\tvertices.push( scope.vertices[ indexPointerV ++ ] );\n\t\t\tvertices.push( scope.vertices[ indexPointerV ] );\n\n\t\t\tif ( indexPointerC !== null ) {\n\n\t\t\t\tlet colors = subGroupInUse.colors;\n\t\t\t\tcolors.push( scope.colors[ indexPointerC ++ ] );\n\t\t\t\tcolors.push( scope.colors[ indexPointerC ++ ] );\n\t\t\t\tcolors.push( scope.colors[ indexPointerC ] );\n\n\t\t\t}\n\t\t\tif ( faceIndexU ) {\n\n\t\t\t\tlet faceIndexUi = parseInt( faceIndexU );\n\t\t\t\tlet indexPointerU = 2 * ( faceIndexUi > 0 ? faceIndexUi - 1 : faceIndexUi + scope.uvs.length / 2 );\n\t\t\t\tlet uvs = subGroupInUse.uvs;\n\t\t\t\tuvs.push( scope.uvs[ indexPointerU ++ ] );\n\t\t\t\tuvs.push( scope.uvs[ indexPointerU ] );\n\n\t\t\t}\n\t\t\tif ( faceIndexN && ! scope.disregardNormals ) {\n\n\t\t\t\tlet faceIndexNi = parseInt( faceIndexN );\n\t\t\t\tlet indexPointerN = 3 * ( faceIndexNi > 0 ? faceIndexNi - 1 : faceIndexNi + scope.normals.length / 3 );\n\t\t\t\tlet normals = subGroupInUse.normals;\n\t\t\t\tnormals.push( scope.normals[ indexPointerN ++ ] );\n\t\t\t\tnormals.push( scope.normals[ indexPointerN ++ ] );\n\t\t\t\tnormals.push( scope.normals[ indexPointerN ] );\n\n\t\t\t}\n\n\t\t};\n\n\t\tif ( this.useIndices ) {\n\n\t\t\tif ( this.disregardNormals ) faceIndexN = undefined;\n\t\t\tlet mappingName = faceIndexV + ( faceIndexU ? '_' + faceIndexU : '_n' ) + ( faceIndexN ? '_' + faceIndexN : '_n' );\n\t\t\tlet indicesPointer = subGroupInUse.indexMappings[ mappingName ];\n\t\t\tif ( indicesPointer === undefined || indicesPointer === null ) {\n\n\t\t\t\tindicesPointer = this.rawMesh.subGroupInUse.vertices.length / 3;\n\t\t\t\tupdateSubGroupInUse();\n\t\t\t\tsubGroupInUse.indexMappings[ mappingName ] = indicesPointer;\n\t\t\t\tsubGroupInUse.indexMappingsCount ++;\n\n\t\t\t} else {\n\n\t\t\t\tthis.rawMesh.counts.doubleIndicesCount ++;\n\n\t\t\t}\n\t\t\tsubGroupInUse.indices.push( indicesPointer );\n\n\t\t} else {\n\n\t\t\tupdateSubGroupInUse();\n\n\t\t}\n\t\tthis.rawMesh.counts.faceCount ++;\n\n\t},\n\n\t_createRawMeshReport: function ( inputObjectCount ) {\n\n\t\treturn 'Input Object number: ' + inputObjectCount +\n\t\t\t'\\n\\tObject name: ' + this.rawMesh.objectName +\n\t\t\t'\\n\\tGroup name: ' + this.rawMesh.groupName +\n\t\t\t'\\n\\tMtllib name: ' + this.rawMesh.mtllibName +\n\t\t\t'\\n\\tVertex count: ' + this.vertices.length / 3 +\n\t\t\t'\\n\\tNormal count: ' + this.normals.length / 3 +\n\t\t\t'\\n\\tUV count: ' + this.uvs.length / 2 +\n\t\t\t'\\n\\tSmoothingGroup count: ' + this.rawMesh.counts.smoothingGroupCount +\n\t\t\t'\\n\\tMaterial count: ' + this.rawMesh.counts.mtlCount +\n\t\t\t'\\n\\tReal MeshOutputGroup count: ' + this.rawMesh.subGroups.length;\n\n\t},\n\n\t/**\n\t * Clear any empty subGroup and calculate absolute vertex, normal and uv counts\n\t */\n\t_finalizeRawMesh: function () {\n\n\t\tlet meshOutputGroupTemp = [];\n\t\tlet meshOutputGroup;\n\t\tlet absoluteVertexCount = 0;\n\t\tlet absoluteIndexMappingsCount = 0;\n\t\tlet absoluteIndexCount = 0;\n\t\tlet absoluteColorCount = 0;\n\t\tlet absoluteNormalCount = 0;\n\t\tlet absoluteUvCount = 0;\n\t\tlet indices;\n\t\tfor ( let name in this.rawMesh.subGroups ) {\n\n\t\t\tmeshOutputGroup = this.rawMesh.subGroups[ name ];\n\t\t\tif ( meshOutputGroup.vertices.length > 0 ) {\n\n\t\t\t\tindices = meshOutputGroup.indices;\n\t\t\t\tif ( indices.length > 0 && absoluteIndexMappingsCount > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\t\t\tindices[ i ] = indices[ i ] + absoluteIndexMappingsCount;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tmeshOutputGroupTemp.push( meshOutputGroup );\n\t\t\t\tabsoluteVertexCount += meshOutputGroup.vertices.length;\n\t\t\t\tabsoluteIndexMappingsCount += meshOutputGroup.indexMappingsCount;\n\t\t\t\tabsoluteIndexCount += meshOutputGroup.indices.length;\n\t\t\t\tabsoluteColorCount += meshOutputGroup.colors.length;\n\t\t\t\tabsoluteUvCount += meshOutputGroup.uvs.length;\n\t\t\t\tabsoluteNormalCount += meshOutputGroup.normals.length;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// do not continue if no result\n\t\tlet result = null;\n\t\tif ( meshOutputGroupTemp.length > 0 ) {\n\n\t\t\tresult = {\n\t\t\t\tname: this.rawMesh.groupName !== '' ? this.rawMesh.groupName : this.rawMesh.objectName,\n\t\t\t\tsubGroups: meshOutputGroupTemp,\n\t\t\t\tabsoluteVertexCount: absoluteVertexCount,\n\t\t\t\tabsoluteIndexCount: absoluteIndexCount,\n\t\t\t\tabsoluteColorCount: absoluteColorCount,\n\t\t\t\tabsoluteNormalCount: absoluteNormalCount,\n\t\t\t\tabsoluteUvCount: absoluteUvCount,\n\t\t\t\tfaceCount: this.rawMesh.counts.faceCount,\n\t\t\t\tdoubleIndicesCount: this.rawMesh.counts.doubleIndicesCount\n\t\t\t};\n\n\t\t}\n\t\treturn result;\n\n\t},\n\n\t_processCompletedMesh: function () {\n\n\t\tlet result = this._finalizeRawMesh();\n\t\tlet haveMesh = result !== null;\n\t\tif ( haveMesh ) {\n\n\t\t\tif ( this.colors.length > 0 && this.colors.length !== this.vertices.length ) {\n\n\t\t\t\tthis.callbacks.onError( 'Vertex Colors were detected, but vertex count and color count do not match!' );\n\n\t\t\t}\n\t\t\tif ( this.logging.enabled && this.logging.debug ) console.debug( this._createRawMeshReport( this.inputObjectCount ) );\n\t\t\tthis.inputObjectCount ++;\n\n\t\t\tthis._buildMesh( result );\n\t\t\tlet progressBytesPercent = this.globalCounts.currentByte / this.globalCounts.totalBytes;\n\t\t\tthis._onProgress( 'Completed [o: ' + this.rawMesh.objectName + ' g:' + this.rawMesh.groupName + '' +\n\t\t\t\t'] Total progress: ' + ( progressBytesPercent * 100 ).toFixed( 2 ) + '%' );\n\t\t\tthis._resetRawMesh();\n\n\t\t}\n\t\treturn haveMesh;\n\n\t},\n\n\t/**\n\t * SubGroups are transformed to too intermediate format that is forwarded to the MeshReceiver.\n\t * It is ensured that SubGroups only contain objects with vertices (no need to check).\n\t *\n\t * @param result\n\t */\n\t_buildMesh: function ( result ) {\n\n\t\tlet meshOutputGroups = result.subGroups;\n\n\t\tlet vertexFA = new Float32Array( result.absoluteVertexCount );\n\t\tthis.globalCounts.vertices += result.absoluteVertexCount / 3;\n\t\tthis.globalCounts.faces += result.faceCount;\n\t\tthis.globalCounts.doubleIndicesCount += result.doubleIndicesCount;\n\t\tlet indexUA = ( result.absoluteIndexCount > 0 ) ? new Uint32Array( result.absoluteIndexCount ) : null;\n\t\tlet colorFA = ( result.absoluteColorCount > 0 ) ? new Float32Array( result.absoluteColorCount ) : null;\n\t\tlet normalFA = ( result.absoluteNormalCount > 0 ) ? new Float32Array( result.absoluteNormalCount ) : null;\n\t\tlet uvFA = ( result.absoluteUvCount > 0 ) ? new Float32Array( result.absoluteUvCount ) : null;\n\t\tlet haveVertexColors = colorFA !== null;\n\n\t\tlet meshOutputGroup;\n\t\tlet materialNames = [];\n\n\t\tlet createMultiMaterial = ( meshOutputGroups.length > 1 );\n\t\tlet materialIndex = 0;\n\t\tlet materialIndexMapping = [];\n\t\tlet selectedMaterialIndex;\n\t\tlet materialGroup;\n\t\tlet materialGroups = [];\n\n\t\tlet vertexFAOffset = 0;\n\t\tlet indexUAOffset = 0;\n\t\tlet colorFAOffset = 0;\n\t\tlet normalFAOffset = 0;\n\t\tlet uvFAOffset = 0;\n\t\tlet materialGroupOffset = 0;\n\t\tlet materialGroupLength = 0;\n\n\t\tlet materialOrg, material, materialName, materialNameOrg;\n\t\t// only one specific face type\n\t\tfor ( let oodIndex in meshOutputGroups ) {\n\n\t\t\tif ( ! meshOutputGroups.hasOwnProperty( oodIndex ) ) continue;\n\t\t\tmeshOutputGroup = meshOutputGroups[ oodIndex ];\n\n\t\t\tmaterialNameOrg = meshOutputGroup.materialName;\n\t\t\tif ( this.rawMesh.faceType < 4 ) {\n\n\t\t\t\tmaterialName = materialNameOrg + ( haveVertexColors ? '_vertexColor' : '' ) + ( meshOutputGroup.smoothingGroup === 0 ? '_flat' : '' );\n\n\n\t\t\t} else {\n\n\t\t\t\tmaterialName = this.rawMesh.faceType === 6 ? 'defaultPointMaterial' : 'defaultLineMaterial';\n\n\t\t\t}\n\t\t\tmaterialOrg = this.materials[ materialNameOrg ];\n\t\t\tmaterial = this.materials[ materialName ];\n\n\t\t\t// both original and derived names do not lead to an existing material => need to use a default material\n\t\t\tif ( ( materialOrg === undefined || materialOrg === null ) && ( material === undefined || material === null ) ) {\n\n\t\t\t\tmaterialName = haveVertexColors ? 'defaultVertexColorMaterial' : 'defaultMaterial';\n\t\t\t\tmaterial = this.materials[ materialName ];\n\t\t\t\tif ( this.logging.enabled ) {\n\n\t\t\t\t\tconsole.info( 'object_group \"' + meshOutputGroup.objectName + '_' +\n\t\t\t\t\t\tmeshOutputGroup.groupName + '\" was defined with unresolvable material \"' +\n\t\t\t\t\t\tmaterialNameOrg + '\"! Assigning \"' + materialName + '\".' );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif ( material === undefined || material === null ) {\n\n\t\t\t\tlet materialCloneInstructions = {\n\t\t\t\t\tmaterialNameOrg: materialNameOrg,\n\t\t\t\t\tmaterialName: materialName,\n\t\t\t\t\tmaterialProperties: {\n\t\t\t\t\t\tvertexColors: haveVertexColors ? 2 : 0,\n\t\t\t\t\t\tflatShading: meshOutputGroup.smoothingGroup === 0\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tlet payload = {\n\t\t\t\t\tcmd: 'assetAvailable',\n\t\t\t\t\ttype: 'material',\n\t\t\t\t\tmaterials: {\n\t\t\t\t\t\tmaterialCloneInstructions: materialCloneInstructions\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.callbacks.onAssetAvailable( payload );\n\n\t\t\t\t// only set materials if they don't exist, yet\n\t\t\t\tlet matCheck = this.materials[ materialName ];\n\t\t\t\tif ( matCheck === undefined || matCheck === null ) {\n\n\t\t\t\t\tthis.materials[ materialName ] = materialCloneInstructions;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( createMultiMaterial ) {\n\n\t\t\t\t// re-use material if already used before. Reduces materials array size and eliminates duplicates\n\t\t\t\tselectedMaterialIndex = materialIndexMapping[ materialName ];\n\t\t\t\tif ( ! selectedMaterialIndex ) {\n\n\t\t\t\t\tselectedMaterialIndex = materialIndex;\n\t\t\t\t\tmaterialIndexMapping[ materialName ] = materialIndex;\n\t\t\t\t\tmaterialNames.push( materialName );\n\t\t\t\t\tmaterialIndex ++;\n\n\t\t\t\t}\n\t\t\t\tmaterialGroupLength = this.useIndices ? meshOutputGroup.indices.length : meshOutputGroup.vertices.length / 3;\n\t\t\t\tmaterialGroup = {\n\t\t\t\t\tstart: materialGroupOffset,\n\t\t\t\t\tcount: materialGroupLength,\n\t\t\t\t\tindex: selectedMaterialIndex\n\t\t\t\t};\n\t\t\t\tmaterialGroups.push( materialGroup );\n\t\t\t\tmaterialGroupOffset += materialGroupLength;\n\n\t\t\t} else {\n\n\t\t\t\tmaterialNames.push( materialName );\n\n\t\t\t}\n\n\t\t\tvertexFA.set( meshOutputGroup.vertices, vertexFAOffset );\n\t\t\tvertexFAOffset += meshOutputGroup.vertices.length;\n\n\t\t\tif ( indexUA ) {\n\n\t\t\t\tindexUA.set( meshOutputGroup.indices, indexUAOffset );\n\t\t\t\tindexUAOffset += meshOutputGroup.indices.length;\n\n\t\t\t}\n\n\t\t\tif ( colorFA ) {\n\n\t\t\t\tcolorFA.set( meshOutputGroup.colors, colorFAOffset );\n\t\t\t\tcolorFAOffset += meshOutputGroup.colors.length;\n\n\t\t\t}\n\n\t\t\tif ( normalFA ) {\n\n\t\t\t\tnormalFA.set( meshOutputGroup.normals, normalFAOffset );\n\t\t\t\tnormalFAOffset += meshOutputGroup.normals.length;\n\n\t\t\t}\n\t\t\tif ( uvFA ) {\n\n\t\t\t\tuvFA.set( meshOutputGroup.uvs, uvFAOffset );\n\t\t\t\tuvFAOffset += meshOutputGroup.uvs.length;\n\n\t\t\t}\n\n\t\t\tif ( this.logging.enabled && this.logging.debug ) {\n\n\t\t\t\tlet materialIndexLine = ( selectedMaterialIndex === undefined || selectedMaterialIndex === null ) ? '' : '\\n\\t\\tmaterialIndex: ' + selectedMaterialIndex;\n\t\t\t\tlet createdReport = '\\tOutput Object no.: ' + this.outputObjectCount +\n\t\t\t\t\t'\\n\\t\\tgroupName: ' + meshOutputGroup.groupName +\n\t\t\t\t\t'\\n\\t\\tIndex: ' + meshOutputGroup.index +\n\t\t\t\t\t'\\n\\t\\tfaceType: ' + this.rawMesh.faceType +\n\t\t\t\t\t'\\n\\t\\tmaterialName: ' + meshOutputGroup.materialName +\n\t\t\t\t\t'\\n\\t\\tsmoothingGroup: ' + meshOutputGroup.smoothingGroup +\n\t\t\t\t\tmaterialIndexLine +\n\t\t\t\t\t'\\n\\t\\tobjectName: ' + meshOutputGroup.objectName +\n\t\t\t\t\t'\\n\\t\\t#vertices: ' + meshOutputGroup.vertices.length / 3 +\n\t\t\t\t\t'\\n\\t\\t#indices: ' + meshOutputGroup.indices.length +\n\t\t\t\t\t'\\n\\t\\t#colors: ' + meshOutputGroup.colors.length / 3 +\n\t\t\t\t\t'\\n\\t\\t#uvs: ' + meshOutputGroup.uvs.length / 2 +\n\t\t\t\t\t'\\n\\t\\t#normals: ' + meshOutputGroup.normals.length / 3;\n\t\t\t\tconsole.debug( createdReport );\n\n\t\t\t}\n\n\t\t}\n\t\tthis.outputObjectCount ++;\n\t\tthis.callbacks.onAssetAvailable(\n\t\t\t{\n\t\t\t\tcmd: 'assetAvailable',\n\t\t\t\ttype: 'mesh',\n\t\t\t\tprogress: {\n\t\t\t\t\tnumericalValue: this.globalCounts.currentByte / this.globalCounts.totalBytes\n\t\t\t\t},\n\t\t\t\tparams: {\n\t\t\t\t\tmeshName: result.name\n\t\t\t\t},\n\t\t\t\tmaterials: {\n\t\t\t\t\tmultiMaterial: createMultiMaterial,\n\t\t\t\t\tmaterialNames: materialNames,\n\t\t\t\t\tmaterialGroups: materialGroups\n\t\t\t\t},\n\t\t\t\tbuffers: {\n\t\t\t\t\tvertices: vertexFA,\n\t\t\t\t\tindices: indexUA,\n\t\t\t\t\tcolors: colorFA,\n\t\t\t\t\tnormals: normalFA,\n\t\t\t\t\tuvs: uvFA\n\t\t\t\t},\n\t\t\t\t// 0: mesh, 1: line, 2: point\n\t\t\t\tgeometryType: this.rawMesh.faceType < 4 ? 0 : ( this.rawMesh.faceType === 6 ) ? 2 : 1\n\t\t\t},\n\t\t\t[ vertexFA.buffer ],\n\t\t\tindexUA !== null ? [ indexUA.buffer ] : null,\n\t\t\tcolorFA !== null ? [ colorFA.buffer ] : null,\n\t\t\tnormalFA !== null ? [ normalFA.buffer ] : null,\n\t\t\tuvFA !== null ? [ uvFA.buffer ] : null\n\t\t);\n\n\t},\n\n\t_finalizeParsing: function () {\n\n\t\tif ( this.logging.enabled ) console.info( 'Global output object count: ' + this.outputObjectCount );\n\t\tif ( this._processCompletedMesh() && this.logging.enabled ) {\n\n\t\t\tlet parserFinalReport = 'Overall counts: ' +\n\t\t\t\t'\\n\\tVertices: ' + this.globalCounts.vertices +\n\t\t\t\t'\\n\\tFaces: ' + this.globalCounts.faces +\n\t\t\t\t'\\n\\tMultiple definitions: ' + this.globalCounts.doubleIndicesCount;\n\t\t\tconsole.info( parserFinalReport );\n\n\t\t}\n\n\t}\n};\n\nexport { OBJLoader2Parser };\n"]}