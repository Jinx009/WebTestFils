{"version":3,"sources":["WorkerRunner.js"],"names":[],"mappings":"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","file":"WorkerRunner-compiled.js","sourcesContent":["/**\n * @author Kai Salmen / https://kaisalmen.de\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\n */\n\nconst ObjectManipulator = {\n\n\t/**\n\t * Applies values from parameter object via set functions or via direct assignment.\n\t *\n\t * @param {Object} objToAlter The objToAlter instance\n\t * @param {Object} params The parameter object\n\t */\n\tapplyProperties: function (objToAlter, params, forceCreation) {\n\n\t\t// fast-fail\n\t\tif (objToAlter === undefined || objToAlter === null || params === undefined || params === null) return;\n\n\t\tlet property, funcName, values;\n\t\tfor (property in params) {\n\n\t\t\tfuncName = 'set' + property.substring(0, 1).toLocaleUpperCase() + property.substring(1);\n\t\t\tvalues = params[property];\n\n\t\t\tif (typeof objToAlter[funcName] === 'function') {\n\n\t\t\t\tobjToAlter[funcName](values);\n\n\t\t\t} else if (objToAlter.hasOwnProperty(property) || forceCreation) {\n\n\t\t\t\tobjToAlter[property] = values;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n};\n\nconst DefaultWorkerPayloadHandler = function ( parser ) {\n\n\tthis.parser = parser;\n\tthis.logging = {\n\t\tenabled: false,\n\t\tdebug: false\n\t};\n\n};\n\nDefaultWorkerPayloadHandler.prototype = {\n\n\tconstructor: DefaultWorkerPayloadHandler,\n\n\thandlePayload: function ( payload ) {\n\n\t\tif ( payload.logging ) {\n\n\t\t\tthis.logging.enabled = payload.logging.enabled === true;\n\t\t\tthis.logging.debug = payload.logging.debug === true;\n\n\t\t}\n\t\tif ( payload.cmd === 'parse' ) {\n\n\t\t\tlet scope = this;\n\t\t\tlet callbacks = {\n\t\t\t\tcallbackOnAssetAvailable: function ( payload ) {\n\n\t\t\t\t\tself.postMessage( payload );\n\n\t\t\t\t},\n\t\t\t\tcallbackOnProgress: function ( text ) {\n\n\t\t\t\t\tif ( scope.logging.enabled && scope.logging.debug ) console.debug( 'WorkerRunner: progress: ' + text );\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet parser = this.parser;\n\t\t\tif ( typeof parser[ 'setLogging' ] === 'function' ) {\n\n\t\t\t\tparser.setLogging( this.logging.enabled, this.logging.debug );\n\n\t\t\t}\n\t\t\tObjectManipulator.applyProperties( parser, payload.params, false );\n\t\t\tObjectManipulator.applyProperties( parser, callbacks, false );\n\n\t\t\tlet arraybuffer = payload.data.input;\n\t\t\tlet executeFunctionName = 'execute';\n\t\t\tif ( typeof parser.getParseFunctionName === 'function' ) executeFunctionName = parser.getParseFunctionName();\n\t\t\tif ( payload.usesMeshDisassembler ) {\n\n\t\t\t\t// TODO: Allow to plug and use generic MeshDisassembler\n\n\t\t\t} else {\n\n\t\t\t\tparser[ executeFunctionName ]( arraybuffer, payload.data.options );\n\n\t\t\t}\n\t\t\tif ( this.logging.enabled ) console.log( 'WorkerRunner: Run complete!' );\n\n\t\t\tself.postMessage( {\n\t\t\t\tcmd: 'completeOverall',\n\t\t\t\tmsg: 'WorkerRunner completed run.'\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'WorkerRunner: Received unknown command: ' + payload.cmd );\n\n\t\t}\n\n\t}\n};\n\n\n/**\n * Default implementation of the WorkerRunner responsible for creation and configuration of the parser within the worker.\n * @constructor\n */\nconst WorkerRunner = function ( payloadHandler ) {\n\n\tthis.payloadHandler = payloadHandler;\n\n\tlet scope = this;\n\tlet scopedRunner = function ( event ) {\n\n\t\tscope.processMessage( event.data );\n\n\t};\n\tself.addEventListener( 'message', scopedRunner, false );\n\n};\n\nWorkerRunner.prototype = {\n\n\tconstructor: WorkerRunner,\n\n\t/**\n\t * Configures the Parser implementation according the supplied configuration object.\n\t *\n\t * @param {Object} payload Raw mesh description (buffers, params, materials) used to build one to many meshes.\n\t */\n\tprocessMessage: function ( payload ) {\n\n\t\tthis.payloadHandler.handlePayload( payload );\n\n\t}\n\n};\n\nexport {\n\tWorkerRunner,\n\tDefaultWorkerPayloadHandler,\n\tObjectManipulator\n};\n"]}