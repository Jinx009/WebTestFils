{"version":3,"sources":["SVGLoader.js"],"names":[],"mappings":"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","file":"SVGLoader-compiled.js","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n * @author zz85 / http://joshuakoo.com/\n * @author yomboprime / https://yombo.org\n */\n\nimport {\n\tBufferGeometry,\n\tColor,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tMatrix3,\n\tPath,\n\tShapePath,\n\tVector2,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar SVGLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n};\n\nSVGLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: SVGLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( text ) {\n\n\t\tfunction parseNode( node, style ) {\n\n\t\t\tif ( node.nodeType !== 1 ) return;\n\n\t\t\tvar transform = getNodeTransform( node );\n\n\t\t\tvar path = null;\n\n\t\t\tswitch ( node.nodeName ) {\n\n\t\t\t\tcase 'svg':\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'path':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tif ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rect':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseRectNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polygon':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parsePolygonNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polyline':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parsePolylineNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'circle':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseCircleNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ellipse':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseEllipseNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'line':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseLineNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log( node );\n\n\t\t\t}\n\n\t\t\tif ( path ) {\n\n\t\t\t\tif ( style.fill !== undefined && style.fill !== 'none' ) {\n\n\t\t\t\t\tpath.color.setStyle( style.fill );\n\n\t\t\t\t}\n\n\t\t\t\ttransformPath( path, currentTransform );\n\n\t\t\t\tpaths.push( path );\n\n\t\t\t\tpath.userData = { node: node, style: style };\n\n\t\t\t}\n\n\t\t\tvar nodes = node.childNodes;\n\n\t\t\tfor ( var i = 0; i < nodes.length; i ++ ) {\n\n\t\t\t\tparseNode( nodes[ i ], style );\n\n\t\t\t}\n\n\t\t\tif ( transform ) {\n\n\t\t\t\ttransformStack.pop();\n\n\t\t\t\tif ( transformStack.length > 0 ) {\n\n\t\t\t\t\tcurrentTransform.copy( transformStack[ transformStack.length - 1 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentTransform.identity();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parsePathNode( node ) {\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar point = new Vector2();\n\t\t\tvar control = new Vector2();\n\n\t\t\tvar firstPoint = new Vector2();\n\t\t\tvar isFirstPoint = true;\n\t\t\tvar doSetFirstPoint = false;\n\n\t\t\tvar d = node.getAttribute( 'd' );\n\n\t\t\t// console.log( d );\n\n\t\t\tvar commands = d.match( /[a-df-z][^a-df-z]*/ig );\n\n\t\t\tfor ( var i = 0, l = commands.length; i < l; i ++ ) {\n\n\t\t\t\tvar command = commands[ i ];\n\n\t\t\t\tvar type = command.charAt( 0 );\n\t\t\t\tvar data = command.substr( 1 ).trim();\n\n\t\t\t\tif ( isFirstPoint === true ) {\n\n\t\t\t\t\tdoSetFirstPoint = true;\n\t\t\t\t\tisFirstPoint = false;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'M':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\n\t\t\t\t\t\t\tif ( j === 0 ) {\n\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'H':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'V':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.y = numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'C':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 6 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 4 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 5 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 3 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 4 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 5 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'S':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Q':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'T':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tvar rx = getReflection( point.x, control.x );\n\t\t\t\t\t\t\tvar ry = getReflection( point.y, control.y );\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\trx,\n\t\t\t\t\t\t\t\try,\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 7 ) {\n\n\t\t\t\t\t\t\tvar start = point.clone();\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 5 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 6 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\n\t\t\t\t\t\t\tif ( j === 0 ) {\n\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'h':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.y += numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 6 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 4 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 5 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 2 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 3 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 4 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 5 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tvar rx = getReflection( point.x, control.x );\n\t\t\t\t\t\t\tvar ry = getReflection( point.y, control.y );\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\trx,\n\t\t\t\t\t\t\t\try,\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\t\tpoint.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = point.y + numbers[ j + 1 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'a':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 7 ) {\n\n\t\t\t\t\t\t\tvar start = point.clone();\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 5 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 6 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\tcase 'z':\n\t\t\t\t\t\tpath.currentPath.autoClose = true;\n\n\t\t\t\t\t\tif ( path.currentPath.curves.length > 0 ) {\n\n\t\t\t\t\t\t\t// Reset point to beginning of Path\n\t\t\t\t\t\t\tpoint.copy( firstPoint );\n\t\t\t\t\t\t\tpath.currentPath.currentPoint.copy( point );\n\t\t\t\t\t\t\tisFirstPoint = true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( command );\n\n\t\t\t\t}\n\n\t\t\t\t// console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n\t\t\t\tdoSetFirstPoint = false;\n\n\t\t\t}\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\t/**\n\t\t * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n\t\t * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n\t\t * From\n\t\t * rx ry x-axis-rotation large-arc-flag sweep-flag x y\n\t\t * To\n\t\t * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\n\t\t */\n\n\t\tfunction parseArcCommand( path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end ) {\n\n\t\t\tx_axis_rotation = x_axis_rotation * Math.PI / 180;\n\n\t\t\t// Ensure radii are positive\n\t\t\trx = Math.abs( rx );\n\t\t\try = Math.abs( ry );\n\n\t\t\t// Compute (x1′, y1′)\n\t\t\tvar dx2 = ( start.x - end.x ) / 2.0;\n\t\t\tvar dy2 = ( start.y - end.y ) / 2.0;\n\t\t\tvar x1p = Math.cos( x_axis_rotation ) * dx2 + Math.sin( x_axis_rotation ) * dy2;\n\t\t\tvar y1p = - Math.sin( x_axis_rotation ) * dx2 + Math.cos( x_axis_rotation ) * dy2;\n\n\t\t\t// Compute (cx′, cy′)\n\t\t\tvar rxs = rx * rx;\n\t\t\tvar rys = ry * ry;\n\t\t\tvar x1ps = x1p * x1p;\n\t\t\tvar y1ps = y1p * y1p;\n\n\t\t\t// Ensure radii are large enough\n\t\t\tvar cr = x1ps / rxs + y1ps / rys;\n\n\t\t\tif ( cr > 1 ) {\n\n\t\t\t\t// scale up rx,ry equally so cr == 1\n\t\t\t\tvar s = Math.sqrt( cr );\n\t\t\t\trx = s * rx;\n\t\t\t\try = s * ry;\n\t\t\t\trxs = rx * rx;\n\t\t\t\trys = ry * ry;\n\n\t\t\t}\n\n\t\t\tvar dq = ( rxs * y1ps + rys * x1ps );\n\t\t\tvar pq = ( rxs * rys - dq ) / dq;\n\t\t\tvar q = Math.sqrt( Math.max( 0, pq ) );\n\t\t\tif ( large_arc_flag === sweep_flag ) q = - q;\n\t\t\tvar cxp = q * rx * y1p / ry;\n\t\t\tvar cyp = - q * ry * x1p / rx;\n\n\t\t\t// Step 3: Compute (cx, cy) from (cx′, cy′)\n\t\t\tvar cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\n\t\t\tvar cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\n\n\t\t\t// Step 4: Compute θ1 and Δθ\n\t\t\tvar theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n\t\t\tvar delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n\t\t\tpath.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\n\n\t\t}\n\n\t\tfunction svgAngle( ux, uy, vx, vy ) {\n\n\t\t\tvar dot = ux * vx + uy * vy;\n\t\t\tvar len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n\t\t\tvar ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n\t\t\tif ( ( ux * vy - uy * vx ) < 0 ) ang = - ang;\n\t\t\treturn ang;\n\n\t\t}\n\n\t\t/*\n\t\t* According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\n\t\t* rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\n\t\t*/\n\t\tfunction parseRectNode( node ) {\n\n\t\t\tvar x = parseFloat( node.getAttribute( 'x' ) || 0 );\n\t\t\tvar y = parseFloat( node.getAttribute( 'y' ) || 0 );\n\t\t\tvar rx = parseFloat( node.getAttribute( 'rx' ) || 0 );\n\t\t\tvar ry = parseFloat( node.getAttribute( 'ry' ) || 0 );\n\t\t\tvar w = parseFloat( node.getAttribute( 'width' ) );\n\t\t\tvar h = parseFloat( node.getAttribute( 'height' ) );\n\n\t\t\tvar path = new ShapePath();\n\t\t\tpath.moveTo( x + 2 * rx, y );\n\t\t\tpath.lineTo( x + w - 2 * rx, y );\n\t\t\tif ( rx !== 0 || ry !== 0 ) path.bezierCurveTo( x + w, y, x + w, y, x + w, y + 2 * ry );\n\t\t\tpath.lineTo( x + w, y + h - 2 * ry );\n\t\t\tif ( rx !== 0 || ry !== 0 ) path.bezierCurveTo( x + w, y + h, x + w, y + h, x + w - 2 * rx, y + h );\n\t\t\tpath.lineTo( x + 2 * rx, y + h );\n\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\n\n\t\t\t\tpath.bezierCurveTo( x, y + h, x, y + h, x, y + h - 2 * ry );\n\n\t\t\t}\n\n\t\t\tpath.lineTo( x, y + 2 * ry );\n\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\n\n\t\t\t\tpath.bezierCurveTo( x, y, x, y, x + 2 * rx, y );\n\n\t\t\t}\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parsePolygonNode( node ) {\n\n\t\t\tfunction iterator( match, a, b ) {\n\n\t\t\t\tvar x = parseFloat( a );\n\t\t\t\tvar y = parseFloat( b );\n\n\t\t\t\tif ( index === 0 ) {\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t}\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar index = 0;\n\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\n\n\t\t\tpath.currentPath.autoClose = true;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parsePolylineNode( node ) {\n\n\t\t\tfunction iterator( match, a, b ) {\n\n\t\t\t\tvar x = parseFloat( a );\n\t\t\t\tvar y = parseFloat( b );\n\n\t\t\t\tif ( index === 0 ) {\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t}\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar index = 0;\n\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\n\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseCircleNode( node ) {\n\n\t\t\tvar x = parseFloat( node.getAttribute( 'cx' ) );\n\t\t\tvar y = parseFloat( node.getAttribute( 'cy' ) );\n\t\t\tvar r = parseFloat( node.getAttribute( 'r' ) );\n\n\t\t\tvar subpath = new Path();\n\t\t\tsubpath.absarc( x, y, r, 0, Math.PI * 2 );\n\n\t\t\tvar path = new ShapePath();\n\t\t\tpath.subPaths.push( subpath );\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseEllipseNode( node ) {\n\n\t\t\tvar x = parseFloat( node.getAttribute( 'cx' ) );\n\t\t\tvar y = parseFloat( node.getAttribute( 'cy' ) );\n\t\t\tvar rx = parseFloat( node.getAttribute( 'rx' ) );\n\t\t\tvar ry = parseFloat( node.getAttribute( 'ry' ) );\n\n\t\t\tvar subpath = new Path();\n\t\t\tsubpath.absellipse( x, y, rx, ry, 0, Math.PI * 2 );\n\n\t\t\tvar path = new ShapePath();\n\t\t\tpath.subPaths.push( subpath );\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseLineNode( node ) {\n\n\t\t\tvar x1 = parseFloat( node.getAttribute( 'x1' ) );\n\t\t\tvar y1 = parseFloat( node.getAttribute( 'y1' ) );\n\t\t\tvar x2 = parseFloat( node.getAttribute( 'x2' ) );\n\t\t\tvar y2 = parseFloat( node.getAttribute( 'y2' ) );\n\n\t\t\tvar path = new ShapePath();\n\t\t\tpath.moveTo( x1, y1 );\n\t\t\tpath.lineTo( x2, y2 );\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction parseStyle( node, style ) {\n\n\t\t\tstyle = Object.assign( {}, style ); // clone style\n\n\t\t\tfunction addStyle( svgName, jsName, adjustFunction ) {\n\n\t\t\t\tif ( adjustFunction === undefined ) adjustFunction = function copy( v ) {\n\n\t\t\t\t\treturn v;\n\n\t\t\t\t};\n\n\t\t\t\tif ( node.hasAttribute( svgName ) ) style[ jsName ] = adjustFunction( node.getAttribute( svgName ) );\n\t\t\t\tif ( node.style[ svgName ] !== '' ) style[ jsName ] = adjustFunction( node.style[ svgName ] );\n\n\t\t\t}\n\n\t\t\tfunction clamp( v ) {\n\n\t\t\t\treturn Math.max( 0, Math.min( 1, parseFloat( v ) ) );\n\n\t\t\t}\n\n\t\t\tfunction positive( v ) {\n\n\t\t\t\treturn Math.max( 0, parseFloat( v ) );\n\n\t\t\t}\n\n\t\t\taddStyle( 'fill', 'fill' );\n\t\t\taddStyle( 'fill-opacity', 'fillOpacity', clamp );\n\t\t\taddStyle( 'stroke', 'stroke' );\n\t\t\taddStyle( 'stroke-opacity', 'strokeOpacity', clamp );\n\t\t\taddStyle( 'stroke-width', 'strokeWidth', positive );\n\t\t\taddStyle( 'stroke-linejoin', 'strokeLineJoin' );\n\t\t\taddStyle( 'stroke-linecap', 'strokeLineCap' );\n\t\t\taddStyle( 'stroke-miterlimit', 'strokeMiterLimit', positive );\n\n\t\t\treturn style;\n\n\t\t}\n\n\t\t// http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n\n\t\tfunction getReflection( a, b ) {\n\n\t\t\treturn a - ( b - a );\n\n\t\t}\n\n\t\tfunction parseFloats( string ) {\n\n\t\t\tvar array = string.split( /[\\s,]+|(?=\\s?[+\\-])/ );\n\n\t\t\tfor ( var i = 0; i < array.length; i ++ ) {\n\n\t\t\t\tvar number = array[ i ];\n\n\t\t\t\t// Handle values like 48.6037.7.8\n\t\t\t\t// TODO Find a regex for this\n\n\t\t\t\tif ( number.indexOf( '.' ) !== number.lastIndexOf( '.' ) ) {\n\n\t\t\t\t\tvar split = number.split( '.' );\n\n\t\t\t\t\tfor ( var s = 2; s < split.length; s ++ ) {\n\n\t\t\t\t\t\tarray.splice( i + s - 1, 0, '0.' + split[ s ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tarray[ i ] = parseFloat( number );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\n\t\t}\n\n\t\tfunction getNodeTransform( node ) {\n\n\t\t\tif ( ! node.hasAttribute( 'transform' ) ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar transform = parseNodeTransform( node );\n\n\t\t\tif ( transformStack.length > 0 ) {\n\n\t\t\t\ttransform.premultiply( transformStack[ transformStack.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tcurrentTransform.copy( transform );\n\t\t\ttransformStack.push( transform );\n\n\t\t\treturn transform;\n\n\t\t}\n\n\t\tfunction parseNodeTransform( node ) {\n\n\t\t\tvar transform = new Matrix3();\n\t\t\tvar currentTransform = tempTransform0;\n\t\t\tvar transformsTexts = node.getAttribute( 'transform' ).split( ')' );\n\n\t\t\tfor ( var tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\n\n\t\t\t\tvar transformText = transformsTexts[ tIndex ].trim();\n\n\t\t\t\tif ( transformText === '' ) continue;\n\n\t\t\t\tvar openParPos = transformText.indexOf( '(' );\n\t\t\t\tvar closeParPos = transformText.length;\n\n\t\t\t\tif ( openParPos > 0 && openParPos < closeParPos ) {\n\n\t\t\t\t\tvar transformType = transformText.substr( 0, openParPos );\n\n\t\t\t\t\tvar array = parseFloats( transformText.substr( openParPos + 1, closeParPos - openParPos - 1 ) );\n\n\t\t\t\t\tcurrentTransform.identity();\n\n\t\t\t\t\tswitch ( transformType ) {\n\n\t\t\t\t\t\tcase \"translate\":\n\n\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\tvar tx = array[ 0 ];\n\t\t\t\t\t\t\t\tvar ty = tx;\n\n\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\n\n\t\t\t\t\t\t\t\t\tty = array[ 1 ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcurrentTransform.translate( tx, ty );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"rotate\":\n\n\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\tvar angle = 0;\n\t\t\t\t\t\t\t\tvar cx = 0;\n\t\t\t\t\t\t\t\tvar cy = 0;\n\n\t\t\t\t\t\t\t\t// Angle\n\t\t\t\t\t\t\t\tangle = - array[ 0 ] * Math.PI / 180;\n\n\t\t\t\t\t\t\t\tif ( array.length >= 3 ) {\n\n\t\t\t\t\t\t\t\t\t// Center x, y\n\t\t\t\t\t\t\t\t\tcx = array[ 1 ];\n\t\t\t\t\t\t\t\t\tcy = array[ 2 ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Rotate around center (cx, cy)\n\t\t\t\t\t\t\t\ttempTransform1.identity().translate( - cx, - cy );\n\t\t\t\t\t\t\t\ttempTransform2.identity().rotate( angle );\n\t\t\t\t\t\t\t\ttempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\n\t\t\t\t\t\t\t\ttempTransform1.identity().translate( cx, cy );\n\t\t\t\t\t\t\t\tcurrentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"scale\":\n\n\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\tvar scaleX = array[ 0 ];\n\t\t\t\t\t\t\t\tvar scaleY = scaleX;\n\n\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\n\n\t\t\t\t\t\t\t\t\tscaleY = array[ 1 ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcurrentTransform.scale( scaleX, scaleY );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"skewX\":\n\n\t\t\t\t\t\t\tif ( array.length === 1 ) {\n\n\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\t1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\n\t\t\t\t\t\t\t\t\t0, 1, 0,\n\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"skewY\":\n\n\t\t\t\t\t\t\tif ( array.length === 1 ) {\n\n\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\t1, 0, 0,\n\t\t\t\t\t\t\t\t\tMath.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\n\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"matrix\":\n\n\t\t\t\t\t\t\tif ( array.length === 6 ) {\n\n\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\tarray[ 0 ], array[ 2 ], array[ 4 ],\n\t\t\t\t\t\t\t\t\tarray[ 1 ], array[ 3 ], array[ 5 ],\n\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttransform.premultiply( currentTransform );\n\n\t\t\t}\n\n\t\t\treturn transform;\n\n\t\t}\n\n\t\tfunction transformPath( path, m ) {\n\n\t\t\tfunction transfVec2( v2 ) {\n\n\t\t\t\ttempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\n\n\t\t\t\tv2.set( tempV3.x, tempV3.y );\n\n\t\t\t}\n\n\t\t\tvar isRotated = isTransformRotated( m );\n\n\t\t\tvar subPaths = path.subPaths;\n\n\t\t\tfor ( var i = 0, n = subPaths.length; i < n; i ++ ) {\n\n\t\t\t\tvar subPath = subPaths[ i ];\n\t\t\t\tvar curves = subPath.curves;\n\n\t\t\t\tfor ( var j = 0; j < curves.length; j ++ ) {\n\n\t\t\t\t\tvar curve = curves[ j ];\n\n\t\t\t\t\tif ( curve.isLineCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\n\t\t\t\t\t} else if ( curve.isCubicBezierCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v0 );\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\t\t\t\t\t\ttransfVec2( curve.v3 );\n\n\t\t\t\t\t} else if ( curve.isQuadraticBezierCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v0 );\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\n\t\t\t\t\t} else if ( curve.isEllipseCurve ) {\n\n\t\t\t\t\t\tif ( isRotated ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented.\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttempV2.set( curve.aX, curve.aY );\n\t\t\t\t\t\ttransfVec2( tempV2 );\n\t\t\t\t\t\tcurve.aX = tempV2.x;\n\t\t\t\t\t\tcurve.aY = tempV2.y;\n\n\t\t\t\t\t\tcurve.xRadius *= getTransformScaleX( m );\n\t\t\t\t\t\tcurve.yRadius *= getTransformScaleY( m );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isTransformRotated( m ) {\n\n\t\t\treturn m.elements[ 1 ] !== 0 || m.elements[ 3 ] !== 0;\n\n\t\t}\n\n\t\tfunction getTransformScaleX( m ) {\n\n\t\t\tvar te = m.elements;\n\t\t\treturn Math.sqrt( te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] );\n\n\t\t}\n\n\t\tfunction getTransformScaleY( m ) {\n\n\t\t\tvar te = m.elements;\n\t\t\treturn Math.sqrt( te[ 3 ] * te[ 3 ] + te[ 4 ] * te[ 4 ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconsole.log( 'THREE.SVGLoader' );\n\n\t\tvar paths = [];\n\n\t\tvar transformStack = [];\n\n\t\tvar tempTransform0 = new Matrix3();\n\t\tvar tempTransform1 = new Matrix3();\n\t\tvar tempTransform2 = new Matrix3();\n\t\tvar tempTransform3 = new Matrix3();\n\t\tvar tempV2 = new Vector2();\n\t\tvar tempV3 = new Vector3();\n\n\t\tvar currentTransform = new Matrix3();\n\n\t\tconsole.time( 'THREE.SVGLoader: DOMParser' );\n\n\t\tvar xml = new DOMParser().parseFromString( text, 'image/svg+xml' ); // application/xml\n\n\t\tconsole.timeEnd( 'THREE.SVGLoader: DOMParser' );\n\n\t\tconsole.time( 'THREE.SVGLoader: Parse' );\n\n\t\tparseNode( xml.documentElement, {\n\t\t\tfill: '#000',\n\t\t\tfillOpacity: 1,\n\t\t\tstrokeOpacity: 1,\n\t\t\tstrokeWidth: 1,\n\t\t\tstrokeLineJoin: 'miter',\n\t\t\tstrokeLineCap: 'butt',\n\t\t\tstrokeMiterLimit: 4\n\t\t} );\n\n\t\tvar data = { paths: paths, xml: xml.documentElement };\n\n\t\t// console.log( paths );\n\n\n\t\tconsole.timeEnd( 'THREE.SVGLoader: Parse' );\n\n\t\treturn data;\n\n\t}\n\n} );\n\nSVGLoader.getStrokeStyle = function ( width, color, lineJoin, lineCap, miterLimit ) {\n\n\t// Param width: Stroke width\n\t// Param color: As returned by Color.getStyle()\n\t// Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n\t// Param lineCap: One of \"round\", \"square\" or \"butt\"\n\t// Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n\t// Returns style object\n\n\twidth = width !== undefined ? width : 1;\n\tcolor = color !== undefined ? color : '#000';\n\tlineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n\tlineCap = lineCap !== undefined ? lineCap : 'butt';\n\tmiterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n\treturn {\n\t\tstrokeColor: color,\n\t\tstrokeWidth: width,\n\t\tstrokeLineJoin: lineJoin,\n\t\tstrokeLineCap: lineCap,\n\t\tstrokeMiterLimit: miterLimit\n\t};\n\n};\n\nSVGLoader.pointsToStroke = function ( points, style, arcDivisions, minDistance ) {\n\n\t// Generates a stroke with some witdh around the given path.\n\t// The path can be open or closed (last point equals to first point)\n\t// Param points: Array of Vector2D (the path). Minimum 2 points.\n\t// Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n\t// Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n\t// Param minDistance: Points closer to this distance will be merged. (Optional)\n\t// Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tif ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\n\n\t\treturn null;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\treturn geometry;\n\n};\n\nSVGLoader.pointsToStrokeWithBuffers = function () {\n\n\tvar tempV2_1 = new Vector2();\n\tvar tempV2_2 = new Vector2();\n\tvar tempV2_3 = new Vector2();\n\tvar tempV2_4 = new Vector2();\n\tvar tempV2_5 = new Vector2();\n\tvar tempV2_6 = new Vector2();\n\tvar tempV2_7 = new Vector2();\n\tvar lastPointL = new Vector2();\n\tvar lastPointR = new Vector2();\n\tvar point0L = new Vector2();\n\tvar point0R = new Vector2();\n\tvar currentPointL = new Vector2();\n\tvar currentPointR = new Vector2();\n\tvar nextPointL = new Vector2();\n\tvar nextPointR = new Vector2();\n\tvar innerPoint = new Vector2();\n\tvar outerPoint = new Vector2();\n\n\treturn function ( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset ) {\n\n\t\t// This function can be called to update existing arrays or buffers.\n\t\t// Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n\t\t// Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n\t\t// Returns number of written vertices / normals / uvs pairs\n\t\t// if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n\t\t// 'normals' and 'uvs' buffers are optional\n\n\t\tarcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n\t\tminDistance = minDistance !== undefined ? minDistance : 0.001;\n\t\tvertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n\t\t// First ensure there are no duplicated points\n\t\tpoints = removeDuplicatedPoints( points );\n\n\t\tvar numPoints = points.length;\n\n\t\tif ( numPoints < 2 ) return 0;\n\n\t\tvar isClosed = points[ 0 ].equals( points[ numPoints - 1 ] );\n\n\t\tvar currentPoint;\n\t\tvar previousPoint = points[ 0 ];\n\t\tvar nextPoint;\n\n\t\tvar strokeWidth2 = style.strokeWidth / 2;\n\n\t\tvar deltaU = 1 / ( numPoints - 1 );\n\t\tvar u0 = 0;\n\n\t\tvar innerSideModified;\n\t\tvar joinIsOnLeftSide;\n\t\tvar isMiter;\n\t\tvar initialJoinIsOnLeftSide = false;\n\n\t\tvar numVertices = 0;\n\t\tvar currentCoordinate = vertexOffset * 3;\n\t\tvar currentCoordinateUV = vertexOffset * 2;\n\n\t\t// Get initial left and right stroke points\n\t\tgetNormal( points[ 0 ], points[ 1 ], tempV2_1 ).multiplyScalar( strokeWidth2 );\n\t\tlastPointL.copy( points[ 0 ] ).sub( tempV2_1 );\n\t\tlastPointR.copy( points[ 0 ] ).add( tempV2_1 );\n\t\tpoint0L.copy( lastPointL );\n\t\tpoint0R.copy( lastPointR );\n\n\t\tfor ( var iPoint = 1; iPoint < numPoints; iPoint ++ ) {\n\n\t\t\tcurrentPoint = points[ iPoint ];\n\n\t\t\t// Get next point\n\t\t\tif ( iPoint === numPoints - 1 ) {\n\n\t\t\t\tif ( isClosed ) {\n\n\t\t\t\t\t// Skip duplicated initial point\n\t\t\t\t\tnextPoint = points[ 1 ];\n\n\t\t\t\t} else nextPoint = undefined;\n\n\t\t\t} else {\n\n\t\t\t\tnextPoint = points[ iPoint + 1 ];\n\n\t\t\t}\n\n\t\t\t// Normal of previous segment in tempV2_1\n\t\t\tvar normal1 = tempV2_1;\n\t\t\tgetNormal( previousPoint, currentPoint, normal1 );\n\n\t\t\ttempV2_3.copy( normal1 ).multiplyScalar( strokeWidth2 );\n\t\t\tcurrentPointL.copy( currentPoint ).sub( tempV2_3 );\n\t\t\tcurrentPointR.copy( currentPoint ).add( tempV2_3 );\n\n\t\t\tvar u1 = u0 + deltaU;\n\n\t\t\tinnerSideModified = false;\n\n\t\t\tif ( nextPoint !== undefined ) {\n\n\t\t\t\t// Normal of next segment in tempV2_2\n\t\t\t\tgetNormal( currentPoint, nextPoint, tempV2_2 );\n\n\t\t\t\ttempV2_3.copy( tempV2_2 ).multiplyScalar( strokeWidth2 );\n\t\t\t\tnextPointL.copy( currentPoint ).sub( tempV2_3 );\n\t\t\t\tnextPointR.copy( currentPoint ).add( tempV2_3 );\n\n\t\t\t\tjoinIsOnLeftSide = true;\n\t\t\t\ttempV2_3.subVectors( nextPoint, previousPoint );\n\t\t\t\tif ( normal1.dot( tempV2_3 ) < 0 ) {\n\n\t\t\t\t\tjoinIsOnLeftSide = false;\n\n\t\t\t\t}\n\t\t\t\tif ( iPoint === 1 ) initialJoinIsOnLeftSide = joinIsOnLeftSide;\n\n\t\t\t\ttempV2_3.subVectors( nextPoint, currentPoint );\n\t\t\t\ttempV2_3.normalize();\n\t\t\t\tvar dot = Math.abs( normal1.dot( tempV2_3 ) );\n\n\t\t\t\t// If path is straight, don't create join\n\t\t\t\tif ( dot !== 0 ) {\n\n\t\t\t\t\t// Compute inner and outer segment intersections\n\t\t\t\t\tvar miterSide = strokeWidth2 / dot;\n\t\t\t\t\ttempV2_3.multiplyScalar( - miterSide );\n\t\t\t\t\ttempV2_4.subVectors( currentPoint, previousPoint );\n\t\t\t\t\ttempV2_5.copy( tempV2_4 ).setLength( miterSide ).add( tempV2_3 );\n\t\t\t\t\tinnerPoint.copy( tempV2_5 ).negate();\n\t\t\t\t\tvar miterLength2 = tempV2_5.length();\n\t\t\t\t\tvar segmentLengthPrev = tempV2_4.length();\n\t\t\t\t\ttempV2_4.divideScalar( segmentLengthPrev );\n\t\t\t\t\ttempV2_6.subVectors( nextPoint, currentPoint );\n\t\t\t\t\tvar segmentLengthNext = tempV2_6.length();\n\t\t\t\t\ttempV2_6.divideScalar( segmentLengthNext );\n\t\t\t\t\t// Check that previous and next segments doesn't overlap with the innerPoint of intersection\n\t\t\t\t\tif ( tempV2_4.dot( innerPoint ) < segmentLengthPrev && tempV2_6.dot( innerPoint ) < segmentLengthNext ) {\n\n\t\t\t\t\t\tinnerSideModified = true;\n\n\t\t\t\t\t}\n\t\t\t\t\touterPoint.copy( tempV2_5 ).add( currentPoint );\n\t\t\t\t\tinnerPoint.add( currentPoint );\n\n\t\t\t\t\tisMiter = false;\n\n\t\t\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\tnextPointR.copy( innerPoint );\n\t\t\t\t\t\t\tcurrentPointR.copy( innerPoint );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tnextPointL.copy( innerPoint );\n\t\t\t\t\t\t\tcurrentPointL.copy( innerPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// The segment triangles are generated here if there was overlapping\n\n\t\t\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch ( style.strokeLineJoin ) {\n\n\t\t\t\t\t\tcase 'bevel':\n\n\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'round':\n\n\t\t\t\t\t\t\t// Segment triangles\n\n\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\n\n\t\t\t\t\t\t\t// Join triangles\n\n\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, currentPointL, nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, nextPointR, currentPointR, u1, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'miter':\n\t\t\t\t\t\tcase 'miter-clip':\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tvar miterFraction = ( strokeWidth2 * style.strokeMiterLimit ) / miterLength2;\n\n\t\t\t\t\t\t\tif ( miterFraction < 1 ) {\n\n\t\t\t\t\t\t\t\t// The join miter length exceeds the miter limit\n\n\t\t\t\t\t\t\t\tif ( style.strokeLineJoin !== 'miter-clip' ) {\n\n\t\t\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// Segment triangles\n\n\t\t\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\n\n\t\t\t\t\t\t\t\t\t// Miter-clip join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointL ).multiplyScalar( miterFraction ).add( currentPointL );\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointL ).multiplyScalar( miterFraction ).add( nextPointL );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointR ).multiplyScalar( miterFraction ).add( currentPointR );\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointR ).multiplyScalar( miterFraction ).add( nextPointR );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Miter join segment triangles\n\n\t\t\t\t\t\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t\t\t\t\t\t// Optimized segment + join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\tnextPointL.copy( outerPoint );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tnextPointR.copy( outerPoint );\n\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// Add extra miter join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tisMiter = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// The segment triangles are generated here when two consecutive points are collinear\n\n\t\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// The segment triangles are generated here if it is the ending segment\n\n\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t}\n\n\t\t\tif ( ! isClosed && iPoint === numPoints - 1 ) {\n\n\t\t\t\t// Start line endcap\n\t\t\t\taddCapGeometry( points[ 0 ], point0L, point0R, joinIsOnLeftSide, true, u0 );\n\n\t\t\t}\n\n\t\t\t// Increment loop variables\n\n\t\t\tu0 = u1;\n\n\t\t\tpreviousPoint = currentPoint;\n\n\t\t\tlastPointL.copy( nextPointL );\n\t\t\tlastPointR.copy( nextPointR );\n\n\t\t}\n\n\t\tif ( ! isClosed ) {\n\n\t\t\t// Ending line endcap\n\t\t\taddCapGeometry( currentPoint, currentPointL, currentPointR, joinIsOnLeftSide, false, u1 );\n\n\t\t} else if ( innerSideModified && vertices ) {\n\n\t\t\t// Modify path first segment vertices to adjust to the segments inner and outer intersections\n\n\t\t\tvar lastOuter = outerPoint;\n\t\t\tvar lastInner = innerPoint;\n\n\t\t\tif ( initialJoinIsOnLeftSide !== joinIsOnLeftSide ) {\n\n\t\t\t\tlastOuter = innerPoint;\n\t\t\t\tlastInner = outerPoint;\n\n\t\t\t}\n\n\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\tlastInner.toArray( vertices, 0 * 3 );\n\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\n\n\t\t\t\tif ( isMiter ) {\n\n\t\t\t\t\tlastOuter.toArray( vertices, 1 * 3 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tlastInner.toArray( vertices, 1 * 3 );\n\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\n\n\t\t\t\tif ( isMiter ) {\n\n\t\t\t\t\tlastOuter.toArray( vertices, 0 * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn numVertices;\n\n\t\t// -- End of algorithm\n\n\t\t// -- Functions\n\n\t\tfunction getNormal( p1, p2, result ) {\n\n\t\t\tresult.subVectors( p2, p1 );\n\t\t\treturn result.set( - result.y, result.x ).normalize();\n\n\t\t}\n\n\t\tfunction addVertex( position, u, v ) {\n\n\t\t\tif ( vertices ) {\n\n\t\t\t\tvertices[ currentCoordinate ] = position.x;\n\t\t\t\tvertices[ currentCoordinate + 1 ] = position.y;\n\t\t\t\tvertices[ currentCoordinate + 2 ] = 0;\n\n\t\t\t\tif ( normals ) {\n\n\t\t\t\t\tnormals[ currentCoordinate ] = 0;\n\t\t\t\t\tnormals[ currentCoordinate + 1 ] = 0;\n\t\t\t\t\tnormals[ currentCoordinate + 2 ] = 1;\n\n\t\t\t\t}\n\n\t\t\t\tcurrentCoordinate += 3;\n\n\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\tuvs[ currentCoordinateUV ] = u;\n\t\t\t\t\tuvs[ currentCoordinateUV + 1 ] = v;\n\n\t\t\t\t\tcurrentCoordinateUV += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnumVertices += 3;\n\n\t\t}\n\n\t\tfunction makeCircularSector( center, p1, p2, u, v ) {\n\n\t\t\t// param p1, p2: Points in the circle arc.\n\t\t\t// p1 and p2 are in clockwise direction.\n\n\t\t\ttempV2_1.copy( p1 ).sub( center ).normalize();\n\t\t\ttempV2_2.copy( p2 ).sub( center ).normalize();\n\n\t\t\tvar angle = Math.PI;\n\t\t\tvar dot = tempV2_1.dot( tempV2_2 );\n\t\t\tif ( Math.abs( dot ) < 1 ) angle = Math.abs( Math.acos( dot ) );\n\n\t\t\tangle /= arcDivisions;\n\n\t\t\ttempV2_3.copy( p1 );\n\n\t\t\tfor ( var i = 0, il = arcDivisions - 1; i < il; i ++ ) {\n\n\t\t\t\ttempV2_4.copy( tempV2_3 ).rotateAround( center, angle );\n\n\t\t\t\taddVertex( tempV2_3, u, v );\n\t\t\t\taddVertex( tempV2_4, u, v );\n\t\t\t\taddVertex( center, u, 0.5 );\n\n\t\t\t\ttempV2_3.copy( tempV2_4 );\n\n\t\t\t}\n\n\t\t\taddVertex( tempV2_4, u, v );\n\t\t\taddVertex( p2, u, v );\n\t\t\taddVertex( center, u, 0.5 );\n\n\t\t}\n\n\t\tfunction makeSegmentTriangles() {\n\n\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\taddVertex( currentPointL, u1, 1 );\n\t\t\taddVertex( currentPointR, u1, 0 );\n\n\t\t}\n\n\t\tfunction makeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u ) {\n\n\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t// Optimized segment + bevel triangles\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t// Path segments triangles\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\t// Bevel join triangle\n\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Path segments triangles\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\t// Bevel join triangle\n\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bevel join triangle. The segment triangles are done in the main loop\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified ) {\n\n\t\t\tif ( innerSideModified ) {\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( nextPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPointR, u0, 1 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( nextPointR, u0, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addCapGeometry( center, p1, p2, joinIsOnLeftSide, start, u ) {\n\n\t\t\t// param center: End point of the path\n\t\t\t// param p1, p2: Left and right cap points\n\n\t\t\tswitch ( style.strokeLineCap ) {\n\n\t\t\t\tcase 'round':\n\n\t\t\t\t\tif ( start ) {\n\n\t\t\t\t\t\tmakeCircularSector( center, p2, p1, u, 0.5 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmakeCircularSector( center, p1, p2, u, 0.5 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'square':\n\n\t\t\t\t\tif ( start ) {\n\n\t\t\t\t\t\ttempV2_1.subVectors( p1, center );\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\n\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\n\n\t\t\t\t\t\t// Modify already existing vertices\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 3 * 3 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 3 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttempV2_1.subVectors( p2, center );\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\n\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\n\n\t\t\t\t\t\tvar vl = vertices.length;\n\n\t\t\t\t\t\t// Modify already existing vertices\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 2 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 2 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'butt':\n\t\t\t\tdefault:\n\n\t\t\t\t\t// Nothing to do here\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction removeDuplicatedPoints( points ) {\n\n\t\t\t// Creates a new array if necessary with duplicated points removed.\n\t\t\t// This does not remove duplicated initial and ending points of a closed path.\n\n\t\t\tvar dupPoints = false;\n\t\t\tfor ( var i = 1, n = points.length - 1; i < n; i ++ ) {\n\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) < minDistance ) {\n\n\t\t\t\t\tdupPoints = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! dupPoints ) return points;\n\n\t\t\tvar newPoints = [];\n\t\t\tnewPoints.push( points[ 0 ] );\n\n\t\t\tfor ( var i = 1, n = points.length - 1; i < n; i ++ ) {\n\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) >= minDistance ) {\n\n\t\t\t\t\tnewPoints.push( points[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnewPoints.push( points[ points.length - 1 ] );\n\n\t\t\treturn newPoints;\n\n\t\t}\n\n\t};\n\n}();\n\nexport { SVGLoader };\n"]}