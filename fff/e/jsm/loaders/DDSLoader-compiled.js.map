{"version":3,"sources":["DDSLoader.js"],"names":[],"mappings":"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","file":"DDSLoader-compiled.js","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport {\n\tCompressedTextureLoader,\n\tRGBAFormat,\n\tRGBA_S3TC_DXT3_Format,\n\tRGBA_S3TC_DXT5_Format,\n\tRGB_ETC1_Format,\n\tRGB_S3TC_DXT1_Format\n} from \"../../../build/three.module.js\";\n\nvar DDSLoader = function ( manager ) {\n\n\tCompressedTextureLoader.call( this, manager );\n\n};\n\nDDSLoader.prototype = Object.assign( Object.create( CompressedTextureLoader.prototype ), {\n\n\tconstructor: DDSLoader,\n\n\tparse: function ( buffer, loadMipmaps ) {\n\n\t\tvar dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\n\n\t\t// Adapted from @toji's DDS utils\n\t\t// https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\n\n\t\t// All values and structures referenced from:\n\t\t// http://msdn.microsoft.com/en-us/library/bb943991.aspx/\n\n\t\tvar DDS_MAGIC = 0x20534444;\n\n\t\tvar DDSD_CAPS = 0x1,\n\t\t\tDDSD_HEIGHT = 0x2,\n\t\t\tDDSD_WIDTH = 0x4,\n\t\t\tDDSD_PITCH = 0x8,\n\t\t\tDDSD_PIXELFORMAT = 0x1000,\n\t\t\tDDSD_MIPMAPCOUNT = 0x20000,\n\t\t\tDDSD_LINEARSIZE = 0x80000,\n\t\t\tDDSD_DEPTH = 0x800000;\n\n\t\tvar DDSCAPS_COMPLEX = 0x8,\n\t\t\tDDSCAPS_MIPMAP = 0x400000,\n\t\t\tDDSCAPS_TEXTURE = 0x1000;\n\n\t\tvar DDSCAPS2_CUBEMAP = 0x200,\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEX = 0x400,\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,\n\t\t\tDDSCAPS2_VOLUME = 0x200000;\n\n\t\tvar DDPF_ALPHAPIXELS = 0x1,\n\t\t\tDDPF_ALPHA = 0x2,\n\t\t\tDDPF_FOURCC = 0x4,\n\t\t\tDDPF_RGB = 0x40,\n\t\t\tDDPF_YUV = 0x200,\n\t\t\tDDPF_LUMINANCE = 0x20000;\n\n\t\tfunction fourCCToInt32( value ) {\n\n\t\t\treturn value.charCodeAt( 0 ) +\n\t\t\t\t( value.charCodeAt( 1 ) << 8 ) +\n\t\t\t\t( value.charCodeAt( 2 ) << 16 ) +\n\t\t\t\t( value.charCodeAt( 3 ) << 24 );\n\n\t\t}\n\n\t\tfunction int32ToFourCC( value ) {\n\n\t\t\treturn String.fromCharCode(\n\t\t\t\tvalue & 0xff,\n\t\t\t\t( value >> 8 ) & 0xff,\n\t\t\t\t( value >> 16 ) & 0xff,\n\t\t\t\t( value >> 24 ) & 0xff\n\t\t\t);\n\n\t\t}\n\n\t\tfunction loadARGBMip( buffer, dataOffset, width, height ) {\n\n\t\t\tvar dataLength = width * height * 4;\n\t\t\tvar srcBuffer = new Uint8Array( buffer, dataOffset, dataLength );\n\t\t\tvar byteArray = new Uint8Array( dataLength );\n\t\t\tvar dst = 0;\n\t\t\tvar src = 0;\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\n\n\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\tvar b = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar g = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar r = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar a = srcBuffer[ src ]; src ++;\n\t\t\t\t\tbyteArray[ dst ] = r; dst ++;\t//r\n\t\t\t\t\tbyteArray[ dst ] = g; dst ++;\t//g\n\t\t\t\t\tbyteArray[ dst ] = b; dst ++;\t//b\n\t\t\t\t\tbyteArray[ dst ] = a; dst ++;\t//a\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn byteArray;\n\n\t\t}\n\n\t\tvar FOURCC_DXT1 = fourCCToInt32( \"DXT1\" );\n\t\tvar FOURCC_DXT3 = fourCCToInt32( \"DXT3\" );\n\t\tvar FOURCC_DXT5 = fourCCToInt32( \"DXT5\" );\n\t\tvar FOURCC_ETC1 = fourCCToInt32( \"ETC1\" );\n\n\t\tvar headerLengthInt = 31; // The header length in 32 bit ints\n\n\t\t// Offsets into the header array\n\n\t\tvar off_magic = 0;\n\n\t\tvar off_size = 1;\n\t\tvar off_flags = 2;\n\t\tvar off_height = 3;\n\t\tvar off_width = 4;\n\n\t\tvar off_mipmapCount = 7;\n\n\t\tvar off_pfFlags = 20;\n\t\tvar off_pfFourCC = 21;\n\t\tvar off_RGBBitCount = 22;\n\t\tvar off_RBitMask = 23;\n\t\tvar off_GBitMask = 24;\n\t\tvar off_BBitMask = 25;\n\t\tvar off_ABitMask = 26;\n\n\t\tvar off_caps = 27;\n\t\tvar off_caps2 = 28;\n\t\tvar off_caps3 = 29;\n\t\tvar off_caps4 = 30;\n\n\t\t// Parse header\n\n\t\tvar header = new Int32Array( buffer, 0, headerLengthInt );\n\n\t\tif ( header[ off_magic ] !== DDS_MAGIC ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Invalid magic number in DDS header.' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tif ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tvar blockBytes;\n\n\t\tvar fourCC = header[ off_pfFourCC ];\n\n\t\tvar isRGBAUncompressed = false;\n\n\t\tswitch ( fourCC ) {\n\n\t\t\tcase FOURCC_DXT1:\n\n\t\t\t\tblockBytes = 8;\n\t\t\t\tdds.format = RGB_S3TC_DXT1_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_DXT3:\n\n\t\t\t\tblockBytes = 16;\n\t\t\t\tdds.format = RGBA_S3TC_DXT3_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_DXT5:\n\n\t\t\t\tblockBytes = 16;\n\t\t\t\tdds.format = RGBA_S3TC_DXT5_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_ETC1:\n\n\t\t\t\tblockBytes = 8;\n\t\t\t\tdds.format = RGB_ETC1_Format;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tif ( header[ off_RGBBitCount ] === 32\n\t\t\t\t\t&& header[ off_RBitMask ] & 0xff0000\n\t\t\t\t\t&& header[ off_GBitMask ] & 0xff00\n\t\t\t\t\t&& header[ off_BBitMask ] & 0xff\n\t\t\t\t\t&& header[ off_ABitMask ] & 0xff000000 ) {\n\n\t\t\t\t\tisRGBAUncompressed = true;\n\t\t\t\t\tblockBytes = 64;\n\t\t\t\t\tdds.format = RGBAFormat;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC( fourCC ) );\n\t\t\t\t\treturn dds;\n\n\t\t\t\t}\n\n\t\t}\n\n\t\tdds.mipmapCount = 1;\n\n\t\tif ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {\n\n\t\t\tdds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );\n\n\t\t}\n\n\t\tvar caps2 = header[ off_caps2 ];\n\t\tdds.isCubemap = caps2 & DDSCAPS2_CUBEMAP ? true : false;\n\t\tif ( dds.isCubemap && (\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEX ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEY ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ )\n\t\t) ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Incomplete cubemap faces' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tdds.width = header[ off_width ];\n\t\tdds.height = header[ off_height ];\n\n\t\tvar dataOffset = header[ off_size ] + 4;\n\n\t\t// Extract mipmaps buffers\n\n\t\tvar faces = dds.isCubemap ? 6 : 1;\n\n\t\tfor ( var face = 0; face < faces; face ++ ) {\n\n\t\t\tvar width = dds.width;\n\t\t\tvar height = dds.height;\n\n\t\t\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\n\n\t\t\t\tif ( isRGBAUncompressed ) {\n\n\t\t\t\t\tvar byteArray = loadARGBMip( buffer, dataOffset, width, height );\n\t\t\t\t\tvar dataLength = byteArray.length;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;\n\t\t\t\t\tvar byteArray = new Uint8Array( buffer, dataOffset, dataLength );\n\n\t\t\t\t}\n\n\t\t\t\tvar mipmap = { \"data\": byteArray, \"width\": width, \"height\": height };\n\t\t\t\tdds.mipmaps.push( mipmap );\n\n\t\t\t\tdataOffset += dataLength;\n\n\t\t\t\twidth = Math.max( width >> 1, 1 );\n\t\t\t\theight = Math.max( height >> 1, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dds;\n\n\t}\n\n} );\n\nexport { DDSLoader };\n"]}