{"version":3,"sources":["LegacyJSONLoader.js"],"names":[],"mappings":"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","file":"LegacyJSONLoader-compiled.js","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tAdditiveBlending,\n\tAnimationClip,\n\tBackSide,\n\tColor,\n\tCustomBlending,\n\tDoubleSide,\n\tFace3,\n\tFaceColors,\n\tFileLoader,\n\tGeometry,\n\tLoader,\n\tLoaderUtils,\n\tMaterialLoader,\n\tMath as _Math,\n\tMirroredRepeatWrapping,\n\tMultiplyBlending,\n\tNoBlending,\n\tNormalBlending,\n\tRepeatWrapping,\n\tSubtractiveBlending,\n\tTextureLoader,\n\tVector2,\n\tVector3,\n\tVector4,\n\tVertexColors\n} from \"../../../../build/three.module.js\";\n\nvar LegacyJSONLoader = ( function () {\n\n\tfunction LegacyJSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tLegacyJSONLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: LegacyJSONLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, path );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: ( function () {\n\n\t\t\tvar _BlendingMode = {\n\t\t\t\tNoBlending: NoBlending,\n\t\t\t\tNormalBlending: NormalBlending,\n\t\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\t\tCustomBlending: CustomBlending\n\t\t\t};\n\n\t\t\tvar _color = new Color();\n\t\t\tvar _textureLoader = new TextureLoader();\n\t\t\tvar _materialLoader = new MaterialLoader();\n\n\t\t\tfunction initMaterials( materials, texturePath, crossOrigin, manager ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\t\tarray[ i ] = createMaterial( materials[ i ], texturePath, crossOrigin, manager );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tfunction createMaterial( m, texturePath, crossOrigin, manager ) {\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = _BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.LegacyJSONLoader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = _color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = _color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = _color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy, textures, texturePath, crossOrigin, manager );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.LegacyJSONLoader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.LegacyJSONLoader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\t_materialLoader.setTextures( textures );\n\n\t\t\t\treturn _materialLoader.parse( json );\n\n\t\t\t}\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy, textures, texturePath, crossOrigin, manager ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = manager.getHandler( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_textureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = _textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\tfunction parseModel( json, geometry ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\t\toffset, zLength,\n\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\t\ttype,\n\t\t\t\t\tisQuad,\n\t\t\t\t\thasMaterial,\n\t\t\t\t\thasFaceVertexUv,\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\t\tfaces = json.faces,\n\t\t\t\t\tvertices = json.vertices,\n\t\t\t\t\tnormals = json.normals,\n\t\t\t\t\tcolors = json.colors,\n\n\t\t\t\t\tscale = json.scale,\n\n\t\t\t\t\tnUvLayers = 0;\n\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\t\tvar scale = json.scale;\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\treturn function parse( json, path ) {\n\n\t\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t\t// Geometry 4.0 spec\n\t\t\t\t\tjson = json.data;\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tjson.scale = 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new Geometry();\n\n\t\t\t\tparseModel( json, geometry );\n\t\t\t\tparseSkin( json, geometry );\n\t\t\t\tparseMorphing( json, geometry );\n\t\t\t\tparseAnimations( json, geometry );\n\n\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\t\treturn { geometry: geometry };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar materials = initMaterials( json.materials, this.resourcePath || path, this.crossOrigin, this.manager );\n\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\treturn LegacyJSONLoader;\n\n} )();\n\nexport { LegacyJSONLoader };\n"]}