{"version":3,"sources":["LineGeometry.js"],"names":[],"mappings":"AAAA;;;;;AAMA,SAAS,oBAAT,QAAqC,kCAArC;;AAEA,IAAI,eAAe,YAAY;;AAE9B,sBAAqB,IAArB,CAA2B,IAA3B;;AAEA,MAAK,IAAL,GAAY,cAAZ;AAEA,CAND;;AAQA,aAAa,SAAb,GAAyB,OAAO,MAAP,CAAe,OAAO,MAAP,CAAe,qBAAqB,SAApC,CAAf,EAAgE;;AAExF,cAAa,YAF2E;;AAIxF,iBAAgB,IAJwE;;AAMxF,eAAc,UAAW,KAAX,EAAmB;;AAEhC;;AAEA,MAAI,SAAS,MAAM,MAAN,GAAe,CAA5B;AACA,MAAI,SAAS,IAAI,YAAJ,CAAkB,IAAI,MAAtB,CAAb;;AAEA,OAAM,IAAI,IAAI,CAAd,EAAiB,IAAI,MAArB,EAA6B,KAAK,CAAlC,EAAsC;;AAErC,UAAQ,IAAI,CAAZ,IAAkB,MAAO,CAAP,CAAlB;AACA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;AACA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;;AAEA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;AACA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;AACA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;AAEA;;AAED,uBAAqB,SAArB,CAA+B,YAA/B,CAA4C,IAA5C,CAAkD,IAAlD,EAAwD,MAAxD;;AAEA,SAAO,IAAP;AAEA,EA7BuF;;AA+BxF,YAAW,UAAW,KAAX,EAAmB;;AAE7B;;AAEA,MAAI,SAAS,MAAM,MAAN,GAAe,CAA5B;AACA,MAAI,SAAS,IAAI,YAAJ,CAAkB,IAAI,MAAtB,CAAb;;AAEA,OAAM,IAAI,IAAI,CAAd,EAAiB,IAAI,MAArB,EAA6B,KAAK,CAAlC,EAAsC;;AAErC,UAAQ,IAAI,CAAZ,IAAkB,MAAO,CAAP,CAAlB;AACA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;AACA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;;AAEA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;AACA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;AACA,UAAQ,IAAI,CAAJ,GAAQ,CAAhB,IAAsB,MAAO,IAAI,CAAX,CAAtB;AAEA;;AAED,uBAAqB,SAArB,CAA+B,SAA/B,CAAyC,IAAzC,CAA+C,IAA/C,EAAqD,MAArD;;AAEA,SAAO,IAAP;AAEA,EAtDuF;;AAwDxF,WAAU,UAAW,IAAX,EAAkB;;AAE3B,MAAI,WAAW,KAAK,QAApB;;AAEA,MAAK,SAAS,UAAd,EAA2B;;AAE1B,QAAK,YAAL,CAAmB,SAAS,QAA5B;AAEA,GAJD,MAIO,IAAK,SAAS,gBAAd,EAAiC;;AAEvC,QAAK,YAAL,CAAmB,SAAS,QAAT,CAAkB,KAArC,EAFuC,CAEO;AAE9C;;AAED;;AAEA,SAAO,IAAP;AAEA,EA1EuF;;AA4ExF,OAAM,YAAW,YAAe;;AAE/B;;AAEA,SAAO,IAAP;AAEA;;AAlFuF,CAAhE,CAAzB;;AAsFA,SAAS,YAAT","file":"LineGeometry-compiled.js","sourcesContent":["/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\n\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport { LineGeometry };\n"]}