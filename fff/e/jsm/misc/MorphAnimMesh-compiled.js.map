{"version":3,"sources":["MorphAnimMesh.js"],"names":[],"mappings":"AAAA;;;;AAIA,SACC,aADD,EAEC,cAFD,EAGC,IAHD,QAIO,gCAJP;;AAMA,IAAI,gBAAgB,UAAW,QAAX,EAAqB,QAArB,EAAgC;;AAEnD,MAAK,IAAL,CAAW,IAAX,EAAiB,QAAjB,EAA2B,QAA3B;;AAEA,MAAK,IAAL,GAAY,eAAZ;;AAEA,MAAK,KAAL,GAAa,IAAI,cAAJ,CAAoB,IAApB,CAAb;AACA,MAAK,YAAL,GAAoB,IAApB;AAEA,CATD;;AAWA,cAAc,SAAd,GAA0B,OAAO,MAAP,CAAe,KAAK,SAApB,CAA1B;AACA,cAAc,SAAd,CAAwB,WAAxB,GAAsC,aAAtC;;AAEA,cAAc,SAAd,CAAwB,mBAAxB,GAA8C,YAAY;;AAEzD,MAAK,KAAL,CAAW,SAAX,GAAuB,GAAvB;AAEA,CAJD;;AAMA,cAAc,SAAd,CAAwB,oBAAxB,GAA+C,YAAY;;AAE1D,MAAK,KAAL,CAAW,SAAX,GAAuB,CAAE,GAAzB;AAEA,CAJD;;AAMA,cAAc,SAAd,CAAwB,aAAxB,GAAwC,UAAW,KAAX,EAAkB,GAAlB,EAAwB;;AAE/D,KAAK,KAAK,YAAV,EAAyB;;AAExB,OAAK,YAAL,CAAkB,IAAlB;AACA,OAAK,YAAL,GAAoB,IAApB;AAEA;;AAED,KAAI,OAAO,cAAc,UAAd,CAA0B,IAA1B,EAAgC,KAAhC,CAAX;;AAEA,KAAK,IAAL,EAAY;;AAEX,MAAI,SAAS,KAAK,KAAL,CAAW,UAAX,CAAuB,IAAvB,CAAb;AACA,SAAO,SAAP,GAAqB,KAAK,MAAL,CAAY,MAAZ,GAAqB,GAAvB,GAA+B,KAAK,QAAvD;AACA,OAAK,YAAL,GAAoB,OAAO,IAAP,EAApB;AAEA,EAND,MAMO;;AAEN,QAAM,IAAI,KAAJ,CAAW,qCAAqC,KAArC,GAA6C,iCAAxD,CAAN;AAEA;AAED,CAvBD;;AAyBA,cAAc,SAAd,CAAwB,eAAxB,GAA0C,UAAW,KAAX,EAAmB;;AAE5D,MAAK,KAAL,CAAW,MAAX,CAAmB,KAAnB;AAEA,CAJD;;AAMA,cAAc,SAAd,CAAwB,IAAxB,GAA+B,UAAW,MAAX,EAAoB;;AAElD,MAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAA0B,IAA1B,EAAgC,MAAhC;;AAEA,MAAK,KAAL,GAAa,IAAI,cAAJ,CAAoB,IAApB,CAAb;;AAEA,QAAO,IAAP;AAEA,CARD;;AAUA,SAAS,aAAT","file":"MorphAnimMesh-compiled.js","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tAnimationClip,\n\tAnimationMixer,\n\tMesh\n} from \"../../../build/three.module.js\";\n\nvar MorphAnimMesh = function ( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'MorphAnimMesh';\n\n\tthis.mixer = new AnimationMixer( this );\n\tthis.activeAction = null;\n\n};\n\nMorphAnimMesh.prototype = Object.create( Mesh.prototype );\nMorphAnimMesh.prototype.constructor = MorphAnimMesh;\n\nMorphAnimMesh.prototype.setDirectionForward = function () {\n\n\tthis.mixer.timeScale = 1.0;\n\n};\n\nMorphAnimMesh.prototype.setDirectionBackward = function () {\n\n\tthis.mixer.timeScale = - 1.0;\n\n};\n\nMorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\n\n\tif ( this.activeAction ) {\n\n\t\tthis.activeAction.stop();\n\t\tthis.activeAction = null;\n\n\t}\n\n\tvar clip = AnimationClip.findByName( this, label );\n\n\tif ( clip ) {\n\n\t\tvar action = this.mixer.clipAction( clip );\n\t\taction.timeScale = ( clip.tracks.length * fps ) / clip.duration;\n\t\tthis.activeAction = action.play();\n\n\t} else {\n\n\t\tthrow new Error( 'THREE.MorphAnimMesh: animations[' + label + '] undefined in .playAnimation()' );\n\n\t}\n\n};\n\nMorphAnimMesh.prototype.updateAnimation = function ( delta ) {\n\n\tthis.mixer.update( delta );\n\n};\n\nMorphAnimMesh.prototype.copy = function ( source ) {\n\n\tMesh.prototype.copy.call( this, source );\n\n\tthis.mixer = new AnimationMixer( this );\n\n\treturn this;\n\n};\n\nexport { MorphAnimMesh };\n"]}