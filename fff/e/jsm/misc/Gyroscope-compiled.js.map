{"version":3,"sources":["Gyroscope.js"],"names":[],"mappings":"AAAA;;;;AAIA,SACC,QADD,EAEC,UAFD,EAGC,OAHD,QAIO,gCAJP;;AAMA,IAAI,YAAY,YAAY;;AAE3B,UAAS,IAAT,CAAe,IAAf;AAEA,CAJD;;AAMA,UAAU,SAAV,GAAsB,OAAO,MAAP,CAAe,SAAS,SAAxB,CAAtB;AACA,UAAU,SAAV,CAAoB,WAApB,GAAkC,SAAlC;;AAEA,UAAU,SAAV,CAAoB,iBAApB,GAA0C,YAAY;;AAErD,KAAI,oBAAoB,IAAI,OAAJ,EAAxB;AACA,KAAI,mBAAmB,IAAI,UAAJ,EAAvB;AACA,KAAI,cAAc,IAAI,OAAJ,EAAlB;;AAEA,KAAI,mBAAmB,IAAI,OAAJ,EAAvB;AACA,KAAI,kBAAkB,IAAI,UAAJ,EAAtB;AACA,KAAI,aAAa,IAAI,OAAJ,EAAjB;;AAEA,QAAO,SAAS,iBAAT,CAA4B,KAA5B,EAAoC;;AAE1C,OAAK,gBAAL,IAAyB,KAAK,YAAL,EAAzB;;AAEA;;AAEA,MAAK,KAAK,sBAAL,IAA+B,KAApC,EAA4C;;AAE3C,OAAK,KAAK,MAAL,KAAgB,IAArB,EAA4B;;AAE3B,SAAK,WAAL,CAAiB,gBAAjB,CAAmC,KAAK,MAAL,CAAY,WAA/C,EAA4D,KAAK,MAAjE;;AAEA,SAAK,WAAL,CAAiB,SAAjB,CAA4B,gBAA5B,EAA8C,eAA9C,EAA+D,UAA/D;AACA,SAAK,MAAL,CAAY,SAAZ,CAAuB,iBAAvB,EAA0C,gBAA1C,EAA4D,WAA5D;;AAEA,SAAK,WAAL,CAAiB,OAAjB,CAA0B,gBAA1B,EAA4C,gBAA5C,EAA8D,UAA9D;AAGA,IAVD,MAUO;;AAEN,SAAK,WAAL,CAAiB,IAAjB,CAAuB,KAAK,MAA5B;AAEA;;AAGD,QAAK,sBAAL,GAA8B,KAA9B;;AAEA,WAAQ,IAAR;AAEA;;AAED;;AAEA,OAAM,IAAI,IAAI,CAAR,EAAW,IAAI,KAAK,QAAL,CAAc,MAAnC,EAA2C,IAAI,CAA/C,EAAkD,GAAlD,EAAyD;;AAExD,QAAK,QAAL,CAAe,CAAf,EAAmB,iBAAnB,CAAsC,KAAtC;AAEA;AAED,EAvCD;AAyCA,CAnDyC,EAA1C;;AAqDA,SAAS,SAAT","file":"Gyroscope-compiled.js","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tObject3D,\n\tQuaternion,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar Gyroscope = function () {\n\n\tObject3D.call( this );\n\n};\n\nGyroscope.prototype = Object.create( Object3D.prototype );\nGyroscope.prototype.constructor = Gyroscope;\n\nGyroscope.prototype.updateMatrixWorld = ( function () {\n\n\tvar translationObject = new Vector3();\n\tvar quaternionObject = new Quaternion();\n\tvar scaleObject = new Vector3();\n\n\tvar translationWorld = new Vector3();\n\tvar quaternionWorld = new Quaternion();\n\tvar scaleWorld = new Vector3();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tthis.matrixAutoUpdate && this.updateMatrix();\n\n\t\t// update matrixWorld\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent !== null ) {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\tthis.matrixWorld.decompose( translationWorld, quaternionWorld, scaleWorld );\n\t\t\t\tthis.matrix.decompose( translationObject, quaternionObject, scaleObject );\n\n\t\t\t\tthis.matrixWorld.compose( translationWorld, quaternionObject, scaleWorld );\n\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t}\n\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t};\n\n}() );\n\nexport { Gyroscope };\n"]}