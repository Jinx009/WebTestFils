{"version":3,"sources":["NURBSUtils.js"],"names":[],"mappings":"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","file":"NURBSUtils-compiled.js","sourcesContent":["/**\n * @author renej\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n *\n **/\n\nimport {\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\nvar NURBSUtils = {\n\n\t/*\n\tFinds knot vector span.\n\n\tp : degree\n\tu : parametric value\n\tU : knot vector\n\n\treturns the span\n\t*/\n\tfindSpan: function ( p, u, U ) {\n\n\t\tvar n = U.length - p - 1;\n\n\t\tif ( u >= U[ n ] ) {\n\n\t\t\treturn n - 1;\n\n\t\t}\n\n\t\tif ( u <= U[ p ] ) {\n\n\t\t\treturn p;\n\n\t\t}\n\n\t\tvar low = p;\n\t\tvar high = n;\n\t\tvar mid = Math.floor( ( low + high ) / 2 );\n\n\t\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\t\tif ( u < U[ mid ] ) {\n\n\t\t\t\thigh = mid;\n\n\t\t\t} else {\n\n\t\t\t\tlow = mid;\n\n\t\t\t}\n\n\t\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t\t}\n\n\t\treturn mid;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tU    : knot vector\n\n\treturns array[p+1] with basis functions values.\n\t*/\n\tcalcBasisFunctions: function ( span, u, p, U ) {\n\n\t\tvar N = [];\n\t\tvar left = [];\n\t\tvar right = [];\n\t\tN[ 0 ] = 1.0;\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tvar temp = N[ r ] / ( rv + lv );\n\t\t\t\tN[ r ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t }\n\n\t\t\t N[ j ] = saved;\n\n\t\t }\n\n\t\t return N;\n\n\t},\n\n\n\t/*\n\tCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\n\tp : degree of B-Spline\n\tU : knot vector\n\tP : control points (x, y, z, w)\n\tu : parametric point\n\n\treturns point for given u\n\t*/\n\tcalcBSplinePoint: function ( p, U, P, u ) {\n\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar N = this.calcBasisFunctions( span, u, p, U );\n\t\tvar C = new Vector4( 0, 0, 0, 0 );\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tvar point = P[ span - p + j ];\n\t\t\tvar Nj = N[ j ];\n\t\t\tvar wNj = point.w * Nj;\n\t\t\tC.x += point.x * wNj;\n\t\t\tC.y += point.y * wNj;\n\t\t\tC.z += point.z * wNj;\n\t\t\tC.w += point.w * Nj;\n\n\t\t}\n\n\t\treturn C;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tn    : number of derivatives to calculate\n\tU    : knot vector\n\n\treturns array[n+1][p+1] with basis functions derivatives\n\t*/\n\tcalcBasisFunctionDerivatives: function ( span, u, p, n, U ) {\n\n\t\tvar zeroArr = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tzeroArr[ i ] = 0.0;\n\n\t\tvar ders = [];\n\t\tfor ( var i = 0; i <= n; ++ i )\n\t\t\tders[ i ] = zeroArr.slice( 0 );\n\n\t\tvar ndu = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\t\tndu[ 0 ][ 0 ] = 1.0;\n\n\t\tvar left = zeroArr.slice( 0 );\n\t\tvar right = zeroArr.slice( 0 );\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\t\tvar temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t}\n\n\t\t\tndu[ j ][ j ] = saved;\n\n\t\t}\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t\t}\n\n\t\tfor ( var r = 0; r <= p; ++ r ) {\n\n\t\t\tvar s1 = 0;\n\t\t\tvar s2 = 1;\n\n\t\t\tvar a = [];\n\t\t\tfor ( var i = 0; i <= p; ++ i ) {\n\n\t\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t\t}\n\t\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\t\tvar d = 0.0;\n\t\t\t\tvar rk = r - k;\n\t\t\t\tvar pk = p - k;\n\n\t\t\t\tif ( r >= k ) {\n\n\t\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tvar j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\t\tvar j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\t\tfor ( var j = j1; j <= j2; ++ j ) {\n\n\t\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( r <= pk ) {\n\n\t\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tders[ k ][ r ] = d;\n\n\t\t\t\tvar j = s1;\n\t\t\t\ts1 = s2;\n\t\t\t\ts2 = j;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar r = p;\n\n\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\t\tders[ k ][ j ] *= r;\n\n\t\t\t}\n\t\t\tr *= p - k;\n\n\t\t}\n\n\t\treturn ders;\n\n\t},\n\n\n\t/*\n\t\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\t\tp  : degree\n\t\tU  : knot vector\n\t\tP  : control points\n\t\tu  : Parametric points\n\t\tnd : number of derivatives\n\n\t\treturns array[d+1] with derivatives\n\t\t*/\n\tcalcBSplineDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar du = nd < p ? nd : p;\n\t\tvar CK = [];\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar nders = this.calcBasisFunctionDerivatives( span, u, p, du, U );\n\t\tvar Pw = [];\n\n\t\tfor ( var i = 0; i < P.length; ++ i ) {\n\n\t\t\tvar point = P[ i ].clone();\n\t\t\tvar w = point.w;\n\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\n\t\t\tPw[ i ] = point;\n\n\t\t}\n\t\tfor ( var k = 0; k <= du; ++ k ) {\n\n\t\t\tvar point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = point;\n\n\t\t}\n\n\t\tfor ( var k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate \"K over I\"\n\n\treturns k!/(i!(k-i)!)\n\t*/\n\tcalcKoverI: function ( k, i ) {\n\n\t\tvar nom = 1;\n\n\t\tfor ( var j = 2; j <= k; ++ j ) {\n\n\t\t\tnom *= j;\n\n\t\t}\n\n\t\tvar denom = 1;\n\n\t\tfor ( var j = 2; j <= i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\tfor ( var j = 2; j <= k - i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\treturn nom / denom;\n\n\t},\n\n\n\t/*\n\tCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\n\tPders : result of function calcBSplineDerivatives\n\n\treturns array with derivatives for rational curve.\n\t*/\n\tcalcRationalCurveDerivatives: function ( Pders ) {\n\n\t\tvar nd = Pders.length;\n\t\tvar Aders = [];\n\t\tvar wders = [];\n\n\t\tfor ( var i = 0; i < nd; ++ i ) {\n\n\t\t\tvar point = Pders[ i ];\n\t\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\t\twders[ i ] = point.w;\n\n\t\t}\n\n\t\tvar CK = [];\n\n\t\tfor ( var k = 0; k < nd; ++ k ) {\n\n\t\t\tvar v = Aders[ k ].clone();\n\n\t\t\tfor ( var i = 1; i <= k; ++ i ) {\n\n\t\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( this.calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points in homogeneous space\n\tu  : parametric points\n\tnd : number of derivatives\n\n\treturns array with derivatives.\n\t*/\n\tcalcNURBSDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar Pders = this.calcBSplineDerivatives( p, U, P, u, nd );\n\t\treturn this.calcRationalCurveDerivatives( Pders );\n\n\t},\n\n\n\t/*\n\tCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\n\tp1, p2 : degrees of B-Spline surface\n\tU1, U2 : knot vectors\n\tP      : control points (x, y, z, w)\n\tu, v   : parametric values\n\n\treturns point for given (u, v)\n\t*/\n\tcalcSurfacePoint: function ( p, q, U, V, P, u, v, target ) {\n\n\t\tvar uspan = this.findSpan( p, u, U );\n\t\tvar vspan = this.findSpan( q, v, V );\n\t\tvar Nu = this.calcBasisFunctions( uspan, u, p, U );\n\t\tvar Nv = this.calcBasisFunctions( vspan, v, q, V );\n\t\tvar temp = [];\n\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( var k = 0; k <= p; ++ k ) {\n\n\t\t\t\tvar point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\t\tvar w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar Sw = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\n\t\tSw.divideScalar( Sw.w );\n\t\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n\t}\n\n};\n\nexport { NURBSUtils };\n"]}