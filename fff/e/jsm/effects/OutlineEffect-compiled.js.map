{"version":3,"sources":["OutlineEffect.js"],"names":[],"mappings":"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","file":"OutlineEffect-compiled.js","sourcesContent":["/**\n * @author takahirox / http://github.com/takahirox/\n *\n * Reference: https://en.wikipedia.org/wiki/Cel_shading\n *\n * API\n *\n * 1. Traditional\n *\n * var effect = new OutlineEffect( renderer );\n *\n * function render() {\n *\n * \teffect.render( scene, camera );\n *\n * }\n *\n * 2. VR compatible\n *\n * var effect = new OutlineEffect( renderer );\n * var renderingOutline = false;\n *\n * scene.onAfterRender = function () {\n *\n * \tif ( renderingOutline ) return;\n *\n * \trenderingOutline = true;\n *\n * \teffect.renderOutline( scene, camera );\n *\n * \trenderingOutline = false;\n *\n * };\n *\n * function render() {\n *\n * \trenderer.render( scene, camera );\n *\n * }\n *\n * // How to set default outline parameters\n * new OutlineEffect( renderer, {\n * \tdefaultThickness: 0.01,\n * \tdefaultColor: [ 0, 0, 0 ],\n * \tdefaultAlpha: 0.8,\n * \tdefaultKeepAlive: true // keeps outline material in cache even if material is removed from scene\n * } );\n *\n * // How to set outline parameters for each material\n * material.userData.outlineParameters = {\n * \tthickness: 0.01,\n * \tcolor: [ 0, 0, 0 ]\n * \talpha: 0.8,\n * \tvisible: true,\n * \tkeepAlive: true\n * };\n *\n * TODO\n *  - support shader material without objectNormal in its vertexShader\n */\n\nimport {\n\tBackSide,\n\tColor,\n\tShaderLib,\n\tShaderMaterial\n} from \"../../../build/three.module.js\";\n\nvar OutlineEffect = function ( renderer, parameters ) {\n\n\tparameters = parameters || {};\n\n\tthis.enabled = true;\n\n\tvar defaultThickness = parameters.defaultThickness !== undefined ? parameters.defaultThickness : 0.003;\n\tvar defaultColor = new Color().fromArray( parameters.defaultColor !== undefined ? parameters.defaultColor : [ 0, 0, 0 ] );\n\tvar defaultAlpha = parameters.defaultAlpha !== undefined ? parameters.defaultAlpha : 1.0;\n\tvar defaultKeepAlive = parameters.defaultKeepAlive !== undefined ? parameters.defaultKeepAlive : false;\n\n\t// object.material.uuid -> outlineMaterial or\n\t// object.material[ n ].uuid -> outlineMaterial\n\t// save at the outline material creation and release\n\t// if it's unused removeThresholdCount frames\n\t// unless keepAlive is true.\n\tvar cache = {};\n\n\tvar removeThresholdCount = 60;\n\n\t// outlineMaterial.uuid -> object.material or\n\t// outlineMaterial.uuid -> object.material[ n ]\n\t// save before render and release after render.\n\tvar originalMaterials = {};\n\n\t// object.uuid -> originalOnBeforeRender\n\t// save before render and release after render.\n\tvar originalOnBeforeRenders = {};\n\n\t//this.cache = cache;  // for debug\n\n\t// copied from WebGLPrograms and removed some materials\n\tvar shaderIDs = {\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical'\n\t};\n\n\tvar uniformsChunk = {\n\t\toutlineThickness: { value: defaultThickness },\n\t\toutlineColor: { value: defaultColor },\n\t\toutlineAlpha: { value: defaultAlpha }\n\t};\n\n\tvar vertexShaderChunk = [\n\n\t\t\"uniform float outlineThickness;\",\n\n\t\t\"vec4 calculateOutline( vec4 pos, vec3 objectNormal, vec4 skinned ) {\",\n\n\t\t\"\tfloat thickness = outlineThickness;\",\n\t\t\"\tconst float ratio = 1.0;\", // TODO: support outline thickness ratio for each vertex\n\t\t\"\tvec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + objectNormal, 1.0 );\",\n\t\t// NOTE: subtract pos2 from pos because BackSide objectNormal is negative\n\t\t\"\tvec4 norm = normalize( pos - pos2 );\",\n\t\t\"\treturn pos + norm * thickness * pos.w * ratio;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" );\n\n\tvar vertexShaderChunk2 = [\n\n\t\t\"#if ! defined( LAMBERT ) && ! defined( PHONG ) && ! defined( TOON ) && ! defined( STANDARD )\",\n\t\t\"\t#ifndef USE_ENVMAP\",\n\t\t\"\t\tvec3 objectNormal = normalize( normal );\",\n\t\t\"\t#endif\",\n\t\t\"#endif\",\n\n\t\t\"#ifdef FLIP_SIDED\",\n\t\t\"\tobjectNormal = -objectNormal;\",\n\t\t\"#endif\",\n\n\t\t\"#ifdef DECLARE_TRANSFORMED\",\n\t\t\"\tvec3 transformed = vec3( position );\",\n\t\t\"#endif\",\n\n\t\t\"gl_Position = calculateOutline( gl_Position, objectNormal, vec4( transformed, 1.0 ) );\",\n\n\t\t\"#include <fog_vertex>\"\n\n\t].join( \"\\n\" );\n\n\tvar fragmentShader = [\n\n\t\t\"#include <common>\",\n\t\t\"#include <fog_pars_fragment>\",\n\n\t\t\"uniform vec3 outlineColor;\",\n\t\t\"uniform float outlineAlpha;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tgl_FragColor = vec4( outlineColor, outlineAlpha );\",\n\n\t\t\"\t#include <fog_fragment>\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" );\n\n\tfunction createInvisibleMaterial() {\n\n\t\treturn new ShaderMaterial( { name: 'invisible', visible: false } );\n\n\t}\n\n\tfunction createMaterial( originalMaterial ) {\n\n\t\tvar shaderID = shaderIDs[ originalMaterial.type ];\n\t\tvar originalUniforms, originalVertexShader;\n\n\t\tif ( shaderID !== undefined ) {\n\n\t\t\tvar shader = ShaderLib[ shaderID ];\n\t\t\toriginalUniforms = shader.uniforms;\n\t\t\toriginalVertexShader = shader.vertexShader;\n\n\t\t} else if ( originalMaterial.isRawShaderMaterial === true ) {\n\n\t\t\toriginalUniforms = originalMaterial.uniforms;\n\t\t\toriginalVertexShader = originalMaterial.vertexShader;\n\n\t\t\tif ( ! /attribute\\s+vec3\\s+position\\s*;/.test( originalVertexShader ) ||\n\t\t\t     ! /attribute\\s+vec3\\s+normal\\s*;/.test( originalVertexShader ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.OutlineEffect requires both vec3 position and normal attributes in vertex shader, ' +\n\t\t\t\t              'does not draw outline for ' + originalMaterial.name + '(uuid:' + originalMaterial.uuid + ') material.' );\n\n\t\t\t\treturn createInvisibleMaterial();\n\n\t\t\t}\n\n\t\t} else if ( originalMaterial.isShaderMaterial === true ) {\n\n\t\t\toriginalUniforms = originalMaterial.uniforms;\n\t\t\toriginalVertexShader = originalMaterial.vertexShader;\n\n\t\t} else {\n\n\t\t\treturn createInvisibleMaterial();\n\n\t\t}\n\n\t\tvar uniforms = Object.assign( {}, originalUniforms, uniformsChunk );\n\n\t\tvar vertexShader = originalVertexShader\n\t\t\t// put vertexShaderChunk right before \"void main() {...}\"\n\t\t\t.replace( /void\\s+main\\s*\\(\\s*\\)/, vertexShaderChunk + '\\nvoid main()' )\n\t\t\t// put vertexShaderChunk2 the end of \"void main() {...}\"\n\t\t\t// Note: here assums originalVertexShader ends with \"}\" of \"void main() {...}\"\n\t\t\t.replace( /\\}\\s*$/, vertexShaderChunk2 + '\\n}' )\n\t\t\t// remove any light related lines\n\t\t\t// Note: here is very sensitive to originalVertexShader\n\t\t\t// TODO: consider safer way\n\t\t\t.replace( /#include\\s+<[\\w_]*light[\\w_]*>/g, '' );\n\n\t\tvar defines = {};\n\n\t\tif ( ! /vec3\\s+transformed\\s*=/.test( originalVertexShader ) &&\n\t\t     ! /#include\\s+<begin_vertex>/.test( originalVertexShader ) ) defines.DECLARE_TRANSFORMED = true;\n\n\t\treturn new ShaderMaterial( {\n\t\t\tdefines: defines,\n\t\t\tuniforms: uniforms,\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tside: BackSide,\n\t\t\t//wireframe: true,\n\t\t\tskinning: false,\n\t\t\tmorphTargets: false,\n\t\t\tmorphNormals: false,\n\t\t\tfog: false\n\t\t} );\n\n\t}\n\n\tfunction getOutlineMaterialFromCache( originalMaterial ) {\n\n\t\tvar data = cache[ originalMaterial.uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tdata = {\n\t\t\t\tmaterial: createMaterial( originalMaterial ),\n\t\t\t\tused: true,\n\t\t\t\tkeepAlive: defaultKeepAlive,\n\t\t\t\tcount: 0\n\t\t\t};\n\n\t\t\tcache[ originalMaterial.uuid ] = data;\n\n\t\t}\n\n\t\tdata.used = true;\n\n\t\treturn data.material;\n\n\t}\n\n\tfunction getOutlineMaterial( originalMaterial ) {\n\n\t\tvar outlineMaterial = getOutlineMaterialFromCache( originalMaterial );\n\n\t\toriginalMaterials[ outlineMaterial.uuid ] = originalMaterial;\n\n\t\tupdateOutlineMaterial( outlineMaterial, originalMaterial );\n\n\t\treturn outlineMaterial;\n\n\t}\n\n\tfunction setOutlineMaterial( object ) {\n\n\t\tif ( object.material === undefined ) return;\n\n\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\tfor ( var i = 0, il = object.material.length; i < il; i ++ ) {\n\n\t\t\t\tobject.material[ i ] = getOutlineMaterial( object.material[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tobject.material = getOutlineMaterial( object.material );\n\n\t\t}\n\n\t\toriginalOnBeforeRenders[ object.uuid ] = object.onBeforeRender;\n\t\tobject.onBeforeRender = onBeforeRender;\n\n\t}\n\n\tfunction restoreOriginalMaterial( object ) {\n\n\t\tif ( object.material === undefined ) return;\n\n\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\tfor ( var i = 0, il = object.material.length; i < il; i ++ ) {\n\n\t\t\t\tobject.material[ i ] = originalMaterials[ object.material[ i ].uuid ];\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tobject.material = originalMaterials[ object.material.uuid ];\n\n\t\t}\n\n\t\tobject.onBeforeRender = originalOnBeforeRenders[ object.uuid ];\n\n\t}\n\n\tfunction onBeforeRender( renderer, scene, camera, geometry, material ) {\n\n\t\tvar originalMaterial = originalMaterials[ material.uuid ];\n\n\t\t// just in case\n\t\tif ( originalMaterial === undefined ) return;\n\n\t\tupdateUniforms( material, originalMaterial );\n\n\t}\n\n\tfunction updateUniforms( material, originalMaterial ) {\n\n\t\tvar outlineParameters = originalMaterial.userData.outlineParameters;\n\n\t\tmaterial.uniforms.outlineAlpha.value = originalMaterial.opacity;\n\n\t\tif ( outlineParameters !== undefined ) {\n\n\t\t\tif ( outlineParameters.thickness !== undefined ) material.uniforms.outlineThickness.value = outlineParameters.thickness;\n\t\t\tif ( outlineParameters.color !== undefined ) material.uniforms.outlineColor.value.fromArray( outlineParameters.color );\n\t\t\tif ( outlineParameters.alpha !== undefined ) material.uniforms.outlineAlpha.value = outlineParameters.alpha;\n\n\t\t}\n\n\t}\n\n\tfunction updateOutlineMaterial( material, originalMaterial ) {\n\n\t\tif ( material.name === 'invisible' ) return;\n\n\t\tvar outlineParameters = originalMaterial.userData.outlineParameters;\n\n\t\tmaterial.skinning = originalMaterial.skinning;\n\t\tmaterial.morphTargets = originalMaterial.morphTargets;\n\t\tmaterial.morphNormals = originalMaterial.morphNormals;\n\t\tmaterial.fog = originalMaterial.fog;\n\n\t\tif ( outlineParameters !== undefined ) {\n\n\t\t\tif ( originalMaterial.visible === false ) {\n\n\t\t\t\tmaterial.visible = false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.visible = ( outlineParameters.visible !== undefined ) ? outlineParameters.visible : true;\n\n\t\t\t}\n\n\t\t\tmaterial.transparent = ( outlineParameters.alpha !== undefined && outlineParameters.alpha < 1.0 ) ? true : originalMaterial.transparent;\n\n\t\t\tif ( outlineParameters.keepAlive !== undefined ) cache[ originalMaterial.uuid ].keepAlive = outlineParameters.keepAlive;\n\n\t\t} else {\n\n\t\t\tmaterial.transparent = originalMaterial.transparent;\n\t\t\tmaterial.visible = originalMaterial.visible;\n\n\t\t}\n\n\t\tif ( originalMaterial.wireframe === true || originalMaterial.depthTest === false ) material.visible = false;\n\n\t}\n\n\tfunction cleanupCache() {\n\n\t\tvar keys;\n\n\t\t// clear originialMaterials\n\t\tkeys = Object.keys( originalMaterials );\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\toriginalMaterials[ keys[ i ] ] = undefined;\n\n\t\t}\n\n\t\t// clear originalOnBeforeRenders\n\t\tkeys = Object.keys( originalOnBeforeRenders );\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\toriginalOnBeforeRenders[ keys[ i ] ] = undefined;\n\n\t\t}\n\n\t\t// remove unused outlineMaterial from cache\n\t\tkeys = Object.keys( cache );\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tvar key = keys[ i ];\n\n\t\t\tif ( cache[ key ].used === false ) {\n\n\t\t\t\tcache[ key ].count ++;\n\n\t\t\t\tif ( cache[ key ].keepAlive === false && cache[ key ].count > removeThresholdCount ) {\n\n\t\t\t\t\tdelete cache[ key ];\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcache[ key ].used = false;\n\t\t\t\tcache[ key ].count = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tvar renderTarget;\n\t\tvar forceClear = false;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.OutlineEffect.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.OutlineEffect.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( renderTarget !== undefined ) renderer.setRenderTarget( renderTarget );\n\n\t\tif ( forceClear ) renderer.clear();\n\n\t\tif ( this.enabled === false ) {\n\n\t\t\trenderer.render( scene, camera );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar currentAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = this.autoClear;\n\n\t\trenderer.render( scene, camera );\n\n\t\trenderer.autoClear = currentAutoClear;\n\n\t\tthis.renderOutline( scene, camera );\n\n\t};\n\n\tthis.renderOutline = function ( scene, camera ) {\n\n\t\tvar currentAutoClear = renderer.autoClear;\n\t\tvar currentSceneAutoUpdate = scene.autoUpdate;\n\t\tvar currentSceneBackground = scene.background;\n\t\tvar currentShadowMapEnabled = renderer.shadowMap.enabled;\n\n\t\tscene.autoUpdate = false;\n\t\tscene.background = null;\n\t\trenderer.autoClear = false;\n\t\trenderer.shadowMap.enabled = false;\n\n\t\tscene.traverse( setOutlineMaterial );\n\n\t\trenderer.render( scene, camera );\n\n\t\tscene.traverse( restoreOriginalMaterial );\n\n\t\tcleanupCache();\n\n\t\tscene.autoUpdate = currentSceneAutoUpdate;\n\t\tscene.background = currentSceneBackground;\n\t\trenderer.autoClear = currentAutoClear;\n\t\trenderer.shadowMap.enabled = currentShadowMapEnabled;\n\n\t};\n\n\t/*\n\t * See #9918\n\t *\n\t * The following property copies and wrapper methods enable\n\t * OutlineEffect to be called from other *Effect, like\n\t *\n\t * effect = new StereoEffect( new OutlineEffect( renderer ) );\n\t *\n\t * function render () {\n\t *\n \t * \teffect.render( scene, camera );\n\t *\n\t * }\n\t */\n\tthis.autoClear = renderer.autoClear;\n\tthis.domElement = renderer.domElement;\n\tthis.shadowMap = renderer.shadowMap;\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\trenderer.clear( color, depth, stencil );\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn renderer.getPixelRatio();\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\trenderer.setPixelRatio( value );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn renderer.getSize( target );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\trenderer.setSize( width, height, updateStyle );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\trenderer.setViewport( x, y, width, height );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\trenderer.setScissor( x, y, width, height );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\trenderer.setScissorTest( boolean );\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\trenderer.setRenderTarget( renderTarget );\n\n\t};\n\n};\n\nexport { OutlineEffect };\n"]}