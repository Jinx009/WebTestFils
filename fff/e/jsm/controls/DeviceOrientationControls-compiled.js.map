{"version":3,"sources":["DeviceOrientationControls.js"],"names":[],"mappings":"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","file":"DeviceOrientationControls-compiled.js","sourcesContent":["/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nimport {\n\tEuler,\n\tMath as _Math,\n\tQuaternion,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar DeviceOrientationControls = function ( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( 'YXZ' );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alphaOffset = 0; // radians\n\n\tvar onDeviceOrientationChangeEvent = function ( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function () {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function () {\n\n\t\tvar zee = new Vector3( 0, 0, 1 );\n\n\t\tvar euler = new Euler();\n\n\t\tvar q0 = new Quaternion();\n\n\t\tvar q1 = new Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function ( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t};\n\n\t}();\n\n\tthis.connect = function () {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function () {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar device = scope.deviceOrientation;\n\n\t\tif ( device ) {\n\n\t\t\tvar alpha = device.alpha ? _Math.degToRad( device.alpha ) + scope.alphaOffset : 0; // Z\n\n\t\t\tvar beta = device.beta ? _Math.degToRad( device.beta ) : 0; // X'\n\n\t\t\tvar gamma = device.gamma ? _Math.degToRad( device.gamma ) : 0; // Y''\n\n\t\t\tvar orient = scope.screenOrientation ? _Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\n\t\t}\n\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tscope.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\nexport { DeviceOrientationControls };\n"]}