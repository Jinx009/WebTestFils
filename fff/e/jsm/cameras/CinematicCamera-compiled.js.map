{"version":3,"sources":["CinematicCamera.js"],"names":[],"mappings":"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","file":"CinematicCamera-compiled.js","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author kaypiKun\n */\n\nimport {\n\tLinearFilter,\n\tMesh,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPlaneBufferGeometry,\n\tRGBFormat,\n\tScene,\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from \"../../../build/three.module.js\";\nimport { BokehShader } from \"../shaders/BokehShader2.js\";\nimport { BokehDepthShader } from \"../shaders/BokehShader2.js\";\n\nvar CinematicCamera = function ( fov, aspect, near, far ) {\n\n\tPerspectiveCamera.call( this, fov, aspect, near, far );\n\n\tthis.type = 'CinematicCamera';\n\n\tthis.postprocessing = { enabled: true };\n\tthis.shaderSettings = {\n\t\trings: 3,\n\t\tsamples: 4\n\t};\n\n\tvar depthShader = BokehDepthShader;\n\n\tthis.materialDepth = new ShaderMaterial( {\n\t\tuniforms: depthShader.uniforms,\n\t\tvertexShader: depthShader.vertexShader,\n\t\tfragmentShader: depthShader.fragmentShader\n\t} );\n\n\tthis.materialDepth.uniforms[ 'mNear' ].value = near;\n\tthis.materialDepth.uniforms[ 'mFar' ].value = far;\n\n\t// In case of cinematicCamera, having a default lens set is important\n\tthis.setLens();\n\n\tthis.initPostProcessing();\n\n};\n\nCinematicCamera.prototype = Object.create( PerspectiveCamera.prototype );\nCinematicCamera.prototype.constructor = CinematicCamera;\n\n\n// providing fnumber and coc(Circle of Confusion) as extra arguments\nCinematicCamera.prototype.setLens = function ( focalLength, filmGauge, fNumber, coc ) {\n\n\t// In case of cinematicCamera, having a default lens set is important\n\tif ( focalLength === undefined ) focalLength = 35;\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\n\tthis.setFocalLength( focalLength );\n\n\t// if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n\tif ( fNumber === undefined ) fNumber = 8;\n\tif ( coc === undefined ) coc = 0.019;\n\n\tthis.fNumber = fNumber;\n\tthis.coc = coc;\n\n\t// fNumber is focalLength by aperture\n\tthis.aperture = focalLength / this.fNumber;\n\n\t// hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n\tthis.hyperFocal = ( focalLength * focalLength ) / ( this.aperture * this.coc );\n\n};\n\nCinematicCamera.prototype.linearize = function ( depth ) {\n\n\tvar zfar = this.far;\n\tvar znear = this.near;\n\treturn - zfar * znear / ( depth * ( zfar - znear ) - zfar );\n\n};\n\nCinematicCamera.prototype.smoothstep = function ( near, far, depth ) {\n\n\tvar x = this.saturate( ( depth - near ) / ( far - near ) );\n\treturn x * x * ( 3 - 2 * x );\n\n};\n\nCinematicCamera.prototype.saturate = function ( x ) {\n\n\treturn Math.max( 0, Math.min( 1, x ) );\n\n};\n\n// function for focusing at a distance from the camera\nCinematicCamera.prototype.focusAt = function ( focusDistance ) {\n\n\tif ( focusDistance === undefined ) focusDistance = 20;\n\n\tvar focalLength = this.getFocalLength();\n\n\t// distance from the camera (normal to frustrum) to focus on\n\tthis.focus = focusDistance;\n\n\t// the nearest point from the camera which is in focus (unused)\n\tthis.nearPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal + ( this.focus - focalLength ) );\n\n\t// the farthest point from the camera which is in focus (unused)\n\tthis.farPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal - ( this.focus - focalLength ) );\n\n\t// the gap or width of the space in which is everything is in focus (unused)\n\tthis.depthOfField = this.farPoint - this.nearPoint;\n\n\t// Considering minimum distance of focus for a standard lens (unused)\n\tif ( this.depthOfField < 0 ) this.depthOfField = 0;\n\n\tthis.sdistance = this.smoothstep( this.near, this.far, this.focus );\n\n\tthis.ldistance = this.linearize( 1 -\tthis.sdistance );\n\n\tthis.postprocessing.bokeh_uniforms[ 'focalDepth' ].value = this.ldistance;\n\n};\n\nCinematicCamera.prototype.initPostProcessing = function () {\n\n\tif ( this.postprocessing.enabled ) {\n\n\t\tthis.postprocessing.scene = new Scene();\n\n\t\tthis.postprocessing.camera = new OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2,\twindow.innerHeight / 2, window.innerHeight / - 2, - 10000, 10000 );\n\n\t\tthis.postprocessing.scene.add( this.postprocessing.camera );\n\n\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBFormat };\n\t\tthis.postprocessing.rtTextureDepth = new WebGLRenderTarget( window.innerWidth, window.innerHeight, pars );\n\t\tthis.postprocessing.rtTextureColor = new WebGLRenderTarget( window.innerWidth, window.innerHeight, pars );\n\n\t\tvar bokeh_shader = BokehShader;\n\n\t\tthis.postprocessing.bokeh_uniforms = UniformsUtils.clone( bokeh_shader.uniforms );\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"tColor\" ].value = this.postprocessing.rtTextureColor.texture;\n\t\tthis.postprocessing.bokeh_uniforms[ \"tDepth\" ].value = this.postprocessing.rtTextureDepth.texture;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"manualdof\" ].value = 0;\n\t\tthis.postprocessing.bokeh_uniforms[ \"shaderFocus\" ].value = 0;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"fstop\" ].value = 2.8;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"showFocus\" ].value = 1;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value = 0.1;\n\n\t\t//console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"znear\" ].value = this.near;\n\t\tthis.postprocessing.bokeh_uniforms[ \"zfar\" ].value = this.near;\n\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"textureWidth\" ].value = window.innerWidth;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"textureHeight\" ].value = window.innerHeight;\n\n\t\tthis.postprocessing.materialBokeh = new ShaderMaterial( {\n\t\t\tuniforms: this.postprocessing.bokeh_uniforms,\n\t\t\tvertexShader: bokeh_shader.vertexShader,\n\t\t\tfragmentShader: bokeh_shader.fragmentShader,\n\t\t\tdefines: {\n\t\t\t\tRINGS: this.shaderSettings.rings,\n\t\t\t\tSAMPLES: this.shaderSettings.samples,\n\t\t\t\tDEPTH_PACKING: 1\n\t\t\t}\n\t\t} );\n\n\t\tthis.postprocessing.quad = new Mesh( new PlaneBufferGeometry( window.innerWidth, window.innerHeight ), this.postprocessing.materialBokeh );\n\t\tthis.postprocessing.quad.position.z = - 500;\n\t\tthis.postprocessing.scene.add( this.postprocessing.quad );\n\n\t}\n\n};\n\nCinematicCamera.prototype.renderCinematic = function ( scene, renderer ) {\n\n\tif ( this.postprocessing.enabled ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.clear();\n\n\t\t// Render scene into texture\n\n\t\tscene.overrideMaterial = null;\n\t\trenderer.setRenderTarget( this.postprocessing.rtTextureColor );\n\t\trenderer.clear();\n\t\trenderer.render( scene, this );\n\n\t\t// Render depth into texture\n\n\t\tscene.overrideMaterial = this.materialDepth;\n\t\trenderer.setRenderTarget( this.postprocessing.rtTextureDepth );\n\t\trenderer.clear();\n\t\trenderer.render( scene, this );\n\n\t\t// Render bokeh composite\n\n\t\trenderer.setRenderTarget( null );\n\t\trenderer.render( this.postprocessing.scene, this.postprocessing.camera );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n};\n\nexport { CinematicCamera };\n"]}