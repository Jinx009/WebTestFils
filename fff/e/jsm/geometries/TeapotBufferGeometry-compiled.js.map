{"version":3,"sources":["TeapotBufferGeometry.js"],"names":[],"mappings":"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","file":"TeapotBufferGeometry-compiled.js","sourcesContent":["/**\n * @author Eric Haines / http://erichaines.com/\n *\n * Tessellates the famous Utah teapot database by Martin Newell into triangles.\n *\n * Parameters: size = 50, segments = 10, bottom = true, lid = true, body = true,\n *   fitLid = false, blinn = true\n *\n * size is a relative scale: I've scaled the teapot to fit vertically between -1 and 1.\n * Think of it as a \"radius\".\n * segments - number of line segments to subdivide each patch edge;\n *   1 is possible but gives degenerates, so two is the real minimum.\n * bottom - boolean, if true (default) then the bottom patches are added. Some consider\n *   adding the bottom heresy, so set this to \"false\" to adhere to the One True Way.\n * lid - to remove the lid and look inside, set to true.\n * body - to remove the body and leave the lid, set this and \"bottom\" to false.\n * fitLid - the lid is a tad small in the original. This stretches it a bit so you can't\n *   see the teapot's insides through the gap.\n * blinn - Jim Blinn scaled the original data vertically by dividing by about 1.3 to look\n *   nicer. If you want to see the original teapot, similar to the real-world model, set\n *   this to false. True by default.\n *   See http://en.wikipedia.org/wiki/File:Original_Utah_Teapot.jpg for the original\n *   real-world teapot (from http://en.wikipedia.org/wiki/Utah_teapot).\n *\n * Note that the bottom (the last four patches) is not flat - blame Frank Crow, not me.\n *\n * The teapot should normally be rendered as a double sided object, since for some\n * patches both sides can be seen, e.g., the gap around the lid and inside the spout.\n *\n * Segments 'n' determines the number of triangles output.\n *   Total triangles = 32*2*n*n - 8*n    [degenerates at the top and bottom cusps are deleted]\n *\n *   size_factor   # triangles\n *       1          56\n *       2         240\n *       3         552\n *       4         992\n *\n *      10        6320\n *      20       25440\n *      30       57360\n *\n * Code converted from my ancient SPD software, http://tog.acm.org/resources/SPD/\n * Created for the Udacity course \"Interactive Rendering\", http://bit.ly/ericity\n * Lesson: https://www.udacity.com/course/viewer#!/c-cs291/l-68866048/m-106482448\n * YouTube video on teapot history: https://www.youtube.com/watch?v=DxMfblPzFNc\n *\n * See https://en.wikipedia.org/wiki/Utah_teapot for the history of the teapot\n *\n */\n\nimport {\n\tBufferAttribute,\n\tBufferGeometry,\n\tMatrix4,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\n\nvar TeapotBufferGeometry = function ( size, segments, bottom, lid, body, fitLid, blinn ) {\n\n\t// 32 * 4 * 4 Bezier spline patches\n\tvar teapotPatches = [\n\t\t/*rim*/\n\t\t0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n\t\t3, 16, 17, 18, 7, 19, 20, 21, 11, 22, 23, 24, 15, 25, 26, 27,\n\t\t18, 28, 29, 30, 21, 31, 32, 33, 24, 34, 35, 36, 27, 37, 38, 39,\n\t\t30, 40, 41, 0, 33, 42, 43, 4, 36, 44, 45, 8, 39, 46, 47, 12,\n\t\t/*body*/\n\t\t12, 13, 14, 15, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n\t\t15, 25, 26, 27, 51, 60, 61, 62, 55, 63, 64, 65, 59, 66, 67, 68,\n\t\t27, 37, 38, 39, 62, 69, 70, 71, 65, 72, 73, 74, 68, 75, 76, 77,\n\t\t39, 46, 47, 12, 71, 78, 79, 48, 74, 80, 81, 52, 77, 82, 83, 56,\n\t\t56, 57, 58, 59, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,\n\t\t59, 66, 67, 68, 87, 96, 97, 98, 91, 99, 100, 101, 95, 102, 103, 104,\n\t\t68, 75, 76, 77, 98, 105, 106, 107, 101, 108, 109, 110, 104, 111, 112, 113,\n\t\t77, 82, 83, 56, 107, 114, 115, 84, 110, 116, 117, 88, 113, 118, 119, 92,\n\t\t/*handle*/\n\t\t120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,\n\t\t123, 136, 137, 120, 127, 138, 139, 124, 131, 140, 141, 128, 135, 142, 143, 132,\n\t\t132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 68, 152, 153, 154,\n\t\t135, 142, 143, 132, 147, 155, 156, 144, 151, 157, 158, 148, 154, 159, 160, 68,\n\t\t/*spout*/\n\t\t161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,\n\t\t164, 177, 178, 161, 168, 179, 180, 165, 172, 181, 182, 169, 176, 183, 184, 173,\n\t\t173, 174, 175, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,\n\t\t176, 183, 184, 173, 188, 197, 198, 185, 192, 199, 200, 189, 196, 201, 202, 193,\n\t\t/*lid*/\n\t\t203, 203, 203, 203, 204, 205, 206, 207, 208, 208, 208, 208, 209, 210, 211, 212,\n\t\t203, 203, 203, 203, 207, 213, 214, 215, 208, 208, 208, 208, 212, 216, 217, 218,\n\t\t203, 203, 203, 203, 215, 219, 220, 221, 208, 208, 208, 208, 218, 222, 223, 224,\n\t\t203, 203, 203, 203, 221, 225, 226, 204, 208, 208, 208, 208, 224, 227, 228, 209,\n\t\t209, 210, 211, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,\n\t\t212, 216, 217, 218, 232, 241, 242, 243, 236, 244, 245, 246, 240, 247, 248, 249,\n\t\t218, 222, 223, 224, 243, 250, 251, 252, 246, 253, 254, 255, 249, 256, 257, 258,\n\t\t224, 227, 228, 209, 252, 259, 260, 229, 255, 261, 262, 233, 258, 263, 264, 237,\n\t\t/*bottom*/\n\t\t265, 265, 265, 265, 266, 267, 268, 269, 270, 271, 272, 273, 92, 119, 118, 113,\n\t\t265, 265, 265, 265, 269, 274, 275, 276, 273, 277, 278, 279, 113, 112, 111, 104,\n\t\t265, 265, 265, 265, 276, 280, 281, 282, 279, 283, 284, 285, 104, 103, 102, 95,\n\t\t265, 265, 265, 265, 282, 286, 287, 266, 285, 288, 289, 270, 95, 94, 93, 92\n\t];\n\n\tvar teapotVertices = [\n\t\t1.4, 0, 2.4,\n\t\t1.4, - 0.784, 2.4,\n\t\t0.784, - 1.4, 2.4,\n\t\t0, - 1.4, 2.4,\n\t\t1.3375, 0, 2.53125,\n\t\t1.3375, - 0.749, 2.53125,\n\t\t0.749, - 1.3375, 2.53125,\n\t\t0, - 1.3375, 2.53125,\n\t\t1.4375, 0, 2.53125,\n\t\t1.4375, - 0.805, 2.53125,\n\t\t0.805, - 1.4375, 2.53125,\n\t\t0, - 1.4375, 2.53125,\n\t\t1.5, 0, 2.4,\n\t\t1.5, - 0.84, 2.4,\n\t\t0.84, - 1.5, 2.4,\n\t\t0, - 1.5, 2.4,\n\t\t- 0.784, - 1.4, 2.4,\n\t\t- 1.4, - 0.784, 2.4,\n\t\t- 1.4, 0, 2.4,\n\t\t- 0.749, - 1.3375, 2.53125,\n\t\t- 1.3375, - 0.749, 2.53125,\n\t\t- 1.3375, 0, 2.53125,\n\t\t- 0.805, - 1.4375, 2.53125,\n\t\t- 1.4375, - 0.805, 2.53125,\n\t\t- 1.4375, 0, 2.53125,\n\t\t- 0.84, - 1.5, 2.4,\n\t\t- 1.5, - 0.84, 2.4,\n\t\t- 1.5, 0, 2.4,\n\t\t- 1.4, 0.784, 2.4,\n\t\t- 0.784, 1.4, 2.4,\n\t\t0, 1.4, 2.4,\n\t\t- 1.3375, 0.749, 2.53125,\n\t\t- 0.749, 1.3375, 2.53125,\n\t\t0, 1.3375, 2.53125,\n\t\t- 1.4375, 0.805, 2.53125,\n\t\t- 0.805, 1.4375, 2.53125,\n\t\t0, 1.4375, 2.53125,\n\t\t- 1.5, 0.84, 2.4,\n\t\t- 0.84, 1.5, 2.4,\n\t\t0, 1.5, 2.4,\n\t\t0.784, 1.4, 2.4,\n\t\t1.4, 0.784, 2.4,\n\t\t0.749, 1.3375, 2.53125,\n\t\t1.3375, 0.749, 2.53125,\n\t\t0.805, 1.4375, 2.53125,\n\t\t1.4375, 0.805, 2.53125,\n\t\t0.84, 1.5, 2.4,\n\t\t1.5, 0.84, 2.4,\n\t\t1.75, 0, 1.875,\n\t\t1.75, - 0.98, 1.875,\n\t\t0.98, - 1.75, 1.875,\n\t\t0, - 1.75, 1.875,\n\t\t2, 0, 1.35,\n\t\t2, - 1.12, 1.35,\n\t\t1.12, - 2, 1.35,\n\t\t0, - 2, 1.35,\n\t\t2, 0, 0.9,\n\t\t2, - 1.12, 0.9,\n\t\t1.12, - 2, 0.9,\n\t\t0, - 2, 0.9,\n\t\t- 0.98, - 1.75, 1.875,\n\t\t- 1.75, - 0.98, 1.875,\n\t\t- 1.75, 0, 1.875,\n\t\t- 1.12, - 2, 1.35,\n\t\t- 2, - 1.12, 1.35,\n\t\t- 2, 0, 1.35,\n\t\t- 1.12, - 2, 0.9,\n\t\t- 2, - 1.12, 0.9,\n\t\t- 2, 0, 0.9,\n\t\t- 1.75, 0.98, 1.875,\n\t\t- 0.98, 1.75, 1.875,\n\t\t0, 1.75, 1.875,\n\t\t- 2, 1.12, 1.35,\n\t\t- 1.12, 2, 1.35,\n\t\t0, 2, 1.35,\n\t\t- 2, 1.12, 0.9,\n\t\t- 1.12, 2, 0.9,\n\t\t0, 2, 0.9,\n\t\t0.98, 1.75, 1.875,\n\t\t1.75, 0.98, 1.875,\n\t\t1.12, 2, 1.35,\n\t\t2, 1.12, 1.35,\n\t\t1.12, 2, 0.9,\n\t\t2, 1.12, 0.9,\n\t\t2, 0, 0.45,\n\t\t2, - 1.12, 0.45,\n\t\t1.12, - 2, 0.45,\n\t\t0, - 2, 0.45,\n\t\t1.5, 0, 0.225,\n\t\t1.5, - 0.84, 0.225,\n\t\t0.84, - 1.5, 0.225,\n\t\t0, - 1.5, 0.225,\n\t\t1.5, 0, 0.15,\n\t\t1.5, - 0.84, 0.15,\n\t\t0.84, - 1.5, 0.15,\n\t\t0, - 1.5, 0.15,\n\t\t- 1.12, - 2, 0.45,\n\t\t- 2, - 1.12, 0.45,\n\t\t- 2, 0, 0.45,\n\t\t- 0.84, - 1.5, 0.225,\n\t\t- 1.5, - 0.84, 0.225,\n\t\t- 1.5, 0, 0.225,\n\t\t- 0.84, - 1.5, 0.15,\n\t\t- 1.5, - 0.84, 0.15,\n\t\t- 1.5, 0, 0.15,\n\t\t- 2, 1.12, 0.45,\n\t\t- 1.12, 2, 0.45,\n\t\t0, 2, 0.45,\n\t\t- 1.5, 0.84, 0.225,\n\t\t- 0.84, 1.5, 0.225,\n\t\t0, 1.5, 0.225,\n\t\t- 1.5, 0.84, 0.15,\n\t\t- 0.84, 1.5, 0.15,\n\t\t0, 1.5, 0.15,\n\t\t1.12, 2, 0.45,\n\t\t2, 1.12, 0.45,\n\t\t0.84, 1.5, 0.225,\n\t\t1.5, 0.84, 0.225,\n\t\t0.84, 1.5, 0.15,\n\t\t1.5, 0.84, 0.15,\n\t\t- 1.6, 0, 2.025,\n\t\t- 1.6, - 0.3, 2.025,\n\t\t- 1.5, - 0.3, 2.25,\n\t\t- 1.5, 0, 2.25,\n\t\t- 2.3, 0, 2.025,\n\t\t- 2.3, - 0.3, 2.025,\n\t\t- 2.5, - 0.3, 2.25,\n\t\t- 2.5, 0, 2.25,\n\t\t- 2.7, 0, 2.025,\n\t\t- 2.7, - 0.3, 2.025,\n\t\t- 3, - 0.3, 2.25,\n\t\t- 3, 0, 2.25,\n\t\t- 2.7, 0, 1.8,\n\t\t- 2.7, - 0.3, 1.8,\n\t\t- 3, - 0.3, 1.8,\n\t\t- 3, 0, 1.8,\n\t\t- 1.5, 0.3, 2.25,\n\t\t- 1.6, 0.3, 2.025,\n\t\t- 2.5, 0.3, 2.25,\n\t\t- 2.3, 0.3, 2.025,\n\t\t- 3, 0.3, 2.25,\n\t\t- 2.7, 0.3, 2.025,\n\t\t- 3, 0.3, 1.8,\n\t\t- 2.7, 0.3, 1.8,\n\t\t- 2.7, 0, 1.575,\n\t\t- 2.7, - 0.3, 1.575,\n\t\t- 3, - 0.3, 1.35,\n\t\t- 3, 0, 1.35,\n\t\t- 2.5, 0, 1.125,\n\t\t- 2.5, - 0.3, 1.125,\n\t\t- 2.65, - 0.3, 0.9375,\n\t\t- 2.65, 0, 0.9375,\n\t\t- 2, - 0.3, 0.9,\n\t\t- 1.9, - 0.3, 0.6,\n\t\t- 1.9, 0, 0.6,\n\t\t- 3, 0.3, 1.35,\n\t\t- 2.7, 0.3, 1.575,\n\t\t- 2.65, 0.3, 0.9375,\n\t\t- 2.5, 0.3, 1.125,\n\t\t- 1.9, 0.3, 0.6,\n\t\t- 2, 0.3, 0.9,\n\t\t1.7, 0, 1.425,\n\t\t1.7, - 0.66, 1.425,\n\t\t1.7, - 0.66, 0.6,\n\t\t1.7, 0, 0.6,\n\t\t2.6, 0, 1.425,\n\t\t2.6, - 0.66, 1.425,\n\t\t3.1, - 0.66, 0.825,\n\t\t3.1, 0, 0.825,\n\t\t2.3, 0, 2.1,\n\t\t2.3, - 0.25, 2.1,\n\t\t2.4, - 0.25, 2.025,\n\t\t2.4, 0, 2.025,\n\t\t2.7, 0, 2.4,\n\t\t2.7, - 0.25, 2.4,\n\t\t3.3, - 0.25, 2.4,\n\t\t3.3, 0, 2.4,\n\t\t1.7, 0.66, 0.6,\n\t\t1.7, 0.66, 1.425,\n\t\t3.1, 0.66, 0.825,\n\t\t2.6, 0.66, 1.425,\n\t\t2.4, 0.25, 2.025,\n\t\t2.3, 0.25, 2.1,\n\t\t3.3, 0.25, 2.4,\n\t\t2.7, 0.25, 2.4,\n\t\t2.8, 0, 2.475,\n\t\t2.8, - 0.25, 2.475,\n\t\t3.525, - 0.25, 2.49375,\n\t\t3.525, 0, 2.49375,\n\t\t2.9, 0, 2.475,\n\t\t2.9, - 0.15, 2.475,\n\t\t3.45, - 0.15, 2.5125,\n\t\t3.45, 0, 2.5125,\n\t\t2.8, 0, 2.4,\n\t\t2.8, - 0.15, 2.4,\n\t\t3.2, - 0.15, 2.4,\n\t\t3.2, 0, 2.4,\n\t\t3.525, 0.25, 2.49375,\n\t\t2.8, 0.25, 2.475,\n\t\t3.45, 0.15, 2.5125,\n\t\t2.9, 0.15, 2.475,\n\t\t3.2, 0.15, 2.4,\n\t\t2.8, 0.15, 2.4,\n\t\t0, 0, 3.15,\n\t\t0.8, 0, 3.15,\n\t\t0.8, - 0.45, 3.15,\n\t\t0.45, - 0.8, 3.15,\n\t\t0, - 0.8, 3.15,\n\t\t0, 0, 2.85,\n\t\t0.2, 0, 2.7,\n\t\t0.2, - 0.112, 2.7,\n\t\t0.112, - 0.2, 2.7,\n\t\t0, - 0.2, 2.7,\n\t\t- 0.45, - 0.8, 3.15,\n\t\t- 0.8, - 0.45, 3.15,\n\t\t- 0.8, 0, 3.15,\n\t\t- 0.112, - 0.2, 2.7,\n\t\t- 0.2, - 0.112, 2.7,\n\t\t- 0.2, 0, 2.7,\n\t\t- 0.8, 0.45, 3.15,\n\t\t- 0.45, 0.8, 3.15,\n\t\t0, 0.8, 3.15,\n\t\t- 0.2, 0.112, 2.7,\n\t\t- 0.112, 0.2, 2.7,\n\t\t0, 0.2, 2.7,\n\t\t0.45, 0.8, 3.15,\n\t\t0.8, 0.45, 3.15,\n\t\t0.112, 0.2, 2.7,\n\t\t0.2, 0.112, 2.7,\n\t\t0.4, 0, 2.55,\n\t\t0.4, - 0.224, 2.55,\n\t\t0.224, - 0.4, 2.55,\n\t\t0, - 0.4, 2.55,\n\t\t1.3, 0, 2.55,\n\t\t1.3, - 0.728, 2.55,\n\t\t0.728, - 1.3, 2.55,\n\t\t0, - 1.3, 2.55,\n\t\t1.3, 0, 2.4,\n\t\t1.3, - 0.728, 2.4,\n\t\t0.728, - 1.3, 2.4,\n\t\t0, - 1.3, 2.4,\n\t\t- 0.224, - 0.4, 2.55,\n\t\t- 0.4, - 0.224, 2.55,\n\t\t- 0.4, 0, 2.55,\n\t\t- 0.728, - 1.3, 2.55,\n\t\t- 1.3, - 0.728, 2.55,\n\t\t- 1.3, 0, 2.55,\n\t\t- 0.728, - 1.3, 2.4,\n\t\t- 1.3, - 0.728, 2.4,\n\t\t- 1.3, 0, 2.4,\n\t\t- 0.4, 0.224, 2.55,\n\t\t- 0.224, 0.4, 2.55,\n\t\t0, 0.4, 2.55,\n\t\t- 1.3, 0.728, 2.55,\n\t\t- 0.728, 1.3, 2.55,\n\t\t0, 1.3, 2.55,\n\t\t- 1.3, 0.728, 2.4,\n\t\t- 0.728, 1.3, 2.4,\n\t\t0, 1.3, 2.4,\n\t\t0.224, 0.4, 2.55,\n\t\t0.4, 0.224, 2.55,\n\t\t0.728, 1.3, 2.55,\n\t\t1.3, 0.728, 2.55,\n\t\t0.728, 1.3, 2.4,\n\t\t1.3, 0.728, 2.4,\n\t\t0, 0, 0,\n\t\t1.425, 0, 0,\n\t\t1.425, 0.798, 0,\n\t\t0.798, 1.425, 0,\n\t\t0, 1.425, 0,\n\t\t1.5, 0, 0.075,\n\t\t1.5, 0.84, 0.075,\n\t\t0.84, 1.5, 0.075,\n\t\t0, 1.5, 0.075,\n\t\t- 0.798, 1.425, 0,\n\t\t- 1.425, 0.798, 0,\n\t\t- 1.425, 0, 0,\n\t\t- 0.84, 1.5, 0.075,\n\t\t- 1.5, 0.84, 0.075,\n\t\t- 1.5, 0, 0.075,\n\t\t- 1.425, - 0.798, 0,\n\t\t- 0.798, - 1.425, 0,\n\t\t0, - 1.425, 0,\n\t\t- 1.5, - 0.84, 0.075,\n\t\t- 0.84, - 1.5, 0.075,\n\t\t0, - 1.5, 0.075,\n\t\t0.798, - 1.425, 0,\n\t\t1.425, - 0.798, 0,\n\t\t0.84, - 1.5, 0.075,\n\t\t1.5, - 0.84, 0.075\n\t];\n\n\tBufferGeometry.call( this );\n\n\tsize = size || 50;\n\n\t// number of segments per patch\n\tsegments = segments !== undefined ? Math.max( 2, Math.floor( segments ) || 10 ) : 10;\n\n\t// which parts should be visible\n\tbottom = bottom === undefined ? true : bottom;\n\tlid = lid === undefined ? true : lid;\n\tbody = body === undefined ? true : body;\n\n\t// Should the lid be snug? It's not traditional, but we make it snug by default\n\tfitLid = fitLid === undefined ? true : fitLid;\n\n\t// Jim Blinn scaled the teapot down in size by about 1.3 for\n\t// some rendering tests. He liked the new proportions that he kept\n\t// the data in this form. The model was distributed with these new\n\t// proportions and became the norm. Trivia: comparing images of the\n\t// real teapot and the computer model, the ratio for the bowl of the\n\t// real teapot is more like 1.25, but since 1.3 is the traditional\n\t// value given, we use it here.\n\tvar blinnScale = 1.3;\n\tblinn = blinn === undefined ? true : blinn;\n\n\t// scale the size to be the real scaling factor\n\tvar maxHeight = 3.15 * ( blinn ? 1 : blinnScale );\n\n\tvar maxHeight2 = maxHeight / 2;\n\tvar trueSize = size / maxHeight2;\n\n\t// Number of elements depends on what is needed. Subtract degenerate\n\t// triangles at tip of bottom and lid out in advance.\n\tvar numTriangles = bottom ? ( 8 * segments - 4 ) * segments : 0;\n\tnumTriangles += lid ? ( 16 * segments - 4 ) * segments : 0;\n\tnumTriangles += body ? 40 * segments * segments : 0;\n\n\tvar indices = new Uint32Array( numTriangles * 3 );\n\n\tvar numVertices = bottom ? 4 : 0;\n\tnumVertices += lid ? 8 : 0;\n\tnumVertices += body ? 20 : 0;\n\tnumVertices *= ( segments + 1 ) * ( segments + 1 );\n\n\tvar vertices = new Float32Array( numVertices * 3 );\n\tvar normals = new Float32Array( numVertices * 3 );\n\tvar uvs = new Float32Array( numVertices * 2 );\n\n\t// Bezier form\n\tvar ms = new Matrix4();\n\tms.set(\n\t\t- 1.0, 3.0, - 3.0, 1.0,\n\t\t3.0, - 6.0, 3.0, 0.0,\n\t\t- 3.0, 3.0, 0.0, 0.0,\n\t\t1.0, 0.0, 0.0, 0.0 );\n\n\tvar g = [];\n\tvar i, r, c;\n\n\tvar sp = [];\n\tvar tp = [];\n\tvar dsp = [];\n\tvar dtp = [];\n\n\t// M * G * M matrix, sort of see\n\t// http://www.cs.helsinki.fi/group/goa/mallinnus/curves/surfaces.html\n\tvar mgm = [];\n\n\tvar vert = [];\n\tvar sdir = [];\n\tvar tdir = [];\n\n\tvar norm = new Vector3();\n\n\tvar tcoord;\n\n\tvar sstep, tstep;\n\tvar vertPerRow;\n\n\tvar s, t, sval, tval, p;\n\tvar dsval = 0;\n\tvar dtval = 0;\n\n\tvar normOut = new Vector3();\n\tvar v1, v2, v3, v4;\n\n\tvar gmx = new Matrix4();\n\tvar tmtx = new Matrix4();\n\n\tvar vsp = new Vector4();\n\tvar vtp = new Vector4();\n\tvar vdsp = new Vector4();\n\tvar vdtp = new Vector4();\n\n\tvar vsdir = new Vector3();\n\tvar vtdir = new Vector3();\n\n\tvar mst = ms.clone();\n\tmst.transpose();\n\n\t// internal function: test if triangle has any matching vertices;\n\t// if so, don't save triangle, since it won't display anything.\n\tvar notDegenerate = function ( vtx1, vtx2, vtx3 ) {\n\n\t\t// if any vertex matches, return false\n\t\treturn ! ( ( ( vertices[ vtx1 * 3 ] === vertices[ vtx2 * 3 ] ) &&\n\t\t\t\t\t ( vertices[ vtx1 * 3 + 1 ] === vertices[ vtx2 * 3 + 1 ] ) &&\n\t\t\t\t\t ( vertices[ vtx1 * 3 + 2 ] === vertices[ vtx2 * 3 + 2 ] ) ) ||\n\t\t\t\t   ( ( vertices[ vtx1 * 3 ] === vertices[ vtx3 * 3 ] ) &&\n\t\t\t\t\t ( vertices[ vtx1 * 3 + 1 ] === vertices[ vtx3 * 3 + 1 ] ) &&\n\t\t\t\t\t ( vertices[ vtx1 * 3 + 2 ] === vertices[ vtx3 * 3 + 2 ] ) ) ||\n\t\t\t\t   ( ( vertices[ vtx2 * 3 ] === vertices[ vtx3 * 3 ] ) &&\n\t\t\t\t\t ( vertices[ vtx2 * 3 + 1 ] === vertices[ vtx3 * 3 + 1 ] ) &&\n\t\t\t\t\t ( vertices[ vtx2 * 3 + 2 ] === vertices[ vtx3 * 3 + 2 ] ) ) );\n\n\t};\n\n\n\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\tmgm[ i ] = new Matrix4();\n\n\t}\n\n\tvar minPatches = body ? 0 : 20;\n\tvar maxPatches = bottom ? 32 : 28;\n\n\tvertPerRow = segments + 1;\n\n\tvar surfCount = 0;\n\n\tvar vertCount = 0;\n\tvar normCount = 0;\n\tvar uvCount = 0;\n\n\tvar indexCount = 0;\n\n\tfor ( var surf = minPatches; surf < maxPatches; surf ++ ) {\n\n\t\t// lid is in the middle of the data, patches 20-27,\n\t\t// so ignore it for this part of the loop if the lid is not desired\n\t\tif ( lid || ( surf < 20 || surf >= 28 ) ) {\n\n\t\t\t// get M * G * M matrix for x,y,z\n\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t// get control patches\n\t\t\t\tfor ( r = 0; r < 4; r ++ ) {\n\n\t\t\t\t\tfor ( c = 0; c < 4; c ++ ) {\n\n\t\t\t\t\t\t// transposed\n\t\t\t\t\t\tg[ c * 4 + r ] = teapotVertices[ teapotPatches[ surf * 16 + r * 4 + c ] * 3 + i ];\n\n\t\t\t\t\t\t// is the lid to be made larger, and is this a point on the lid\n\t\t\t\t\t\t// that is X or Y?\n\t\t\t\t\t\tif ( fitLid && ( surf >= 20 && surf < 28 ) && ( i !== 2 ) ) {\n\n\t\t\t\t\t\t\t// increase XY size by 7.7%, found empirically. I don't\n\t\t\t\t\t\t\t// increase Z so that the teapot will continue to fit in the\n\t\t\t\t\t\t\t// space -1 to 1 for Y (Y is up for the final model).\n\t\t\t\t\t\t\tg[ c * 4 + r ] *= 1.077;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Blinn \"fixed\" the teapot by dividing Z by blinnScale, and that's the\n\t\t\t\t\t\t// data we now use. The original teapot is taller. Fix it:\n\t\t\t\t\t\tif ( ! blinn && ( i === 2 ) ) {\n\n\t\t\t\t\t\t\tg[ c * 4 + r ] *= blinnScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgmx.set( g[ 0 ], g[ 1 ], g[ 2 ], g[ 3 ], g[ 4 ], g[ 5 ], g[ 6 ], g[ 7 ], g[ 8 ], g[ 9 ], g[ 10 ], g[ 11 ], g[ 12 ], g[ 13 ], g[ 14 ], g[ 15 ] );\n\n\t\t\t\ttmtx.multiplyMatrices( gmx, ms );\n\t\t\t\tmgm[ i ].multiplyMatrices( mst, tmtx );\n\n\t\t\t}\n\n\t\t\t// step along, get points, and output\n\t\t\tfor ( sstep = 0; sstep <= segments; sstep ++ ) {\n\n\t\t\t\ts = sstep / segments;\n\n\t\t\t\tfor ( tstep = 0; tstep <= segments; tstep ++ ) {\n\n\t\t\t\t\tt = tstep / segments;\n\n\t\t\t\t\t// point from basis\n\t\t\t\t\t// get power vectors and their derivatives\n\t\t\t\t\tfor ( p = 4, sval = tval = 1.0; p --; ) {\n\n\t\t\t\t\t\tsp[ p ] = sval;\n\t\t\t\t\t\ttp[ p ] = tval;\n\t\t\t\t\t\tsval *= s;\n\t\t\t\t\t\ttval *= t;\n\n\t\t\t\t\t\tif ( p === 3 ) {\n\n\t\t\t\t\t\t\tdsp[ p ] = dtp[ p ] = 0.0;\n\t\t\t\t\t\t\tdsval = dtval = 1.0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdsp[ p ] = dsval * ( 3 - p );\n\t\t\t\t\t\t\tdtp[ p ] = dtval * ( 3 - p );\n\t\t\t\t\t\t\tdsval *= s;\n\t\t\t\t\t\t\tdtval *= t;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvsp.fromArray( sp );\n\t\t\t\t\tvtp.fromArray( tp );\n\t\t\t\t\tvdsp.fromArray( dsp );\n\t\t\t\t\tvdtp.fromArray( dtp );\n\n\t\t\t\t\t// do for x,y,z\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t// multiply power vectors times matrix to get value\n\t\t\t\t\t\ttcoord = vsp.clone();\n\t\t\t\t\t\ttcoord.applyMatrix4( mgm[ i ] );\n\t\t\t\t\t\tvert[ i ] = tcoord.dot( vtp );\n\n\t\t\t\t\t\t// get s and t tangent vectors\n\t\t\t\t\t\ttcoord = vdsp.clone();\n\t\t\t\t\t\ttcoord.applyMatrix4( mgm[ i ] );\n\t\t\t\t\t\tsdir[ i ] = tcoord.dot( vtp );\n\n\t\t\t\t\t\ttcoord = vsp.clone();\n\t\t\t\t\t\ttcoord.applyMatrix4( mgm[ i ] );\n\t\t\t\t\t\ttdir[ i ] = tcoord.dot( vdtp );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// find normal\n\t\t\t\t\tvsdir.fromArray( sdir );\n\t\t\t\t\tvtdir.fromArray( tdir );\n\t\t\t\t\tnorm.crossVectors( vtdir, vsdir );\n\t\t\t\t\tnorm.normalize();\n\n\t\t\t\t\t// if X and Z length is 0, at the cusp, so point the normal up or down, depending on patch number\n\t\t\t\t\tif ( vert[ 0 ] === 0 && vert[ 1 ] === 0 ) {\n\n\t\t\t\t\t\t// if above the middle of the teapot, normal points up, else down\n\t\t\t\t\t\tnormOut.set( 0, vert[ 2 ] > maxHeight2 ? 1 : - 1, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// standard output: rotate on X axis\n\t\t\t\t\t\tnormOut.set( norm.x, norm.z, - norm.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// store it all\n\t\t\t\t\tvertices[ vertCount ++ ] = trueSize * vert[ 0 ];\n\t\t\t\t\tvertices[ vertCount ++ ] = trueSize * ( vert[ 2 ] - maxHeight2 );\n\t\t\t\t\tvertices[ vertCount ++ ] = - trueSize * vert[ 1 ];\n\n\t\t\t\t\tnormals[ normCount ++ ] = normOut.x;\n\t\t\t\t\tnormals[ normCount ++ ] = normOut.y;\n\t\t\t\t\tnormals[ normCount ++ ] = normOut.z;\n\n\t\t\t\t\tuvs[ uvCount ++ ] = 1 - t;\n\t\t\t\t\tuvs[ uvCount ++ ] = 1 - s;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// save the faces\n\t\t\tfor ( sstep = 0; sstep < segments; sstep ++ ) {\n\n\t\t\t\tfor ( tstep = 0; tstep < segments; tstep ++ ) {\n\n\t\t\t\t\tv1 = surfCount * vertPerRow * vertPerRow + sstep * vertPerRow + tstep;\n\t\t\t\t\tv2 = v1 + 1;\n\t\t\t\t\tv3 = v2 + vertPerRow;\n\t\t\t\t\tv4 = v1 + vertPerRow;\n\n\t\t\t\t\t// Normals and UVs cannot be shared. Without clone(), you can see the consequences\n\t\t\t\t\t// of sharing if you call geometry.applyMatrix( matrix ).\n\t\t\t\t\tif ( notDegenerate( v1, v2, v3 ) ) {\n\n\t\t\t\t\t\tindices[ indexCount ++ ] = v1;\n\t\t\t\t\t\tindices[ indexCount ++ ] = v2;\n\t\t\t\t\t\tindices[ indexCount ++ ] = v3;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( notDegenerate( v1, v3, v4 ) ) {\n\n\t\t\t\t\t\tindices[ indexCount ++ ] = v1;\n\t\t\t\t\t\tindices[ indexCount ++ ] = v3;\n\t\t\t\t\t\tindices[ indexCount ++ ] = v4;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// increment only if a surface was used\n\t\t\tsurfCount ++;\n\n\t\t}\n\n\t}\n\n\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\tthis.setAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\tthis.computeBoundingSphere();\n\n};\n\n\nTeapotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTeapotBufferGeometry.prototype.constructor = TeapotBufferGeometry;\n\nexport { TeapotBufferGeometry };\n"]}