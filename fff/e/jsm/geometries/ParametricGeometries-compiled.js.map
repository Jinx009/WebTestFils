{"version":3,"sources":["ParametricGeometries.js"],"names":[],"mappings":"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","file":"ParametricGeometries-compiled.js","sourcesContent":["/**\n * @author zz85\n *\n * Experimenting of primitive geometry creation using Surface Parametric equations\n *\n */\n\nimport {\n\tArrowHelper,\n\tCurve,\n\tGeometry,\n\tObject3D,\n\tParametricGeometry,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar ParametricGeometries = {\n\n\tklein: function ( v, u, target ) {\n\n\t\tu *= Math.PI;\n\t\tv *= 2 * Math.PI;\n\n\t\tu = u * 2;\n\t\tvar x, y, z;\n\t\tif ( u < Math.PI ) {\n\n\t\t\tx = 3 * Math.cos( u ) * ( 1 + Math.sin( u ) ) + ( 2 * ( 1 - Math.cos( u ) / 2 ) ) * Math.cos( u ) * Math.cos( v );\n\t\t\tz = - 8 * Math.sin( u ) - 2 * ( 1 - Math.cos( u ) / 2 ) * Math.sin( u ) * Math.cos( v );\n\n\t\t} else {\n\n\t\t\tx = 3 * Math.cos( u ) * ( 1 + Math.sin( u ) ) + ( 2 * ( 1 - Math.cos( u ) / 2 ) ) * Math.cos( v + Math.PI );\n\t\t\tz = - 8 * Math.sin( u );\n\n\t\t}\n\n\t\ty = - 2 * ( 1 - Math.cos( u ) / 2 ) * Math.sin( v );\n\n\t\ttarget.set( x, y, z );\n\n\t},\n\n\tplane: function ( width, height ) {\n\n\t\treturn function ( u, v, target ) {\n\n\t\t\tvar x = u * width;\n\t\t\tvar y = 0;\n\t\t\tvar z = v * height;\n\n\t\t\ttarget.set( x, y, z );\n\n\t\t};\n\n\t},\n\n\tmobius: function ( u, t, target ) {\n\n\t\t// flat mobius strip\n\t\t// http://www.wolframalpha.com/input/?i=M%C3%B6bius+strip+parametric+equations&lk=1&a=ClashPrefs_*Surface.MoebiusStrip.SurfaceProperty.ParametricEquations-\n\t\tu = u - 0.5;\n\t\tvar v = 2 * Math.PI * t;\n\n\t\tvar x, y, z;\n\n\t\tvar a = 2;\n\n\t\tx = Math.cos( v ) * ( a + u * Math.cos( v / 2 ) );\n\t\ty = Math.sin( v ) * ( a + u * Math.cos( v / 2 ) );\n\t\tz = u * Math.sin( v / 2 );\n\n\t\ttarget.set( x, y, z );\n\n\t},\n\n\tmobius3d: function ( u, t, target ) {\n\n\t\t// volumetric mobius strip\n\n\t\tu *= Math.PI;\n\t\tt *= 2 * Math.PI;\n\n\t\tu = u * 2;\n\t\tvar phi = u / 2;\n\t\tvar major = 2.25, a = 0.125, b = 0.65;\n\n\t\tvar x, y, z;\n\n\t\tx = a * Math.cos( t ) * Math.cos( phi ) - b * Math.sin( t ) * Math.sin( phi );\n\t\tz = a * Math.cos( t ) * Math.sin( phi ) + b * Math.sin( t ) * Math.cos( phi );\n\t\ty = ( major + x ) * Math.sin( u );\n\t\tx = ( major + x ) * Math.cos( u );\n\n\t\ttarget.set( x, y, z );\n\n\t}\n\n};\n\n\n/*********************************************\n *\n * Parametric Replacement for TubeGeometry\n *\n *********************************************/\n\nParametricGeometries.TubeGeometry = function ( path, segments, radius, segmentsRadius, closed, debug ) {\n\n\tthis.path = path;\n\tthis.segments = segments || 64;\n\tthis.radius = radius || 1;\n\tthis.segmentsRadius = segmentsRadius || 8;\n\tthis.closed = closed || false;\n\tif ( debug ) this.debug = new Object3D();\n\n\tvar scope = this, numpoints = this.segments + 1;\n\n\tvar frames = path.computeFrenetFrames( segments, closed ),\n\t\ttangents = frames.tangents,\n\t\tnormals = frames.normals,\n\t\tbinormals = frames.binormals;\n\n\t// proxy internals\n\n\tthis.tangents = tangents;\n\tthis.normals = normals;\n\tthis.binormals = binormals;\n\n\tvar ParametricTube = function ( u, v, target ) {\n\n\t\tv *= 2 * Math.PI;\n\n\t\tvar i = u * ( numpoints - 1 );\n\t\ti = Math.floor( i );\n\n\t\tvar pos = path.getPointAt( u );\n\n\t\tvar tangent = tangents[ i ];\n\t\tvar normal = normals[ i ];\n\t\tvar binormal = binormals[ i ];\n\n\t\tif ( scope.debug ) {\n\n\t\t\tscope.debug.add( new ArrowHelper( tangent, pos, radius, 0x0000ff ) );\n\t\t\tscope.debug.add( new ArrowHelper( normal, pos, radius, 0xff0000 ) );\n\t\t\tscope.debug.add( new ArrowHelper( binormal, pos, radius, 0x00ff00 ) );\n\n\t\t}\n\n\t\tvar cx = - scope.radius * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n\t\tvar cy = scope.radius * Math.sin( v );\n\n\t\tpos.x += cx * normal.x + cy * binormal.x;\n\t\tpos.y += cx * normal.y + cy * binormal.y;\n\t\tpos.z += cx * normal.z + cy * binormal.z;\n\n\t\ttarget.copy( pos );\n\n\t};\n\n\tParametricGeometry.call( this, ParametricTube, segments, segmentsRadius );\n\n};\n\nParametricGeometries.TubeGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometries.TubeGeometry.prototype.constructor = ParametricGeometries.TubeGeometry;\n\n\n/*********************************************\n  *\n  * Parametric Replacement for TorusKnotGeometry\n  *\n  *********************************************/\nParametricGeometries.TorusKnotGeometry = function ( radius, tube, segmentsT, segmentsR, p, q ) {\n\n\tthis.radius = radius || 200;\n\tthis.tube = tube || 40;\n\tthis.segmentsT = segmentsT || 64;\n\tthis.segmentsR = segmentsR || 8;\n\tthis.p = p || 2;\n\tthis.q = q || 3;\n\n\tfunction TorusKnotCurve() {\n\n\t\tCurve.call( this );\n\n\t}\n\n\tTorusKnotCurve.prototype = Object.create( Curve.prototype );\n\tTorusKnotCurve.prototype.constructor = TorusKnotCurve;\n\n\tTorusKnotCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tt *= Math.PI * 2;\n\n\t\tvar r = 0.5;\n\n\t\tvar x = ( 1 + r * Math.cos( q * t ) ) * Math.cos( p * t );\n\t\tvar y = ( 1 + r * Math.cos( q * t ) ) * Math.sin( p * t );\n\t\tvar z = r * Math.sin( q * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( radius );\n\n\t};\n\n\tvar segments = segmentsT;\n\tvar radiusSegments = segmentsR;\n\tvar extrudePath = new TorusKnotCurve();\n\n\tParametricGeometries.TubeGeometry.call( this, extrudePath, segments, tube, radiusSegments, true, false );\n\n};\n\nParametricGeometries.TorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometries.TorusKnotGeometry.prototype.constructor = ParametricGeometries.TorusKnotGeometry;\n\n\n/*********************************************\n  *\n  * Parametric Replacement for SphereGeometry\n  *\n  *********************************************/\nParametricGeometries.SphereGeometry = function ( size, u, v ) {\n\n\tfunction sphere( u, v, target ) {\n\n\t\tu *= Math.PI;\n\t\tv *= 2 * Math.PI;\n\n\t\tvar x = size * Math.sin( u ) * Math.cos( v );\n\t\tvar y = size * Math.sin( u ) * Math.sin( v );\n\t\tvar z = size * Math.cos( u );\n\n\t\ttarget.set( x, y, z );\n\n\t}\n\n\tParametricGeometry.call( this, sphere, u, v );\n\n};\n\nParametricGeometries.SphereGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometries.SphereGeometry.prototype.constructor = ParametricGeometries.SphereGeometry;\n\n\n/*********************************************\n  *\n  * Parametric Replacement for PlaneGeometry\n  *\n  *********************************************/\n\nParametricGeometries.PlaneGeometry = function ( width, depth, segmentsWidth, segmentsDepth ) {\n\n\tfunction plane( u, v, target ) {\n\n\t\tvar x = u * width;\n\t\tvar y = 0;\n\t\tvar z = v * depth;\n\n\t\ttarget.set( x, y, z );\n\n\t}\n\n\tParametricGeometry.call( this, plane, segmentsWidth, segmentsDepth );\n\n};\n\nParametricGeometries.PlaneGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometries.PlaneGeometry.prototype.constructor = ParametricGeometries.PlaneGeometry;\n\nexport { ParametricGeometries };\n"]}