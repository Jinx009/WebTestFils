{"version":3,"sources":["ConvexGeometry.js"],"names":[],"mappings":"AAAA;;;;AAIA,SACC,cADD,EAEC,sBAFD,EAGC,QAHD,QAIO,gCAJP;AAKA,SAAS,UAAT,QAA2B,uBAA3B;;AAEA;;AAEA,IAAI,iBAAiB,UAAW,MAAX,EAAoB;;AAExC,UAAS,IAAT,CAAe,IAAf;;AAEA,MAAK,kBAAL,CAAyB,IAAI,oBAAJ,CAA0B,MAA1B,CAAzB;AACA,MAAK,aAAL;AAEA,CAPD;;AASA,eAAe,SAAf,GAA2B,OAAO,MAAP,CAAe,SAAS,SAAxB,CAA3B;AACA,eAAe,SAAf,CAAyB,WAAzB,GAAuC,cAAvC;;AAEA;;AAEA,IAAI,uBAAuB,UAAW,MAAX,EAAoB;;AAE9C,gBAAe,IAAf,CAAqB,IAArB;;AAEA;;AAEA,KAAI,WAAW,EAAf;AACA,KAAI,UAAU,EAAd;;AAEA,KAAK,eAAe,SAApB,EAAgC;;AAE/B,UAAQ,KAAR,CAAe,uEAAf;AAEA;;AAED,KAAI,aAAa,IAAI,UAAJ,GAAiB,aAAjB,CAAgC,MAAhC,CAAjB;;AAEA;;AAEA,KAAI,QAAQ,WAAW,KAAvB;;AAEA,MAAM,IAAI,IAAI,CAAd,EAAiB,IAAI,MAAM,MAA3B,EAAmC,GAAnC,EAA0C;;AAEzC,MAAI,OAAO,MAAO,CAAP,CAAX;AACA,MAAI,OAAO,KAAK,IAAhB;;AAEA;;AAEA,KAAG;;AAEF,OAAI,QAAQ,KAAK,IAAL,GAAY,KAAxB;;AAEA,YAAS,IAAT,CAAe,MAAM,CAArB,EAAwB,MAAM,CAA9B,EAAiC,MAAM,CAAvC;AACA,WAAQ,IAAR,CAAc,KAAK,MAAL,CAAY,CAA1B,EAA6B,KAAK,MAAL,CAAY,CAAzC,EAA4C,KAAK,MAAL,CAAY,CAAxD;;AAEA,UAAO,KAAK,IAAZ;AAEA,GATD,QASU,SAAS,KAAK,IATxB;AAWA;;AAED;;AAEA,MAAK,YAAL,CAAmB,UAAnB,EAA+B,IAAI,sBAAJ,CAA4B,QAA5B,EAAsC,CAAtC,CAA/B;AACA,MAAK,YAAL,CAAmB,QAAnB,EAA6B,IAAI,sBAAJ,CAA4B,OAA5B,EAAqC,CAArC,CAA7B;AAEA,CA9CD;;AAgDA,qBAAqB,SAArB,GAAiC,OAAO,MAAP,CAAe,eAAe,SAA9B,CAAjC;AACA,qBAAqB,SAArB,CAA+B,WAA/B,GAA6C,oBAA7C;;AAEA,SAAS,cAAT,EAAyB,oBAAzB","file":"ConvexGeometry-compiled.js","sourcesContent":["/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tGeometry\n} from \"../../../build/three.module.js\";\nimport { ConvexHull } from \"../math/ConvexHull.js\";\n\n// ConvexGeometry\n\nvar ConvexGeometry = function ( points ) {\n\n\tGeometry.call( this );\n\n\tthis.fromBufferGeometry( new ConvexBufferGeometry( points ) );\n\tthis.mergeVertices();\n\n};\n\nConvexGeometry.prototype = Object.create( Geometry.prototype );\nConvexGeometry.prototype.constructor = ConvexGeometry;\n\n// ConvexBufferGeometry\n\nvar ConvexBufferGeometry = function ( points ) {\n\n\tBufferGeometry.call( this );\n\n\t// buffers\n\n\tvar vertices = [];\n\tvar normals = [];\n\n\tif ( ConvexHull === undefined ) {\n\n\t\tconsole.error( 'THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull' );\n\n\t}\n\n\tvar convexHull = new ConvexHull().setFromPoints( points );\n\n\t// generate vertices and normals\n\n\tvar faces = convexHull.faces;\n\n\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\t\tvar edge = face.edge;\n\n\t\t// we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n\t\tdo {\n\n\t\t\tvar point = edge.head().point;\n\n\t\t\tvertices.push( point.x, point.y, point.z );\n\t\t\tnormals.push( face.normal.x, face.normal.y, face.normal.z );\n\n\t\t\tedge = edge.next;\n\n\t\t} while ( edge !== face.edge );\n\n\t}\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n};\n\nConvexBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\n\nexport { ConvexGeometry, ConvexBufferGeometry };\n"]}