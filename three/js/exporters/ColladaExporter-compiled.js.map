{"version":3,"sources":["ColladaExporter.js"],"names":[],"mappings":"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","file":"ColladaExporter-compiled.js","sourcesContent":["console.warn( \"THREE.ColladaExporter: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * https://github.com/gkjohnson/collada-exporter-js\n *\n * Usage:\n *  var exporter = new THREE.ColladaExporter();\n *\n *  var data = exporter.parse(mesh);\n *\n * Format Definition:\n *  https://www.khronos.org/collada/\n */\n\nTHREE.ColladaExporter = function () {};\n\nTHREE.ColladaExporter.prototype = {\n\n\tconstructor: THREE.ColladaExporter,\n\n\tparse: function ( object, onDone, options ) {\n\n\t\toptions = options || {};\n\n\t\toptions = Object.assign( {\n\t\t\tversion: '1.4.1',\n\t\t\tauthor: null,\n\t\t\ttextureDirectory: '',\n\t\t}, options );\n\n\t\tif ( options.textureDirectory !== '' ) {\n\n\t\t\toptions.textureDirectory = `${ options.textureDirectory }/`\n\t\t\t\t.replace( /\\\\/g, '/' )\n\t\t\t\t.replace( /\\/+/g, '/' );\n\n\t\t}\n\n\t\tvar version = options.version;\n\t\tif ( version !== '1.4.1' && version !== '1.5.0' ) {\n\n\t\t\tconsole.warn( `ColladaExporter : Version ${ version } not supported for export. Only 1.4.1 and 1.5.0.` );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Convert the urdf xml into a well-formatted, indented format\n\t\tfunction format( urdf ) {\n\n\t\t\tvar IS_END_TAG = /^<\\//;\n\t\t\tvar IS_SELF_CLOSING = /(\\?>$)|(\\/>$)/;\n\t\t\tvar HAS_TEXT = /<[^>]+>[^<]*<\\/[^<]+>/;\n\n\t\t\tvar pad = ( ch, num ) => ( num > 0 ? ch + pad( ch, num - 1 ) : '' );\n\n\t\t\tvar tagnum = 0;\n\t\t\treturn urdf\n\t\t\t\t.match( /(<[^>]+>[^<]+<\\/[^<]+>)|(<[^>]+>)/g )\n\t\t\t\t.map( tag => {\n\n\t\t\t\t\tif ( ! HAS_TEXT.test( tag ) && ! IS_SELF_CLOSING.test( tag ) && IS_END_TAG.test( tag ) ) {\n\n\t\t\t\t\t\ttagnum --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar res = `${ pad( '  ', tagnum ) }${ tag }`;\n\n\t\t\t\t\tif ( ! HAS_TEXT.test( tag ) && ! IS_SELF_CLOSING.test( tag ) && ! IS_END_TAG.test( tag ) ) {\n\n\t\t\t\t\t\ttagnum ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn res;\n\n\t\t\t\t} )\n\t\t\t\t.join( '\\n' );\n\n\t\t}\n\n\t\t// Convert an image into a png format for saving\n\t\tfunction base64ToBuffer( str ) {\n\n\t\t\tvar b = atob( str );\n\t\t\tvar buf = new Uint8Array( b.length );\n\n\t\t\tfor ( var i = 0, l = buf.length; i < l; i ++ ) {\n\n\t\t\t\tbuf[ i ] = b.charCodeAt( i );\n\n\t\t\t}\n\n\t\t\treturn buf;\n\n\t\t}\n\n\t\tvar canvas, ctx;\n\t\tfunction imageToData( image, ext ) {\n\n\t\t\tcanvas = canvas || document.createElement( 'canvas' );\n\t\t\tctx = ctx || canvas.getContext( '2d' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tctx.drawImage( image, 0, 0 );\n\n\t\t\t// Get the base64 encoded data\n\t\t\tvar base64data = canvas\n\t\t\t\t.toDataURL( `image/${ ext }`, 1 )\n\t\t\t\t.replace( /^data:image\\/(png|jpg);base64,/, '' );\n\n\t\t\t// Convert to a uint8 array\n\t\t\treturn base64ToBuffer( base64data );\n\n\t\t}\n\n\t\t// gets the attribute array. Generate a new array if the attribute is interleaved\n\t\tvar getFuncs = [ 'getX', 'getY', 'getZ', 'getW' ];\n\t\tfunction attrBufferToArray( attr ) {\n\n\t\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\t\t// use the typed array constructor to save on memory\n\t\t\t\tvar arr = new attr.array.constructor( attr.count * attr.itemSize );\n\t\t\t\tvar size = attr.itemSize;\n\t\t\t\tfor ( var i = 0, l = attr.count; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < size; j ++ ) {\n\n\t\t\t\t\t\tarr[ i * size + j ] = attr[ getFuncs[ j ] ]( i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn arr;\n\n\t\t\t} else {\n\n\t\t\t\treturn attr.array;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Returns an array of the same type starting at the `st` index,\n\t\t// and `ct` length\n\t\tfunction subArray( arr, st, ct ) {\n\n\t\t\tif ( Array.isArray( arr ) ) return arr.slice( st, st + ct );\n\t\t\telse return new arr.constructor( arr.buffer, st * arr.BYTES_PER_ELEMENT, ct );\n\n\t\t}\n\n\t\t// Returns the string for a geometry's attribute\n\t\tfunction getAttribute( attr, name, params, type ) {\n\n\t\t\tvar array = attrBufferToArray( attr );\n\t\t\tvar res =\n\t\t\t\t\t`<source id=\"${ name }\">` +\n\n\t\t\t\t\t`<float_array id=\"${ name }-array\" count=\"${ array.length }\">` +\n\t\t\t\t\tarray.join( ' ' ) +\n\t\t\t\t\t'</float_array>' +\n\n\t\t\t\t\t'<technique_common>' +\n\t\t\t\t\t`<accessor source=\"#${ name }-array\" count=\"${ Math.floor( array.length / attr.itemSize ) }\" stride=\"${ attr.itemSize }\">` +\n\n\t\t\t\t\tparams.map( n => `<param name=\"${ n }\" type=\"${ type }\" />` ).join( '' ) +\n\n\t\t\t\t\t'</accessor>' +\n\t\t\t\t\t'</technique_common>' +\n\t\t\t\t\t'</source>';\n\n\t\t\treturn res;\n\n\t\t}\n\n\t\t// Returns the string for a node's transform information\n\t\tvar transMat;\n\t\tfunction getTransform( o ) {\n\n\t\t\t// ensure the object's matrix is up to date\n\t\t\t// before saving the transform\n\t\t\to.updateMatrix();\n\n\t\t\ttransMat = transMat || new THREE.Matrix4();\n\t\t\ttransMat.copy( o.matrix );\n\t\t\ttransMat.transpose();\n\t\t\treturn `<matrix>${ transMat.toArray().join( ' ' ) }</matrix>`;\n\n\t\t}\n\n\t\t// Process the given piece of geometry into the geometry library\n\t\t// Returns the mesh id\n\t\tfunction processGeometry( g ) {\n\n\t\t\tvar info = geometryInfo.get( g );\n\n\t\t\tif ( ! info ) {\n\n\t\t\t\t// convert the geometry to bufferGeometry if it isn't already\n\t\t\t\tvar bufferGeometry = g;\n\t\t\t\tif ( bufferGeometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tbufferGeometry = ( new THREE.BufferGeometry() ).fromGeometry( bufferGeometry );\n\n\t\t\t\t}\n\n\t\t\t\tvar meshid = `Mesh${ libraryGeometries.length + 1 }`;\n\n\t\t\t\tvar indexCount =\n\t\t\t\t\tbufferGeometry.index ?\n\t\t\t\t\t\tbufferGeometry.index.count * bufferGeometry.index.itemSize :\n\t\t\t\t\t\tbufferGeometry.attributes.position.count;\n\n\t\t\t\tvar groups =\n\t\t\t\t\tbufferGeometry.groups != null && bufferGeometry.groups.length !== 0 ?\n\t\t\t\t\t\tbufferGeometry.groups :\n\t\t\t\t\t\t[ { start: 0, count: indexCount, materialIndex: 0 } ];\n\n\n\t\t\t\tvar gname = g.name ? ` name=\"${ g.name }\"` : '';\n\t\t\t\tvar gnode = `<geometry id=\"${ meshid }\"${ gname }><mesh>`;\n\n\t\t\t\t// define the geometry node and the vertices for the geometry\n\t\t\t\tvar posName = `${ meshid }-position`;\n\t\t\t\tvar vertName = `${ meshid }-vertices`;\n\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.position, posName, [ 'X', 'Y', 'Z' ], 'float' );\n\t\t\t\tgnode += `<vertices id=\"${ vertName }\"><input semantic=\"POSITION\" source=\"#${ posName }\" /></vertices>`;\n\n\t\t\t\t// NOTE: We're not optimizing the attribute arrays here, so they're all the same length and\n\t\t\t\t// can therefore share the same triangle indices. However, MeshLab seems to have trouble opening\n\t\t\t\t// models with attributes that share an offset.\n\t\t\t\t// MeshLab Bug#424: https://sourceforge.net/p/meshlab/bugs/424/\n\n\t\t\t\t// serialize normals\n\t\t\t\tvar triangleInputs = `<input semantic=\"VERTEX\" source=\"#${ vertName }\" offset=\"0\" />`;\n\t\t\t\tif ( 'normal' in bufferGeometry.attributes ) {\n\n\t\t\t\t\tvar normName = `${ meshid }-normal`;\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.normal, normName, [ 'X', 'Y', 'Z' ], 'float' );\n\t\t\t\t\ttriangleInputs += `<input semantic=\"NORMAL\" source=\"#${ normName }\" offset=\"0\" />`;\n\n\t\t\t\t}\n\n\t\t\t\t// serialize uvs\n\t\t\t\tif ( 'uv' in bufferGeometry.attributes ) {\n\n\t\t\t\t\tvar uvName = `${ meshid }-texcoord`;\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.uv, uvName, [ 'S', 'T' ], 'float' );\n\t\t\t\t\ttriangleInputs += `<input semantic=\"TEXCOORD\" source=\"#${ uvName }\" offset=\"0\" set=\"0\" />`;\n\n\t\t\t\t}\n\n\t\t\t\t// serialize lightmap uvs\n\t\t\t\tif ( 'uv2' in bufferGeometry.attributes ) {\n\n\t\t\t\t\tvar uvName = `${ meshid }-texcoord2`;\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.uv2, uvName, [ 'S', 'T' ], 'float' );\n\t\t\t\t\ttriangleInputs += `<input semantic=\"TEXCOORD\" source=\"#${ uvName }\" offset=\"0\" set=\"1\" />`;\n\n\t\t\t\t}\n\n\t\t\t\t// serialize colors\n\t\t\t\tif ( 'color' in bufferGeometry.attributes ) {\n\n\t\t\t\t\tvar colName = `${ meshid }-color`;\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.color, colName, [ 'X', 'Y', 'Z' ], 'uint8' );\n\t\t\t\t\ttriangleInputs += `<input semantic=\"COLOR\" source=\"#${ colName }\" offset=\"0\" />`;\n\n\t\t\t\t}\n\n\t\t\t\tvar indexArray = null;\n\t\t\t\tif ( bufferGeometry.index ) {\n\n\t\t\t\t\tindexArray = attrBufferToArray( bufferGeometry.index );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArray = new Array( indexCount );\n\t\t\t\t\tfor ( var i = 0, l = indexArray.length; i < l; i ++ ) indexArray[ i ] = i;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\tvar subarr = subArray( indexArray, group.start, group.count );\n\t\t\t\t\tvar polycount = subarr.length / 3;\n\t\t\t\t\tgnode += `<triangles material=\"MESH_MATERIAL_${ group.materialIndex }\" count=\"${ polycount }\">`;\n\t\t\t\t\tgnode += triangleInputs;\n\n\t\t\t\t\tgnode += `<p>${ subarr.join( ' ' ) }</p>`;\n\t\t\t\t\tgnode += '</triangles>';\n\n\t\t\t\t}\n\n\t\t\t\tgnode += `</mesh></geometry>`;\n\n\t\t\t\tlibraryGeometries.push( gnode );\n\n\t\t\t\tinfo = { meshid: meshid, bufferGeometry: bufferGeometry };\n\t\t\t\tgeometryInfo.set( g, info );\n\n\t\t\t}\n\n\t\t\treturn info;\n\n\t\t}\n\n\t\t// Process the given texture into the image library\n\t\t// Returns the image library\n\t\tfunction processTexture( tex ) {\n\n\t\t\tvar texid = imageMap.get( tex );\n\t\t\tif ( texid == null ) {\n\n\t\t\t\ttexid = `image-${ libraryImages.length + 1 }`;\n\n\t\t\t\tvar ext = 'png';\n\t\t\t\tvar name = tex.name || texid;\n\t\t\t\tvar imageNode = `<image id=\"${ texid }\" name=\"${ name }\">`;\n\n\t\t\t\tif ( version === '1.5.0' ) {\n\n\t\t\t\t\timageNode += `<init_from><ref>${ options.textureDirectory }${ name }.${ ext }</ref></init_from>`;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// version image node 1.4.1\n\t\t\t\t\timageNode += `<init_from>${ options.textureDirectory }${ name }.${ ext }</init_from>`;\n\n\t\t\t\t}\n\n\t\t\t\timageNode += '</image>';\n\n\t\t\t\tlibraryImages.push( imageNode );\n\t\t\t\timageMap.set( tex, texid );\n\t\t\t\ttextures.push( {\n\t\t\t\t\tdirectory: options.textureDirectory,\n\t\t\t\t\tname,\n\t\t\t\t\text,\n\t\t\t\t\tdata: imageToData( tex.image, ext ),\n\t\t\t\t\toriginal: tex\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn texid;\n\n\t\t}\n\n\t\t// Process the given material into the material and effect libraries\n\t\t// Returns the material id\n\t\tfunction processMaterial( m ) {\n\n\t\t\tvar matid = materialMap.get( m );\n\n\t\t\tif ( matid == null ) {\n\n\t\t\t\tmatid = `Mat${ libraryEffects.length + 1 }`;\n\n\t\t\t\tvar type = 'phong';\n\n\t\t\t\tif ( m instanceof THREE.MeshLambertMaterial ) {\n\n\t\t\t\t\ttype = 'lambert';\n\n\t\t\t\t} else if ( m instanceof THREE.MeshBasicMaterial ) {\n\n\t\t\t\t\ttype = 'constant';\n\n\t\t\t\t\tif ( m.map !== null ) {\n\n\t\t\t\t\t\t// The Collada spec does not support diffuse texture maps with the\n\t\t\t\t\t\t// constant shader type.\n\t\t\t\t\t\t// mrdoob/three.js#15469\n\t\t\t\t\t\tconsole.warn( 'ColladaExporter: Texture maps not supported with MeshBasicMaterial.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar emissive = m.emissive ? m.emissive : new THREE.Color( 0, 0, 0 );\n\t\t\t\tvar diffuse = m.color ? m.color : new THREE.Color( 0, 0, 0 );\n\t\t\t\tvar specular = m.specular ? m.specular : new THREE.Color( 1, 1, 1 );\n\t\t\t\tvar shininess = m.shininess || 0;\n\t\t\t\tvar reflectivity = m.reflectivity || 0;\n\n\t\t\t\t// Do not export and alpha map for the reasons mentioned in issue (#13792)\n\t\t\t\t// in three.js alpha maps are black and white, but collada expects the alpha\n\t\t\t\t// channel to specify the transparency\n\t\t\t\tvar transparencyNode = '';\n\t\t\t\tif ( m.transparent === true ) {\n\n\t\t\t\t\ttransparencyNode +=\n\t\t\t\t\t\t`<transparent>` +\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tm.map ?\n\t\t\t\t\t\t\t\t`<texture texture=\"diffuse-sampler\"></texture>` :\n\t\t\t\t\t\t\t\t'<float>1</float>'\n\t\t\t\t\t\t) +\n\t\t\t\t\t\t'</transparent>';\n\n\t\t\t\t\tif ( m.opacity < 1 ) {\n\n\t\t\t\t\t\ttransparencyNode += `<transparency><float>${ m.opacity }</float></transparency>`;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar techniqueNode = `<technique sid=\"common\"><${ type }>` +\n\n\t\t\t\t\t'<emission>' +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.emissiveMap ?\n\t\t\t\t\t\t\t'<texture texture=\"emissive-sampler\" texcoord=\"TEXCOORD\" />' :\n\t\t\t\t\t\t\t`<color sid=\"emission\">${ emissive.r } ${ emissive.g } ${ emissive.b } 1</color>`\n\t\t\t\t\t) +\n\n\t\t\t\t\t'</emission>' +\n\n\t\t\t\t\t(\n\t\t\t\t\t\ttype !== 'constant' ?\n\t\t\t\t\t\t\t'<diffuse>' +\n\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tm.map ?\n\t\t\t\t\t\t\t\t'<texture texture=\"diffuse-sampler\" texcoord=\"TEXCOORD\" />' :\n\t\t\t\t\t\t\t\t`<color sid=\"diffuse\">${ diffuse.r } ${ diffuse.g } ${ diffuse.b } 1</color>`\n\t\t\t\t\t\t) +\n\t\t\t\t\t\t'</diffuse>'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t) +\n\n\t\t\t\t\t(\n\t\t\t\t\t\ttype !== 'constant' ?\n\t\t\t\t\t\t\t'<bump>' +\n\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tm.normalMap ? '<texture texture=\"bump-sampler\" texcoord=\"TEXCOORD\" />' : ''\n\t\t\t\t\t\t) +\n\t\t\t\t\t\t'</bump>'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t) +\n\n\t\t\t\t\t(\n\t\t\t\t\t\ttype === 'phong' ?\n\t\t\t\t\t\t\t`<specular><color sid=\"specular\">${ specular.r } ${ specular.g } ${ specular.b } 1</color></specular>` +\n\n\t\t\t\t\t\t'<shininess>' +\n\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tm.specularMap ?\n\t\t\t\t\t\t\t\t'<texture texture=\"specular-sampler\" texcoord=\"TEXCOORD\" />' :\n\t\t\t\t\t\t\t\t`<float sid=\"shininess\">${ shininess }</float>`\n\t\t\t\t\t\t) +\n\n\t\t\t\t\t\t'</shininess>'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t) +\n\n\t\t\t\t\t`<reflective><color>${ diffuse.r } ${ diffuse.g } ${ diffuse.b } 1</color></reflective>` +\n\n\t\t\t\t\t`<reflectivity><float>${ reflectivity }</float></reflectivity>` +\n\n\t\t\t\t\ttransparencyNode +\n\n\t\t\t\t\t`</${ type }></technique>`;\n\n\t\t\t\tvar effectnode =\n\t\t\t\t\t`<effect id=\"${ matid }-effect\">` +\n\t\t\t\t\t'<profile_COMMON>' +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.map ?\n\t\t\t\t\t\t\t'<newparam sid=\"diffuse-surface\"><surface type=\"2D\">' +\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.map ) }</init_from>` +\n\t\t\t\t\t\t\t'</surface></newparam>' +\n\t\t\t\t\t\t\t'<newparam sid=\"diffuse-sampler\"><sampler2D><source>diffuse-surface</source></sampler2D></newparam>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.specularMap ?\n\t\t\t\t\t\t\t'<newparam sid=\"specular-surface\"><surface type=\"2D\">' +\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.specularMap ) }</init_from>` +\n\t\t\t\t\t\t\t'</surface></newparam>' +\n\t\t\t\t\t\t\t'<newparam sid=\"specular-sampler\"><sampler2D><source>specular-surface</source></sampler2D></newparam>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.emissiveMap ?\n\t\t\t\t\t\t\t'<newparam sid=\"emissive-surface\"><surface type=\"2D\">' +\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.emissiveMap ) }</init_from>` +\n\t\t\t\t\t\t\t'</surface></newparam>' +\n\t\t\t\t\t\t\t'<newparam sid=\"emissive-sampler\"><sampler2D><source>emissive-surface</source></sampler2D></newparam>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.normalMap ?\n\t\t\t\t\t\t\t'<newparam sid=\"bump-surface\"><surface type=\"2D\">' +\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.normalMap ) }</init_from>` +\n\t\t\t\t\t\t\t'</surface></newparam>' +\n\t\t\t\t\t\t\t'<newparam sid=\"bump-sampler\"><sampler2D><source>bump-surface</source></sampler2D></newparam>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\ttechniqueNode +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.side === THREE.DoubleSide ?\n\t\t\t\t\t\t\t`<extra><technique profile=\"THREEJS\"><double_sided sid=\"double_sided\" type=\"int\">1</double_sided></technique></extra>` :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t'</profile_COMMON>' +\n\n\t\t\t\t\t'</effect>';\n\n\t\t\t\tvar materialName = m.name ? ` name=\"${ m.name }\"` : '';\n\t\t\t\tvar materialNode = `<material id=\"${ matid }\"${ materialName }><instance_effect url=\"#${ matid }-effect\" /></material>`;\n\n\t\t\t\tlibraryMaterials.push( materialNode );\n\t\t\t\tlibraryEffects.push( effectnode );\n\t\t\t\tmaterialMap.set( m, matid );\n\n\t\t\t}\n\n\t\t\treturn matid;\n\n\t\t}\n\n\t\t// Recursively process the object into a scene\n\t\tfunction processObject( o ) {\n\n\t\t\tvar node = `<node name=\"${ o.name }\">`;\n\n\t\t\tnode += getTransform( o );\n\n\t\t\tif ( o instanceof THREE.Mesh && o.geometry != null ) {\n\n\t\t\t\t// function returns the id associated with the mesh and a \"BufferGeometry\" version\n\t\t\t\t// of the geometry in case it's not a geometry.\n\t\t\t\tvar geomInfo = processGeometry( o.geometry );\n\t\t\t\tvar meshid = geomInfo.meshid;\n\t\t\t\tvar geometry = geomInfo.bufferGeometry;\n\n\t\t\t\t// ids of the materials to bind to the geometry\n\t\t\t\tvar matids = null;\n\t\t\t\tvar matidsArray = [];\n\n\t\t\t\t// get a list of materials to bind to the sub groups of the geometry.\n\t\t\t\t// If the amount of subgroups is greater than the materials, than reuse\n\t\t\t\t// the materials.\n\t\t\t\tvar mat = o.material || new THREE.MeshBasicMaterial();\n\t\t\t\tvar materials = Array.isArray( mat ) ? mat : [ mat ];\n\n\t\t\t\tif ( geometry.groups.length > materials.length ) {\n\n\t\t\t\t\tmatidsArray = new Array( geometry.groups.length );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmatidsArray = new Array( materials.length );\n\n\t\t\t\t}\n\n\t\t\t\tmatids = matidsArray.fill().map( ( v, i ) => processMaterial( materials[ i % materials.length ] ) );\n\n\t\t\t\tnode +=\n\t\t\t\t\t`<instance_geometry url=\"#${ meshid }\">` +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tmatids != null ?\n\t\t\t\t\t\t\t'<bind_material><technique_common>' +\n\t\t\t\t\t\t\tmatids.map( ( id, i ) =>\n\n\t\t\t\t\t\t\t\t`<instance_material symbol=\"MESH_MATERIAL_${ i }\" target=\"#${ id }\" >` +\n\n\t\t\t\t\t\t\t\t'<bind_vertex_input semantic=\"TEXCOORD\" input_semantic=\"TEXCOORD\" input_set=\"0\" />' +\n\n\t\t\t\t\t\t\t\t'</instance_material>'\n\t\t\t\t\t\t\t).join( '' ) +\n\t\t\t\t\t\t\t'</technique_common></bind_material>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t'</instance_geometry>';\n\n\t\t\t}\n\n\t\t\to.children.forEach( c => node += processObject( c ) );\n\n\t\t\tnode += '</node>';\n\n\t\t\treturn node;\n\n\t\t}\n\n\t\tvar geometryInfo = new WeakMap();\n\t\tvar materialMap = new WeakMap();\n\t\tvar imageMap = new WeakMap();\n\t\tvar textures = [];\n\n\t\tvar libraryImages = [];\n\t\tvar libraryGeometries = [];\n\t\tvar libraryEffects = [];\n\t\tvar libraryMaterials = [];\n\t\tvar libraryVisualScenes = processObject( object );\n\n\t\tvar specLink = version === '1.4.1' ? 'http://www.collada.org/2005/11/COLLADASchema' : 'https://www.khronos.org/collada/';\n\t\tvar dae =\n\t\t\t'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>' +\n\t\t\t`<COLLADA xmlns=\"${ specLink }\" version=\"${ version }\">` +\n\t\t\t'<asset>' +\n\t\t\t(\n\t\t\t\t'<contributor>' +\n\t\t\t\t'<authoring_tool>three.js Collada Exporter</authoring_tool>' +\n\t\t\t\t( options.author !== null ? `<author>${ options.author }</author>` : '' ) +\n\t\t\t\t'</contributor>' +\n\t\t\t\t`<created>${ ( new Date() ).toISOString() }</created>` +\n\t\t\t\t`<modified>${ ( new Date() ).toISOString() }</modified>` +\n\t\t\t\t'<up_axis>Y_UP</up_axis>'\n\t\t\t) +\n\t\t\t'</asset>';\n\n\t\tdae += `<library_images>${ libraryImages.join( '' ) }</library_images>`;\n\n\t\tdae += `<library_effects>${ libraryEffects.join( '' ) }</library_effects>`;\n\n\t\tdae += `<library_materials>${ libraryMaterials.join( '' ) }</library_materials>`;\n\n\t\tdae += `<library_geometries>${ libraryGeometries.join( '' ) }</library_geometries>`;\n\n\t\tdae += `<library_visual_scenes><visual_scene id=\"Scene\" name=\"scene\">${ libraryVisualScenes }</visual_scene></library_visual_scenes>`;\n\n\t\tdae += '<scene><instance_visual_scene url=\"#Scene\"/></scene>';\n\n\t\tdae += '</COLLADA>';\n\n\t\tvar res = {\n\t\t\tdata: format( dae ),\n\t\t\ttextures\n\t\t};\n\n\t\tif ( typeof onDone === 'function' ) {\n\n\t\t\trequestAnimationFrame( () => onDone( res ) );\n\n\t\t}\n\n\t\treturn res;\n\n\t}\n\n};\n"]}