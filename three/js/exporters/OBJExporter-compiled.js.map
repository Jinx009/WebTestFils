{"version":3,"sources":["OBJExporter.js"],"names":[],"mappings":"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","file":"OBJExporter-compiled.js","sourcesContent":["console.warn( \"THREE.OBJExporter: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.OBJExporter = function () {};\n\nTHREE.OBJExporter.prototype = {\n\n\tconstructor: THREE.OBJExporter,\n\n\tparse: function ( object ) {\n\n\t\tvar output = '';\n\n\t\tvar indexVertex = 0;\n\t\tvar indexVertexUvs = 0;\n\t\tvar indexNormals = 0;\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\t\tvar uv = new THREE.Vector2();\n\n\t\tvar i, j, k, l, m, face = [];\n\n\t\tvar parseMesh = function ( mesh ) {\n\n\t\t\tvar nbVertex = 0;\n\t\t\tvar nbNormals = 0;\n\t\t\tvar nbVertexUvs = 0;\n\n\t\t\tvar geometry = mesh.geometry;\n\n\t\t\tvar normalMatrixWorld = new THREE.Matrix3();\n\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tgeometry = new THREE.BufferGeometry().setFromObject( mesh );\n\n\t\t\t}\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t// shortcuts\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\n\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\n\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\n\t\t\t\tvar indices = geometry.getIndex();\n\n\t\t\t\t// name of the mesh object\n\t\t\t\toutput += 'o ' + mesh.name + '\\n';\n\n\t\t\t\t// name of the mesh material\n\t\t\t\tif ( mesh.material && mesh.material.name ) {\n\n\t\t\t\t\toutput += 'usemtl ' + mesh.material.name + '\\n';\n\n\t\t\t\t}\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\t\tfor ( i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\t\tvertex.x = vertices.getX( i );\n\t\t\t\t\t\tvertex.y = vertices.getY( i );\n\t\t\t\t\t\tvertex.z = vertices.getZ( i );\n\n\t\t\t\t\t\t// transform the vertex to world space\n\t\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\n\t\t\t\t\t\t// transform the vertex to export format\n\t\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// uvs\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tfor ( i = 0, l = uvs.count; i < l; i ++, nbVertexUvs ++ ) {\n\n\t\t\t\t\t\tuv.x = uvs.getX( i );\n\t\t\t\t\t\tuv.y = uvs.getY( i );\n\n\t\t\t\t\t\t// transform the uv to export format\n\t\t\t\t\t\toutput += 'vt ' + uv.x + ' ' + uv.y + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\n\n\t\t\t\t\tfor ( i = 0, l = normals.count; i < l; i ++, nbNormals ++ ) {\n\n\t\t\t\t\t\tnormal.x = normals.getX( i );\n\t\t\t\t\t\tnormal.y = normals.getY( i );\n\t\t\t\t\t\tnormal.z = normals.getZ( i );\n\n\t\t\t\t\t\t// transform the normal to world space\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t\t// transform the normal to export format\n\t\t\t\t\t\toutput += 'vn ' + normal.x + ' ' + normal.y + ' ' + normal.z + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// faces\n\n\t\t\t\tif ( indices !== null ) {\n\n\t\t\t\t\tfor ( i = 0, l = indices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( m = 0; m < 3; m ++ ) {\n\n\t\t\t\t\t\t\tj = indices.getX( i + m ) + 1;\n\n\t\t\t\t\t\t\tface[ m ] = ( indexVertex + j ) + ( normals || uvs ? '/' + ( uvs ? ( indexVertexUvs + j ) : '' ) + ( normals ? '/' + ( indexNormals + j ) : '' ) : '' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// transform the face to export format\n\t\t\t\t\t\toutput += 'f ' + face.join( ' ' ) + \"\\n\";\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( i = 0, l = vertices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( m = 0; m < 3; m ++ ) {\n\n\t\t\t\t\t\t\tj = i + m + 1;\n\n\t\t\t\t\t\t\tface[ m ] = ( indexVertex + j ) + ( normals || uvs ? '/' + ( uvs ? ( indexVertexUvs + j ) : '' ) + ( normals ? '/' + ( indexNormals + j ) : '' ) : '' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// transform the face to export format\n\t\t\t\t\t\toutput += 'f ' + face.join( ' ' ) + \"\\n\";\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.OBJExporter.parseMesh(): geometry type unsupported', geometry );\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\t\t\tindexVertexUvs += nbVertexUvs;\n\t\t\tindexNormals += nbNormals;\n\n\t\t};\n\n\t\tvar parseLine = function ( line ) {\n\n\t\t\tvar nbVertex = 0;\n\n\t\t\tvar geometry = line.geometry;\n\t\t\tvar type = line.type;\n\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tgeometry = new THREE.BufferGeometry().setFromObject( line );\n\n\t\t\t}\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t// shortcuts\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\n\n\t\t\t\t// name of the line object\n\t\t\t\toutput += 'o ' + line.name + '\\n';\n\n\t\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\t\tfor ( i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\t\tvertex.x = vertices.getX( i );\n\t\t\t\t\t\tvertex.y = vertices.getY( i );\n\t\t\t\t\t\tvertex.z = vertices.getZ( i );\n\n\t\t\t\t\t\t// transform the vertex to world space\n\t\t\t\t\t\tvertex.applyMatrix4( line.matrixWorld );\n\n\t\t\t\t\t\t// transform the vertex to export format\n\t\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( type === 'Line' ) {\n\n\t\t\t\t\toutput += 'l ';\n\n\t\t\t\t\tfor ( j = 1, l = vertices.count; j <= l; j ++ ) {\n\n\t\t\t\t\t\toutput += ( indexVertex + j ) + ' ';\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += '\\n';\n\n\t\t\t\t}\n\n\t\t\t\tif ( type === 'LineSegments' ) {\n\n\t\t\t\t\tfor ( j = 1, k = j + 1, l = vertices.count; j < l; j += 2, k = j + 1 ) {\n\n\t\t\t\t\t\toutput += 'l ' + ( indexVertex + j ) + ' ' + ( indexVertex + k ) + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.OBJExporter.parseLine(): geometry type unsupported', geometry );\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\n\t\t};\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child instanceof THREE.Mesh ) {\n\n\t\t\t\tparseMesh( child );\n\n\t\t\t}\n\n\t\t\tif ( child instanceof THREE.Line ) {\n\n\t\t\t\tparseLine( child );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn output;\n\n\t}\n\n};\n"]}