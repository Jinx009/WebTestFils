{"version":3,"sources":["MMDPhysics.js"],"names":[],"mappings":"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","file":"MMDPhysics-compiled.js","sourcesContent":["console.warn( \"THREE.MMDPhysics: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Dependencies\n *  - Ammo.js https://github.com/kripken/ammo.js\n *\n * MMDPhysics calculates physics with Ammo(Bullet based JavaScript Physics engine)\n * for MMD model loaded by THREE.MMDLoader.\n *\n * TODO\n *  - Physics in Worker\n */\n\n/* global Ammo */\n\nTHREE.MMDPhysics = ( function () {\n\n\t/**\n\t * @param {THREE.SkinnedMesh} mesh\n\t * @param {Array<Object>} rigidBodyParams\n\t * @param {Array<Object>} (optional) constraintParams\n\t * @param {Object} params - (optional)\n\t * @param {Number} params.unitStep - Default is 1 / 65.\n\t * @param {Integer} params.maxStepNum - Default is 3.\n\t * @param {THREE.Vector3} params.gravity - Default is ( 0, - 9.8 * 10, 0 )\n\t */\n\tfunction MMDPhysics( mesh, rigidBodyParams, constraintParams, params ) {\n\n\t\tif ( typeof Ammo === 'undefined' ) {\n\n\t\t\tthrow new Error( 'THREE.MMDPhysics: Import ammo.js https://github.com/kripken/ammo.js' );\n\n\t\t}\n\n\t\tconstraintParams = constraintParams || [];\n\t\tparams = params || {};\n\n\t\tthis.manager = new ResourceManager();\n\n\t\tthis.mesh = mesh;\n\n\t\t/*\n\t\t * I don't know why but 1/60 unitStep easily breaks models\n\t\t * so I set it 1/65 so far.\n\t\t * Don't set too small unitStep because\n\t\t * the smaller unitStep can make the performance worse.\n\t\t */\n\t\tthis.unitStep = ( params.unitStep !== undefined ) ? params.unitStep : 1 / 65;\n\t\tthis.maxStepNum = ( params.maxStepNum !== undefined ) ? params.maxStepNum : 3;\n\t\tthis.gravity = new THREE.Vector3( 0, - 9.8 * 10, 0 );\n\n\t\tif ( params.gravity !== undefined ) this.gravity.copy( params.gravity );\n\n\t\tthis.world = params.world !== undefined ? params.world : null; // experimental\n\n\t\tthis.bodies = [];\n\t\tthis.constraints = [];\n\n\t\tthis._init( mesh, rigidBodyParams, constraintParams );\n\n\t}\n\n\tMMDPhysics.prototype = {\n\n\t\tconstructor: MMDPhysics,\n\n\t\t/**\n\t\t * Advances Physics calculation and updates bones.\n\t\t *\n\t\t * @param {Number} delta - time in second\n\t\t * @return {THREE.MMDPhysics}\n\t\t */\n\t\tupdate: function ( delta ) {\n\n\t\t\tvar manager = this.manager;\n\t\t\tvar mesh = this.mesh;\n\n\t\t\t// rigid bodies and constrains are for\n\t\t\t// mesh's world scale (1, 1, 1).\n\t\t\t// Convert to (1, 1, 1) if it isn't.\n\n\t\t\tvar isNonDefaultScale = false;\n\n\t\t\tvar position = manager.allocThreeVector3();\n\t\t\tvar quaternion = manager.allocThreeQuaternion();\n\t\t\tvar scale = manager.allocThreeVector3();\n\n\t\t\tmesh.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\tif ( scale.x !== 1 || scale.y !== 1 || scale.z !== 1 ) {\n\n\t\t\t\tisNonDefaultScale = true;\n\n\t\t\t}\n\n\t\t\tvar parent;\n\n\t\t\tif ( isNonDefaultScale ) {\n\n\t\t\t\tparent = mesh.parent;\n\n\t\t\t\tif ( parent !== null ) mesh.parent = null;\n\n\t\t\t\tscale.copy( this.mesh.scale );\n\n\t\t\t\tmesh.scale.set( 1, 1, 1 );\n\t\t\t\tmesh.updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// calculate physics and update bones\n\n\t\t\tthis._updateRigidBodies();\n\t\t\tthis._stepSimulation( delta );\n\t\t\tthis._updateBones();\n\n\t\t\t// restore mesh if converted above\n\n\t\t\tif ( isNonDefaultScale ) {\n\n\t\t\t\tif ( parent !== null ) mesh.parent = parent;\n\n\t\t\t\tmesh.scale.copy( scale );\n\n\t\t\t}\n\n\t\t\tmanager.freeThreeVector3( scale );\n\t\t\tmanager.freeThreeQuaternion( quaternion );\n\t\t\tmanager.freeThreeVector3( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Resets rigid bodies transorm to current bone's.\n\t\t *\n\t\t * @return {THREE.MMDPhysics}\n\t\t */\n\t\treset: function () {\n\n\t\t\tfor ( var i = 0, il = this.bodies.length; i < il; i ++ ) {\n\n\t\t\t\tthis.bodies[ i ].reset();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Warm ups Rigid bodies. Calculates cycles steps.\n\t\t *\n\t\t * @param {Integer} cycles\n\t\t * @return {THREE.MMDPhysics}\n\t\t */\n\t\twarmup: function ( cycles ) {\n\n\t\t\tfor ( var i = 0; i < cycles; i ++ ) {\n\n\t\t\t\tthis.update( 1 / 60 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets gravity.\n\t\t *\n\t\t * @param {THREE.Vector3} gravity\n\t\t * @return {MMDPhysicsHelper}\n\t\t */\n\t\tsetGravity: function ( gravity ) {\n\n\t\t\tthis.world.setGravity( new Ammo.btVector3( gravity.x, gravity.y, gravity.z ) );\n\t\t\tthis.gravity.copy( gravity );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Creates MMDPhysicsHelper\n\t\t *\n\t\t * @return {MMDPhysicsHelper}\n\t\t */\n\t\tcreateHelper: function () {\n\n\t\t\treturn new MMDPhysicsHelper( this.mesh, this );\n\n\t\t},\n\n\t\t// private methods\n\n\t\t_init: function ( mesh, rigidBodyParams, constraintParams ) {\n\n\t\t\tvar manager = this.manager;\n\n\t\t\t// rigid body/constraint parameters are for\n\t\t\t// mesh's default world transform as position(0, 0, 0),\n\t\t\t// quaternion(0, 0, 0, 1) and scale(0, 0, 0)\n\n\t\t\tvar parent = mesh.parent;\n\n\t\t\tif ( parent !== null ) parent = null;\n\n\t\t\tvar currentPosition = manager.allocThreeVector3();\n\t\t\tvar currentQuaternion = manager.allocThreeQuaternion();\n\t\t\tvar currentScale = manager.allocThreeVector3();\n\n\t\t\tcurrentPosition.copy( mesh.position );\n\t\t\tcurrentQuaternion.copy( mesh.quaternion );\n\t\t\tcurrentScale.copy( mesh.scale );\n\n\t\t\tmesh.position.set( 0, 0, 0 );\n\t\t\tmesh.quaternion.set( 0, 0, 0, 1 );\n\t\t\tmesh.scale.set( 1, 1, 1 );\n\n\t\t\tmesh.updateMatrixWorld( true );\n\n\t\t\tif ( this.world === null ) {\n\n\t\t\t\tthis.world = this._createWorld();\n\t\t\t\tthis.setGravity( this.gravity );\n\n\t\t\t}\n\n\t\t\tthis._initRigidBodies( rigidBodyParams );\n\t\t\tthis._initConstraints( constraintParams );\n\n\t\t\tif ( parent !== null ) mesh.parent = parent;\n\n\t\t\tmesh.position.copy( currentPosition );\n\t\t\tmesh.quaternion.copy( currentQuaternion );\n\t\t\tmesh.scale.copy( currentScale );\n\n\t\t\tmesh.updateMatrixWorld( true );\n\n\t\t\tthis.reset();\n\n\t\t\tmanager.freeThreeVector3( currentPosition );\n\t\t\tmanager.freeThreeQuaternion( currentQuaternion );\n\t\t\tmanager.freeThreeVector3( currentScale );\n\n\t\t},\n\n\t\t_createWorld: function () {\n\n\t\t\tvar config = new Ammo.btDefaultCollisionConfiguration();\n\t\t\tvar dispatcher = new Ammo.btCollisionDispatcher( config );\n\t\t\tvar cache = new Ammo.btDbvtBroadphase();\n\t\t\tvar solver = new Ammo.btSequentialImpulseConstraintSolver();\n\t\t\tvar world = new Ammo.btDiscreteDynamicsWorld( dispatcher, cache, solver, config );\n\t\t\treturn world;\n\n\t\t},\n\n\t\t_initRigidBodies: function ( rigidBodies ) {\n\n\t\t\tfor ( var i = 0, il = rigidBodies.length; i < il; i ++ ) {\n\n\t\t\t\tthis.bodies.push( new RigidBody(\n\t\t\t\t\tthis.mesh, this.world, rigidBodies[ i ], this.manager ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_initConstraints: function ( constraints ) {\n\n\t\t\tfor ( var i = 0, il = constraints.length; i < il; i ++ ) {\n\n\t\t\t\tvar params = constraints[ i ];\n\t\t\t\tvar bodyA = this.bodies[ params.rigidBodyIndex1 ];\n\t\t\t\tvar bodyB = this.bodies[ params.rigidBodyIndex2 ];\n\t\t\t\tthis.constraints.push( new Constraint(\n\t\t\t\t\tthis.mesh, this.world, bodyA, bodyB, params, this.manager ) );\n\n\t\t\t}\n\n\n\t\t},\n\n\t\t_stepSimulation: function ( delta ) {\n\n\t\t\tvar unitStep = this.unitStep;\n\t\t\tvar stepTime = delta;\n\t\t\tvar maxStepNum = ( ( delta / unitStep ) | 0 ) + 1;\n\n\t\t\tif ( stepTime < unitStep ) {\n\n\t\t\t\tstepTime = unitStep;\n\t\t\t\tmaxStepNum = 1;\n\n\t\t\t}\n\n\t\t\tif ( maxStepNum > this.maxStepNum ) {\n\n\t\t\t\tmaxStepNum = this.maxStepNum;\n\n\t\t\t}\n\n\t\t\tthis.world.stepSimulation( stepTime, maxStepNum, unitStep );\n\n\t\t},\n\n\t\t_updateRigidBodies: function () {\n\n\t\t\tfor ( var i = 0, il = this.bodies.length; i < il; i ++ ) {\n\n\t\t\t\tthis.bodies[ i ].updateFromBone();\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateBones: function () {\n\n\t\t\tfor ( var i = 0, il = this.bodies.length; i < il; i ++ ) {\n\n\t\t\t\tthis.bodies[ i ].updateBone();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * This manager's responsibilies are\n\t *\n\t * 1. manage Ammo.js and Three.js object resources and\n\t *    improve the performance and the memory consumption by\n\t *    reusing objects.\n\t *\n\t * 2. provide simple Ammo object operations.\n\t */\n\tfunction ResourceManager() {\n\n\t\t// for Three.js\n\t\tthis.threeVector3s = [];\n\t\tthis.threeMatrix4s = [];\n\t\tthis.threeQuaternions = [];\n\t\tthis.threeEulers = [];\n\n\t\t// for Ammo.js\n\t\tthis.transforms = [];\n\t\tthis.quaternions = [];\n\t\tthis.vector3s = [];\n\n\t}\n\n\tResourceManager.prototype = {\n\n\t\tconstructor: ResourceManager,\n\n\t\tallocThreeVector3: function () {\n\n\t\t\treturn ( this.threeVector3s.length > 0 )\n\t\t\t\t? this.threeVector3s.pop()\n\t\t\t\t: new THREE.Vector3();\n\n\t\t},\n\n\t\tfreeThreeVector3: function ( v ) {\n\n\t\t\tthis.threeVector3s.push( v );\n\n\t\t},\n\n\t\tallocThreeMatrix4: function () {\n\n\t\t\treturn ( this.threeMatrix4s.length > 0 )\n\t\t\t\t? this.threeMatrix4s.pop()\n\t\t\t\t: new THREE.Matrix4();\n\n\t\t},\n\n\t\tfreeThreeMatrix4: function ( m ) {\n\n\t\t\tthis.threeMatrix4s.push( m );\n\n\t\t},\n\n\t\tallocThreeQuaternion: function () {\n\n\t\t\treturn ( this.threeQuaternions.length > 0 )\n\t\t\t\t? this.threeQuaternions.pop()\n\t\t\t\t: new THREE.Quaternion();\n\n\t\t},\n\n\t\tfreeThreeQuaternion: function ( q ) {\n\n\t\t\tthis.threeQuaternions.push( q );\n\n\t\t},\n\n\t\tallocThreeEuler: function () {\n\n\t\t\treturn ( this.threeEulers.length > 0 )\n\t\t\t\t? this.threeEulers.pop()\n\t\t\t\t: new THREE.Euler();\n\n\t\t},\n\n\t\tfreeThreeEuler: function ( e ) {\n\n\t\t\tthis.threeEulers.push( e );\n\n\t\t},\n\n\t\tallocTransform: function () {\n\n\t\t\treturn ( this.transforms.length > 0 )\n\t\t\t\t? this.transforms.pop()\n\t\t\t\t: new Ammo.btTransform();\n\n\t\t},\n\n\t\tfreeTransform: function ( t ) {\n\n\t\t\tthis.transforms.push( t );\n\n\t\t},\n\n\t\tallocQuaternion: function () {\n\n\t\t\treturn ( this.quaternions.length > 0 )\n\t\t\t\t? this.quaternions.pop()\n\t\t\t\t: new Ammo.btQuaternion();\n\n\t\t},\n\n\t\tfreeQuaternion: function ( q ) {\n\n\t\t\tthis.quaternions.push( q );\n\n\t\t},\n\n\t\tallocVector3: function () {\n\n\t\t\treturn ( this.vector3s.length > 0 )\n\t\t\t\t? this.vector3s.pop()\n\t\t\t\t: new Ammo.btVector3();\n\n\t\t},\n\n\t\tfreeVector3: function ( v ) {\n\n\t\t\tthis.vector3s.push( v );\n\n\t\t},\n\n\t\tsetIdentity: function ( t ) {\n\n\t\t\tt.setIdentity();\n\n\t\t},\n\n\t\tgetBasis: function ( t ) {\n\n\t\t\tvar q = this.allocQuaternion();\n\t\t\tt.getBasis().getRotation( q );\n\t\t\treturn q;\n\n\t\t},\n\n\t\tgetBasisAsMatrix3: function ( t ) {\n\n\t\t\tvar q = this.getBasis( t );\n\t\t\tvar m = this.quaternionToMatrix3( q );\n\t\t\tthis.freeQuaternion( q );\n\t\t\treturn m;\n\n\t\t},\n\n\t\tgetOrigin: function ( t ) {\n\n\t\t\treturn t.getOrigin();\n\n\t\t},\n\n\t\tsetOrigin: function ( t, v ) {\n\n\t\t\tt.getOrigin().setValue( v.x(), v.y(), v.z() );\n\n\t\t},\n\n\t\tcopyOrigin: function ( t1, t2 ) {\n\n\t\t\tvar o = t2.getOrigin();\n\t\t\tthis.setOrigin( t1, o );\n\n\t\t},\n\n\t\tsetBasis: function ( t, q ) {\n\n\t\t\tt.setRotation( q );\n\n\t\t},\n\n\t\tsetBasisFromMatrix3: function ( t, m ) {\n\n\t\t\tvar q = this.matrix3ToQuaternion( m );\n\t\t\tthis.setBasis( t, q );\n\t\t\tthis.freeQuaternion( q );\n\n\t\t},\n\n\t\tsetOriginFromArray3: function ( t, a ) {\n\n\t\t\tt.getOrigin().setValue( a[ 0 ], a[ 1 ], a[ 2 ] );\n\n\t\t},\n\n\t\tsetOriginFromThreeVector3: function ( t, v ) {\n\n\t\t\tt.getOrigin().setValue( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetBasisFromArray3: function ( t, a ) {\n\n\t\t\tvar thQ = this.allocThreeQuaternion();\n\t\t\tvar thE = this.allocThreeEuler();\n\t\t\tthE.set( a[ 0 ], a[ 1 ], a[ 2 ] );\n\t\t\tthis.setBasisFromThreeQuaternion( t, thQ.setFromEuler( thE ) );\n\n\t\t\tthis.freeThreeEuler( thE );\n\t\t\tthis.freeThreeQuaternion( thQ );\n\n\t\t},\n\n\t\tsetBasisFromThreeQuaternion: function ( t, a ) {\n\n\t\t\tvar q = this.allocQuaternion();\n\n\t\t\tq.setX( a.x );\n\t\t\tq.setY( a.y );\n\t\t\tq.setZ( a.z );\n\t\t\tq.setW( a.w );\n\t\t\tthis.setBasis( t, q );\n\n\t\t\tthis.freeQuaternion( q );\n\n\t\t},\n\n\t\tmultiplyTransforms: function ( t1, t2 ) {\n\n\t\t\tvar t = this.allocTransform();\n\t\t\tthis.setIdentity( t );\n\n\t\t\tvar m1 = this.getBasisAsMatrix3( t1 );\n\t\t\tvar m2 = this.getBasisAsMatrix3( t2 );\n\n\t\t\tvar o1 = this.getOrigin( t1 );\n\t\t\tvar o2 = this.getOrigin( t2 );\n\n\t\t\tvar v1 = this.multiplyMatrix3ByVector3( m1, o2 );\n\t\t\tvar v2 = this.addVector3( v1, o1 );\n\t\t\tthis.setOrigin( t, v2 );\n\n\t\t\tvar m3 = this.multiplyMatrices3( m1, m2 );\n\t\t\tthis.setBasisFromMatrix3( t, m3 );\n\n\t\t\tthis.freeVector3( v1 );\n\t\t\tthis.freeVector3( v2 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\tinverseTransform: function ( t ) {\n\n\t\t\tvar t2 = this.allocTransform();\n\n\t\t\tvar m1 = this.getBasisAsMatrix3( t );\n\t\t\tvar o = this.getOrigin( t );\n\n\t\t\tvar m2 = this.transposeMatrix3( m1 );\n\t\t\tvar v1 = this.negativeVector3( o );\n\t\t\tvar v2 = this.multiplyMatrix3ByVector3( m2, v1 );\n\n\t\t\tthis.setOrigin( t2, v2 );\n\t\t\tthis.setBasisFromMatrix3( t2, m2 );\n\n\t\t\tthis.freeVector3( v1 );\n\t\t\tthis.freeVector3( v2 );\n\n\t\t\treturn t2;\n\n\t\t},\n\n\t\tmultiplyMatrices3: function ( m1, m2 ) {\n\n\t\t\tvar m3 = [];\n\n\t\t\tvar v10 = this.rowOfMatrix3( m1, 0 );\n\t\t\tvar v11 = this.rowOfMatrix3( m1, 1 );\n\t\t\tvar v12 = this.rowOfMatrix3( m1, 2 );\n\n\t\t\tvar v20 = this.columnOfMatrix3( m2, 0 );\n\t\t\tvar v21 = this.columnOfMatrix3( m2, 1 );\n\t\t\tvar v22 = this.columnOfMatrix3( m2, 2 );\n\n\t\t\tm3[ 0 ] = this.dotVectors3( v10, v20 );\n\t\t\tm3[ 1 ] = this.dotVectors3( v10, v21 );\n\t\t\tm3[ 2 ] = this.dotVectors3( v10, v22 );\n\t\t\tm3[ 3 ] = this.dotVectors3( v11, v20 );\n\t\t\tm3[ 4 ] = this.dotVectors3( v11, v21 );\n\t\t\tm3[ 5 ] = this.dotVectors3( v11, v22 );\n\t\t\tm3[ 6 ] = this.dotVectors3( v12, v20 );\n\t\t\tm3[ 7 ] = this.dotVectors3( v12, v21 );\n\t\t\tm3[ 8 ] = this.dotVectors3( v12, v22 );\n\n\t\t\tthis.freeVector3( v10 );\n\t\t\tthis.freeVector3( v11 );\n\t\t\tthis.freeVector3( v12 );\n\t\t\tthis.freeVector3( v20 );\n\t\t\tthis.freeVector3( v21 );\n\t\t\tthis.freeVector3( v22 );\n\n\t\t\treturn m3;\n\n\t\t},\n\n\t\taddVector3: function ( v1, v2 ) {\n\n\t\t\tvar v = this.allocVector3();\n\t\t\tv.setValue( v1.x() + v2.x(), v1.y() + v2.y(), v1.z() + v2.z() );\n\t\t\treturn v;\n\n\t\t},\n\n\t\tdotVectors3: function ( v1, v2 ) {\n\n\t\t\treturn v1.x() * v2.x() + v1.y() * v2.y() + v1.z() * v2.z();\n\n\t\t},\n\n\t\trowOfMatrix3: function ( m, i ) {\n\n\t\t\tvar v = this.allocVector3();\n\t\t\tv.setValue( m[ i * 3 + 0 ], m[ i * 3 + 1 ], m[ i * 3 + 2 ] );\n\t\t\treturn v;\n\n\t\t},\n\n\t\tcolumnOfMatrix3: function ( m, i ) {\n\n\t\t\tvar v = this.allocVector3();\n\t\t\tv.setValue( m[ i + 0 ], m[ i + 3 ], m[ i + 6 ] );\n\t\t\treturn v;\n\n\t\t},\n\n\t\tnegativeVector3: function ( v ) {\n\n\t\t\tvar v2 = this.allocVector3();\n\t\t\tv2.setValue( - v.x(), - v.y(), - v.z() );\n\t\t\treturn v2;\n\n\t\t},\n\n\t\tmultiplyMatrix3ByVector3: function ( m, v ) {\n\n\t\t\tvar v4 = this.allocVector3();\n\n\t\t\tvar v0 = this.rowOfMatrix3( m, 0 );\n\t\t\tvar v1 = this.rowOfMatrix3( m, 1 );\n\t\t\tvar v2 = this.rowOfMatrix3( m, 2 );\n\t\t\tvar x = this.dotVectors3( v0, v );\n\t\t\tvar y = this.dotVectors3( v1, v );\n\t\t\tvar z = this.dotVectors3( v2, v );\n\n\t\t\tv4.setValue( x, y, z );\n\n\t\t\tthis.freeVector3( v0 );\n\t\t\tthis.freeVector3( v1 );\n\t\t\tthis.freeVector3( v2 );\n\n\t\t\treturn v4;\n\n\t\t},\n\n\t\ttransposeMatrix3: function ( m ) {\n\n\t\t\tvar m2 = [];\n\t\t\tm2[ 0 ] = m[ 0 ];\n\t\t\tm2[ 1 ] = m[ 3 ];\n\t\t\tm2[ 2 ] = m[ 6 ];\n\t\t\tm2[ 3 ] = m[ 1 ];\n\t\t\tm2[ 4 ] = m[ 4 ];\n\t\t\tm2[ 5 ] = m[ 7 ];\n\t\t\tm2[ 6 ] = m[ 2 ];\n\t\t\tm2[ 7 ] = m[ 5 ];\n\t\t\tm2[ 8 ] = m[ 8 ];\n\t\t\treturn m2;\n\n\t\t},\n\n\t\tquaternionToMatrix3: function ( q ) {\n\n\t\t\tvar m = [];\n\n\t\t\tvar x = q.x();\n\t\t\tvar y = q.y();\n\t\t\tvar z = q.z();\n\t\t\tvar w = q.w();\n\n\t\t\tvar xx = x * x;\n\t\t\tvar yy = y * y;\n\t\t\tvar zz = z * z;\n\n\t\t\tvar xy = x * y;\n\t\t\tvar yz = y * z;\n\t\t\tvar zx = z * x;\n\n\t\t\tvar xw = x * w;\n\t\t\tvar yw = y * w;\n\t\t\tvar zw = z * w;\n\n\t\t\tm[ 0 ] = 1 - 2 * ( yy + zz );\n\t\t\tm[ 1 ] = 2 * ( xy - zw );\n\t\t\tm[ 2 ] = 2 * ( zx + yw );\n\t\t\tm[ 3 ] = 2 * ( xy + zw );\n\t\t\tm[ 4 ] = 1 - 2 * ( zz + xx );\n\t\t\tm[ 5 ] = 2 * ( yz - xw );\n\t\t\tm[ 6 ] = 2 * ( zx - yw );\n\t\t\tm[ 7 ] = 2 * ( yz + xw );\n\t\t\tm[ 8 ] = 1 - 2 * ( xx + yy );\n\n\t\t\treturn m;\n\n\t\t},\n\n\t\tmatrix3ToQuaternion: function ( m ) {\n\n\t\t\tvar t = m[ 0 ] + m[ 4 ] + m[ 8 ];\n\t\t\tvar s, x, y, z, w;\n\n\t\t\tif ( t > 0 ) {\n\n\t\t\t\ts = Math.sqrt( t + 1.0 ) * 2;\n\t\t\t\tw = 0.25 * s;\n\t\t\t\tx = ( m[ 7 ] - m[ 5 ] ) / s;\n\t\t\t\ty = ( m[ 2 ] - m[ 6 ] ) / s;\n\t\t\t\tz = ( m[ 3 ] - m[ 1 ] ) / s;\n\n\t\t\t} else if ( ( m[ 0 ] > m[ 4 ] ) && ( m[ 0 ] > m[ 8 ] ) ) {\n\n\t\t\t\ts = Math.sqrt( 1.0 + m[ 0 ] - m[ 4 ] - m[ 8 ] ) * 2;\n\t\t\t\tw = ( m[ 7 ] - m[ 5 ] ) / s;\n\t\t\t\tx = 0.25 * s;\n\t\t\t\ty = ( m[ 1 ] + m[ 3 ] ) / s;\n\t\t\t\tz = ( m[ 2 ] + m[ 6 ] ) / s;\n\n\t\t\t} else if ( m[ 4 ] > m[ 8 ] ) {\n\n\t\t\t\ts = Math.sqrt( 1.0 + m[ 4 ] - m[ 0 ] - m[ 8 ] ) * 2;\n\t\t\t\tw = ( m[ 2 ] - m[ 6 ] ) / s;\n\t\t\t\tx = ( m[ 1 ] + m[ 3 ] ) / s;\n\t\t\t\ty = 0.25 * s;\n\t\t\t\tz = ( m[ 5 ] + m[ 7 ] ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = Math.sqrt( 1.0 + m[ 8 ] - m[ 0 ] - m[ 4 ] ) * 2;\n\t\t\t\tw = ( m[ 3 ] - m[ 1 ] ) / s;\n\t\t\t\tx = ( m[ 2 ] + m[ 6 ] ) / s;\n\t\t\t\ty = ( m[ 5 ] + m[ 7 ] ) / s;\n\t\t\t\tz = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tvar q = this.allocQuaternion();\n\t\t\tq.setX( x );\n\t\t\tq.setY( y );\n\t\t\tq.setZ( z );\n\t\t\tq.setW( w );\n\t\t\treturn q;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @param {THREE.SkinnedMesh} mesh\n\t * @param {Ammo.btDiscreteDynamicsWorld} world\n\t * @param {Object} params\n\t * @param {ResourceManager} manager\n\t */\n\tfunction RigidBody( mesh, world, params, manager ) {\n\n\t\tthis.mesh = mesh;\n\t\tthis.world = world;\n\t\tthis.params = params;\n\t\tthis.manager = manager;\n\n\t\tthis.body = null;\n\t\tthis.bone = null;\n\t\tthis.boneOffsetForm = null;\n\t\tthis.boneOffsetFormInverse = null;\n\n\t\tthis._init();\n\n\t}\n\n\tRigidBody.prototype = {\n\n\t\tconstructor: MMDPhysics.RigidBody,\n\n\t\t/**\n\t\t * Resets rigid body transform to the current bone's.\n\t\t *\n\t\t * @return {RigidBody}\n\t\t */\n\t\treset: function () {\n\n\t\t\tthis._setTransformFromBone();\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Updates rigid body's transform from the current bone.\n\t\t *\n\t\t * @return {RidigBody}\n\t\t */\n\t\tupdateFromBone: function () {\n\n\t\t\tif ( this.params.boneIndex !== - 1 &&\n\t\t\t\tthis.params.type === 0 ) {\n\n\t\t\t\tthis._setTransformFromBone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Updates bone from the current ridid body's transform.\n\t\t *\n\t\t * @return {RidigBody}\n\t\t */\n\t\tupdateBone: function () {\n\n\t\t\tif ( this.params.type === 0 ||\n\t\t\t\tthis.params.boneIndex === - 1 ) {\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis._updateBoneRotation();\n\n\t\t\tif ( this.params.type === 1 ) {\n\n\t\t\t\tthis._updateBonePosition();\n\n\t\t\t}\n\n\t\t\tthis.bone.updateMatrixWorld( true );\n\n\t\t\tif ( this.params.type === 2 ) {\n\n\t\t\t\tthis._setPositionFromBone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// private methods\n\n\t\t_init: function () {\n\n\t\t\tfunction generateShape( p ) {\n\n\t\t\t\tswitch ( p.shapeType ) {\n\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn new Ammo.btSphereShape( p.width );\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn new Ammo.btBoxShape( new Ammo.btVector3( p.width, p.height, p.depth ) );\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn new Ammo.btCapsuleShape( p.width, p.height );\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow 'unknown shape type ' + p.shapeType;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar manager = this.manager;\n\t\t\tvar params = this.params;\n\t\t\tvar bones = this.mesh.skeleton.bones;\n\t\t\tvar bone = ( params.boneIndex === - 1 )\n\t\t\t\t? new THREE.Bone()\n\t\t\t\t: bones[ params.boneIndex ];\n\n\t\t\tvar shape = generateShape( params );\n\t\t\tvar weight = ( params.type === 0 ) ? 0 : params.weight;\n\t\t\tvar localInertia = manager.allocVector3();\n\t\t\tlocalInertia.setValue( 0, 0, 0 );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tshape.calculateLocalInertia( weight, localInertia );\n\n\t\t\t}\n\n\t\t\tvar boneOffsetForm = manager.allocTransform();\n\t\t\tmanager.setIdentity( boneOffsetForm );\n\t\t\tmanager.setOriginFromArray3( boneOffsetForm, params.position );\n\t\t\tmanager.setBasisFromArray3( boneOffsetForm, params.rotation );\n\n\t\t\tvar vector = manager.allocThreeVector3();\n\t\t\tvar boneForm = manager.allocTransform();\n\t\t\tmanager.setIdentity( boneForm );\n\t\t\tmanager.setOriginFromThreeVector3( boneForm, bone.getWorldPosition( vector ) );\n\n\t\t\tvar form = manager.multiplyTransforms( boneForm, boneOffsetForm );\n\t\t\tvar state = new Ammo.btDefaultMotionState( form );\n\n\t\t\tvar info = new Ammo.btRigidBodyConstructionInfo( weight, state, shape, localInertia );\n\t\t\tinfo.set_m_friction( params.friction );\n\t\t\tinfo.set_m_restitution( params.restitution );\n\n\t\t\tvar body = new Ammo.btRigidBody( info );\n\n\t\t\tif ( params.type === 0 ) {\n\n\t\t\t\tbody.setCollisionFlags( body.getCollisionFlags() | 2 );\n\n\t\t\t\t/*\n\t\t\t\t * It'd be better to comment out this line though in general I should call this method\n\t\t\t\t * because I'm not sure why but physics will be more like MMD's\n\t\t\t\t * if I comment out.\n\t\t\t\t */\n\t\t\t\tbody.setActivationState( 4 );\n\n\t\t\t}\n\n\t\t\tbody.setDamping( params.positionDamping, params.rotationDamping );\n\t\t\tbody.setSleepingThresholds( 0, 0 );\n\n\t\t\tthis.world.addRigidBody( body, 1 << params.groupIndex, params.groupTarget );\n\n\t\t\tthis.body = body;\n\t\t\tthis.bone = bone;\n\t\t\tthis.boneOffsetForm = boneOffsetForm;\n\t\t\tthis.boneOffsetFormInverse = manager.inverseTransform( boneOffsetForm );\n\n\t\t\tmanager.freeVector3( localInertia );\n\t\t\tmanager.freeTransform( form );\n\t\t\tmanager.freeTransform( boneForm );\n\t\t\tmanager.freeThreeVector3( vector );\n\n\t\t},\n\n\t\t_getBoneTransform: function () {\n\n\t\t\tvar manager = this.manager;\n\t\t\tvar p = manager.allocThreeVector3();\n\t\t\tvar q = manager.allocThreeQuaternion();\n\t\t\tvar s = manager.allocThreeVector3();\n\n\t\t\tthis.bone.matrixWorld.decompose( p, q, s );\n\n\t\t\tvar tr = manager.allocTransform();\n\t\t\tmanager.setOriginFromThreeVector3( tr, p );\n\t\t\tmanager.setBasisFromThreeQuaternion( tr, q );\n\n\t\t\tvar form = manager.multiplyTransforms( tr, this.boneOffsetForm );\n\n\t\t\tmanager.freeTransform( tr );\n\t\t\tmanager.freeThreeVector3( s );\n\t\t\tmanager.freeThreeQuaternion( q );\n\t\t\tmanager.freeThreeVector3( p );\n\n\t\t\treturn form;\n\n\t\t},\n\n\t\t_getWorldTransformForBone: function () {\n\n\t\t\tvar manager = this.manager;\n\t\t\tvar tr = this.body.getCenterOfMassTransform();\n\t\t\treturn manager.multiplyTransforms( tr, this.boneOffsetFormInverse );\n\n\t\t},\n\n\t\t_setTransformFromBone: function () {\n\n\t\t\tvar manager = this.manager;\n\t\t\tvar form = this._getBoneTransform();\n\n\t\t\t// TODO: check the most appropriate way to set\n\t\t\t//this.body.setWorldTransform( form );\n\t\t\tthis.body.setCenterOfMassTransform( form );\n\t\t\tthis.body.getMotionState().setWorldTransform( form );\n\n\t\t\tmanager.freeTransform( form );\n\n\t\t},\n\n\t\t_setPositionFromBone: function () {\n\n\t\t\tvar manager = this.manager;\n\t\t\tvar form = this._getBoneTransform();\n\n\t\t\tvar tr = manager.allocTransform();\n\t\t\tthis.body.getMotionState().getWorldTransform( tr );\n\t\t\tmanager.copyOrigin( tr, form );\n\n\t\t\t// TODO: check the most appropriate way to set\n\t\t\t//this.body.setWorldTransform( tr );\n\t\t\tthis.body.setCenterOfMassTransform( tr );\n\t\t\tthis.body.getMotionState().setWorldTransform( tr );\n\n\t\t\tmanager.freeTransform( tr );\n\t\t\tmanager.freeTransform( form );\n\n\t\t},\n\n\t\t_updateBoneRotation: function () {\n\n\t\t\tvar manager = this.manager;\n\n\t\t\tvar tr = this._getWorldTransformForBone();\n\t\t\tvar q = manager.getBasis( tr );\n\n\t\t\tvar thQ = manager.allocThreeQuaternion();\n\t\t\tvar thQ2 = manager.allocThreeQuaternion();\n\t\t\tvar thQ3 = manager.allocThreeQuaternion();\n\n\t\t\tthQ.set( q.x(), q.y(), q.z(), q.w() );\n\t\t\tthQ2.setFromRotationMatrix( this.bone.matrixWorld );\n\t\t\tthQ2.conjugate();\n\t\t\tthQ2.multiply( thQ );\n\n\t\t\t//this.bone.quaternion.multiply( thQ2 );\n\n\t\t\tthQ3.setFromRotationMatrix( this.bone.matrix );\n\n\t\t\t// Renormalizing quaternion here because repeatedly transforming\n\t\t\t// quaternion continuously accumulates floating point error and\n\t\t\t// can end up being overflow. See #15335\n\t\t\tthis.bone.quaternion.copy( thQ2.multiply( thQ3 ).normalize() );\n\n\t\t\tmanager.freeThreeQuaternion( thQ );\n\t\t\tmanager.freeThreeQuaternion( thQ2 );\n\t\t\tmanager.freeThreeQuaternion( thQ3 );\n\n\t\t\tmanager.freeQuaternion( q );\n\t\t\tmanager.freeTransform( tr );\n\n\t\t},\n\n\t\t_updateBonePosition: function () {\n\n\t\t\tvar manager = this.manager;\n\n\t\t\tvar tr = this._getWorldTransformForBone();\n\n\t\t\tvar thV = manager.allocThreeVector3();\n\n\t\t\tvar o = manager.getOrigin( tr );\n\t\t\tthV.set( o.x(), o.y(), o.z() );\n\n\t\t\tif ( this.bone.parent ) {\n\n\t\t\t\tthis.bone.parent.worldToLocal( thV );\n\n\t\t\t}\n\n\t\t\tthis.bone.position.copy( thV );\n\n\t\t\tmanager.freeThreeVector3( thV );\n\n\t\t\tmanager.freeTransform( tr );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @param {THREE.SkinnedMesh} mesh\n\t * @param {Ammo.btDiscreteDynamicsWorld} world\n\t * @param {RigidBody} bodyA\n\t * @param {RigidBody} bodyB\n\t * @param {Object} params\n\t * @param {ResourceManager} manager\n\t */\n\tfunction Constraint( mesh, world, bodyA, bodyB, params, manager ) {\n\n\t\tthis.mesh = mesh;\n\t\tthis.world = world;\n\t\tthis.bodyA = bodyA;\n\t\tthis.bodyB = bodyB;\n\t\tthis.params = params;\n\t\tthis.manager = manager;\n\n\t\tthis.constraint = null;\n\n\t\tthis._init();\n\n\t}\n\n\tConstraint.prototype = {\n\n\t\tconstructor: Constraint,\n\n\t\t// private method\n\n\t\t_init: function () {\n\n\t\t\tvar manager = this.manager;\n\t\t\tvar params = this.params;\n\t\t\tvar bodyA = this.bodyA;\n\t\t\tvar bodyB = this.bodyB;\n\n\t\t\tvar form = manager.allocTransform();\n\t\t\tmanager.setIdentity( form );\n\t\t\tmanager.setOriginFromArray3( form, params.position );\n\t\t\tmanager.setBasisFromArray3( form, params.rotation );\n\n\t\t\tvar formA = manager.allocTransform();\n\t\t\tvar formB = manager.allocTransform();\n\n\t\t\tbodyA.body.getMotionState().getWorldTransform( formA );\n\t\t\tbodyB.body.getMotionState().getWorldTransform( formB );\n\n\t\t\tvar formInverseA = manager.inverseTransform( formA );\n\t\t\tvar formInverseB = manager.inverseTransform( formB );\n\n\t\t\tvar formA2 = manager.multiplyTransforms( formInverseA, form );\n\t\t\tvar formB2 = manager.multiplyTransforms( formInverseB, form );\n\n\t\t\tvar constraint = new Ammo.btGeneric6DofSpringConstraint( bodyA.body, bodyB.body, formA2, formB2, true );\n\n\t\t\tvar lll = manager.allocVector3();\n\t\t\tvar lul = manager.allocVector3();\n\t\t\tvar all = manager.allocVector3();\n\t\t\tvar aul = manager.allocVector3();\n\n\t\t\tlll.setValue( params.translationLimitation1[ 0 ],\n\t\t\t              params.translationLimitation1[ 1 ],\n\t\t\t              params.translationLimitation1[ 2 ] );\n\t\t\tlul.setValue( params.translationLimitation2[ 0 ],\n\t\t\t              params.translationLimitation2[ 1 ],\n\t\t\t              params.translationLimitation2[ 2 ] );\n\t\t\tall.setValue( params.rotationLimitation1[ 0 ],\n\t\t\t              params.rotationLimitation1[ 1 ],\n\t\t\t              params.rotationLimitation1[ 2 ] );\n\t\t\taul.setValue( params.rotationLimitation2[ 0 ],\n\t\t\t              params.rotationLimitation2[ 1 ],\n\t\t\t              params.rotationLimitation2[ 2 ] );\n\n\t\t\tconstraint.setLinearLowerLimit( lll );\n\t\t\tconstraint.setLinearUpperLimit( lul );\n\t\t\tconstraint.setAngularLowerLimit( all );\n\t\t\tconstraint.setAngularUpperLimit( aul );\n\n\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\tif ( params.springPosition[ i ] !== 0 ) {\n\n\t\t\t\t\tconstraint.enableSpring( i, true );\n\t\t\t\t\tconstraint.setStiffness( i, params.springPosition[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\tif ( params.springRotation[ i ] !== 0 ) {\n\n\t\t\t\t\tconstraint.enableSpring( i + 3, true );\n\t\t\t\t\tconstraint.setStiffness( i + 3, params.springRotation[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Currently(10/31/2016) official ammo.js doesn't support\n\t\t\t * btGeneric6DofSpringConstraint.setParam method.\n\t\t\t * You need custom ammo.js (add the method into idl) if you wanna use.\n\t\t\t * By setting this parameter, physics will be more like MMD's\n\t\t\t */\n\t\t\tif ( constraint.setParam !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t// this parameter is from http://www20.atpages.jp/katwat/three.js_r58/examples/mytest37/mmd.three.js\n\t\t\t\t\tconstraint.setParam( 2, 0.475, i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.world.addConstraint( constraint, true );\n\t\t\tthis.constraint = constraint;\n\n\t\t\tmanager.freeTransform( form );\n\t\t\tmanager.freeTransform( formA );\n\t\t\tmanager.freeTransform( formB );\n\t\t\tmanager.freeTransform( formInverseA );\n\t\t\tmanager.freeTransform( formInverseB );\n\t\t\tmanager.freeTransform( formA2 );\n\t\t\tmanager.freeTransform( formB2 );\n\t\t\tmanager.freeVector3( lll );\n\t\t\tmanager.freeVector3( lul );\n\t\t\tmanager.freeVector3( all );\n\t\t\tmanager.freeVector3( aul );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Visualize Rigid bodies\n\t *\n\t * @param {THREE.SkinnedMesh} mesh\n\t * @param {THREE.Physics} physics\n\t */\n\tfunction MMDPhysicsHelper( mesh, physics ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.root = mesh;\n\t\tthis.physics = physics;\n\n\t\tthis.matrix.copy( mesh.matrixWorld );\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.materials = [];\n\n\t\tthis.materials.push(\n\t\t\tnew THREE.MeshBasicMaterial( {\n\t\t\t\tcolor: new THREE.Color( 0xff8888 ),\n\t\t\t\twireframe: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\topacity: 0.25,\n\t\t\t\ttransparent: true\n\t\t\t} )\n\t\t);\n\n\t\tthis.materials.push(\n\t\t\tnew THREE.MeshBasicMaterial( {\n\t\t\t\tcolor: new THREE.Color( 0x88ff88 ),\n\t\t\t\twireframe: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\topacity: 0.25,\n\t\t\t\ttransparent: true\n\t\t\t} )\n\t\t);\n\n\t\tthis.materials.push(\n\t\t\tnew THREE.MeshBasicMaterial( {\n\t\t\t\tcolor: new THREE.Color( 0x8888ff ),\n\t\t\t\twireframe: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\topacity: 0.25,\n\t\t\t\ttransparent: true\n\t\t\t} )\n\t\t);\n\n\t\tthis._init();\n\n\t}\n\n\tMMDPhysicsHelper.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: MMDPhysicsHelper,\n\n\t\t/**\n\t\t * Updates Rigid Bodies visualization.\n\t\t */\n\t\tupdateMatrixWorld: function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\t\t\tvar quaternion = new THREE.Quaternion();\n\t\t\tvar scale = new THREE.Vector3();\n\t\t\tvar matrixWorldInv = new THREE.Matrix4();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tvar mesh = this.root;\n\n\t\t\t\tif ( this.visible ) {\n\n\t\t\t\t\tvar bodies = this.physics.bodies;\n\n\t\t\t\t\tmatrixWorldInv\n\t\t\t\t\t\t.copy( mesh.matrixWorld )\n\t\t\t\t\t\t.decompose( position, quaternion, scale )\n\t\t\t\t\t\t.compose( position, quaternion, scale.set( 1, 1, 1 ) )\n\t\t\t\t\t\t.getInverse( matrixWorldInv );\n\n\t\t\t\t\tfor ( var i = 0, il = bodies.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar body = bodies[ i ].body;\n\t\t\t\t\t\tvar child = this.children[ i ];\n\n\t\t\t\t\t\tvar tr = body.getCenterOfMassTransform();\n\t\t\t\t\t\tvar origin = tr.getOrigin();\n\t\t\t\t\t\tvar rotation = tr.getRotation();\n\n\t\t\t\t\t\tchild.position\n\t\t\t\t\t\t\t.set( origin.x(), origin.y(), origin.z() )\n\t\t\t\t\t\t\t.applyMatrix4( matrixWorldInv );\n\n\t\t\t\t\t\tchild.quaternion\n\t\t\t\t\t\t\t.setFromRotationMatrix( matrixWorldInv )\n\t\t\t\t\t\t\t.multiply(\n\t\t\t\t\t\t\t\tquaternion.set(\n\t\t\t\t\t\t\t\t\trotation.x(), rotation.y(), rotation.z(), rotation.w() )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( mesh.matrixWorld )\n\t\t\t\t\t.decompose( position, quaternion, scale )\n\t\t\t\t\t.compose( position, quaternion, scale.set( 1, 1, 1 ) );\n\n\t\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// private method\n\n\t\t_init: function () {\n\n\t\t\tvar bodies = this.physics.bodies;\n\n\t\t\tfunction createGeometry( param ) {\n\n\t\t\t\tswitch ( param.shapeType ) {\n\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn new THREE.SphereBufferGeometry( param.width, 16, 8 );\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn new THREE.BoxBufferGeometry( param.width * 2, param.height * 2, param.depth * 2, 8, 8, 8 );\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn new createCapsuleGeometry( param.width, param.height, 16, 8 );\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// copy from http://www20.atpages.jp/katwat/three.js_r58/examples/mytest37/mytest37.js?ver=20160815\n\t\t\tfunction createCapsuleGeometry( radius, cylinderHeight, segmentsRadius, segmentsHeight ) {\n\n\t\t\t\tvar geometry = new THREE.CylinderBufferGeometry( radius, radius, cylinderHeight, segmentsRadius, segmentsHeight, true );\n\t\t\t\tvar upperSphere = new THREE.Mesh( new THREE.SphereBufferGeometry( radius, segmentsRadius, segmentsHeight, 0, Math.PI * 2, 0, Math.PI / 2 ) );\n\t\t\t\tvar lowerSphere = new THREE.Mesh( new THREE.SphereBufferGeometry( radius, segmentsRadius, segmentsHeight, 0, Math.PI * 2, Math.PI / 2, Math.PI / 2 ) );\n\n\t\t\t\tupperSphere.position.set( 0, cylinderHeight / 2, 0 );\n\t\t\t\tlowerSphere.position.set( 0, - cylinderHeight / 2, 0 );\n\n\t\t\t\tupperSphere.updateMatrix();\n\t\t\t\tlowerSphere.updateMatrix();\n\n\t\t\t\tgeometry.merge( upperSphere.geometry, upperSphere.matrix );\n\t\t\t\tgeometry.merge( lowerSphere.geometry, lowerSphere.matrix );\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = bodies.length; i < il; i ++ ) {\n\n\t\t\t\tvar param = bodies[ i ].params;\n\t\t\t\tthis.add( new THREE.Mesh( createGeometry( param ), this.materials[ param.type ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn MMDPhysics;\n\n} )();\n"]}