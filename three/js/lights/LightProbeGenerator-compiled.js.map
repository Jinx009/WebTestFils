{"version":3,"sources":["LightProbeGenerator.js"],"names":[],"mappings":"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","file":"LightProbeGenerator-compiled.js","sourcesContent":["console.warn( \"THREE.LightProbeGenerator: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.LightProbeGenerator = {\n\n\t// https://www.ppsloan.org/publications/StupidSH36.pdf\n\tfromCubeTexture: function ( cubeTexture ) {\n\n\t\tvar norm, lengthSq, weight, totalWeight = 0;\n\n\t\tvar coord = new THREE.Vector3();\n\n\t\tvar dir = new THREE.Vector3();\n\n\t\tvar color = new THREE.Color();\n\n\t\tvar shBasis = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\n\t\tvar sh = new THREE.SphericalHarmonics3();\n\t\tvar shCoefficients = sh.coefficients;\n\n\t\tfor ( var faceIndex = 0; faceIndex < 6; faceIndex ++ ) {\n\n\t\t\tvar image = cubeTexture.image[ faceIndex ];\n\n\t\t\tvar width = image.width;\n\t\t\tvar height = image.height;\n\n\t\t\tvar canvas = document.createElement( 'canvas' );\n\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\tvar imageData = context.getImageData( 0, 0, width, height );\n\n\t\t\tvar data = imageData.data;\n\n\t\t\tvar imageWidth = imageData.width; // assumed to be square\n\n\t\t\tvar pixelSize = 2 / imageWidth;\n\n\t\t\tfor ( var i = 0, il = data.length; i < il; i += 4 ) { // RGBA assumed\n\n\t\t\t\t// pixel color\n\t\t\t\tcolor.setRGB( data[ i ] / 255, data[ i + 1 ] / 255, data[ i + 2 ] / 255 );\n\n\t\t\t\t// convert to linear color space\n\t\t\t\tconvertColorToLinear( color, cubeTexture.encoding );\n\n\t\t\t\t// pixel coordinate on unit cube\n\n\t\t\t\tvar pixelIndex = i / 4;\n\n\t\t\t\tvar col = - 1 + ( pixelIndex % imageWidth + 0.5 ) * pixelSize;\n\n\t\t\t\tvar row = 1 - ( Math.floor( pixelIndex / imageWidth ) + 0.5 ) * pixelSize;\n\n\t\t\t\tswitch ( faceIndex ) {\n\n\t\t\t\t\tcase 0: coord.set( - 1, row, - col ); break;\n\n\t\t\t\t\tcase 1: coord.set( 1, row, col ); break;\n\n\t\t\t\t\tcase 2: coord.set( - col, 1, - row ); break;\n\n\t\t\t\t\tcase 3: coord.set( - col, - 1, row ); break;\n\n\t\t\t\t\tcase 4: coord.set( - col, row, 1 ); break;\n\n\t\t\t\t\tcase 5: coord.set( col, row, - 1 ); break;\n\n\t\t\t\t}\n\n\t\t\t\t// weight assigned to this pixel\n\n\t\t\t\tlengthSq = coord.lengthSq();\n\n\t\t\t\tweight = 4 / ( Math.sqrt( lengthSq ) * lengthSq );\n\n\t\t\t\ttotalWeight += weight;\n\n\t\t\t\t// direction vector to this pixel\n\t\t\t\tdir.copy( coord ).normalize();\n\n\t\t\t\t// evaluate SH basis functions in direction dir\n\t\t\t\tTHREE.SphericalHarmonics3.getBasisAt( dir, shBasis );\n\n\t\t\t\t// accummuulate\n\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tshCoefficients[ j ].x += shBasis[ j ] * color.r * weight;\n\t\t\t\t\tshCoefficients[ j ].y += shBasis[ j ] * color.g * weight;\n\t\t\t\t\tshCoefficients[ j ].z += shBasis[ j ] * color.b * weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// normalize\n\t\tnorm = ( 4 * Math.PI ) / totalWeight;\n\n\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\tshCoefficients[ j ].x *= norm;\n\t\t\tshCoefficients[ j ].y *= norm;\n\t\t\tshCoefficients[ j ].z *= norm;\n\n\t\t}\n\n\t\treturn new THREE.LightProbe( sh );\n\n\t},\n\n\tfromCubeRenderTarget: function ( renderer, cubeRenderTarget ) {\n\n\t\t// The renderTarget must be set to RGBA in order to make readRenderTargetPixels works\n\t\tvar norm, lengthSq, weight, totalWeight = 0;\n\n\t\tvar coord = new THREE.Vector3();\n\n\t\tvar dir = new THREE.Vector3();\n\n\t\tvar color = new THREE.Color();\n\n\t\tvar shBasis = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\n\t\tvar sh = new THREE.SphericalHarmonics3();\n\t\tvar shCoefficients = sh.coefficients;\n\n\t\tfor ( var faceIndex = 0; faceIndex < 6; faceIndex ++ ) {\n\n\t\t\tvar imageWidth = cubeRenderTarget.width; // assumed to be square\n\t\t\tvar data = new Uint8Array( imageWidth * imageWidth * 4 );\n\t\t\trenderer.readRenderTargetPixels( cubeRenderTarget, 0, 0, imageWidth, imageWidth, data, faceIndex );\n\n\t\t\tvar pixelSize = 2 / imageWidth;\n\n\t\t\tfor ( var i = 0, il = data.length; i < il; i += 4 ) { // RGBA assumed\n\n\t\t\t\t// pixel color\n\t\t\t\tcolor.setRGB( data[ i ] / 255, data[ i + 1 ] / 255, data[ i + 2 ] / 255 );\n\n\t\t\t\t// convert to linear color space\n\t\t\t\tconvertColorToLinear( color, cubeRenderTarget.texture.encoding );\n\n\t\t\t\t// pixel coordinate on unit cube\n\n\t\t\t\tvar pixelIndex = i / 4;\n\n\t\t\t\tvar col = - 1 + ( pixelIndex % imageWidth + 0.5 ) * pixelSize;\n\n\t\t\t\tvar row = 1 - ( Math.floor( pixelIndex / imageWidth ) + 0.5 ) * pixelSize;\n\n\t\t\t\tswitch ( faceIndex ) {\n\n\t\t\t\t\tcase 0: coord.set( 1, row, - col ); break;\n\n\t\t\t\t\tcase 1: coord.set( - 1, row, col ); break;\n\n\t\t\t\t\tcase 2: coord.set( col, 1, - row ); break;\n\n\t\t\t\t\tcase 3: coord.set( col, - 1, row ); break;\n\n\t\t\t\t\tcase 4: coord.set( col, row, 1 ); break;\n\n\t\t\t\t\tcase 5: coord.set( - col, row, - 1 ); break;\n\n\t\t\t\t}\n\n\t\t\t\t// weight assigned to this pixel\n\n\t\t\t\tlengthSq = coord.lengthSq();\n\n\t\t\t\tweight = 4 / ( Math.sqrt( lengthSq ) * lengthSq );\n\n\t\t\t\ttotalWeight += weight;\n\n\t\t\t\t// direction vector to this pixel\n\t\t\t\tdir.copy( coord ).normalize();\n\n\t\t\t\t// evaluate SH basis functions in direction dir\n\t\t\t\tTHREE.SphericalHarmonics3.getBasisAt( dir, shBasis );\n\n\t\t\t\t// accummuulate\n\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tshCoefficients[ j ].x += shBasis[ j ] * color.r * weight;\n\t\t\t\t\tshCoefficients[ j ].y += shBasis[ j ] * color.g * weight;\n\t\t\t\t\tshCoefficients[ j ].z += shBasis[ j ] * color.b * weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// normalize\n\t\tnorm = ( 4 * Math.PI ) / totalWeight;\n\n\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\tshCoefficients[ j ].x *= norm;\n\t\t\tshCoefficients[ j ].y *= norm;\n\t\t\tshCoefficients[ j ].z *= norm;\n\n\t\t}\n\n\t\treturn new THREE.LightProbe( sh );\n\n\t}\n\n};\n\nvar convertColorToLinear = function ( color, encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase THREE.sRGBEncoding:\n\n\t\t\tcolor.convertSRGBToLinear();\n\t\t\tbreak;\n\n\t\tcase THREE.LinearEncoding:\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tconsole.warn( 'WARNING: LightProbeGenerator convertColorToLinear() encountered an unsupported encoding.' );\n\t\t\tbreak;\n\n\t}\n\n\treturn color;\n\n};\n"]}