{"version":3,"sources":["ShadowMapViewer.js"],"names":[],"mappings":"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","file":"ShadowMapViewer-compiled.js","sourcesContent":["console.warn( \"THREE.ShadowMapViewer: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * This is a helper for visualising a given light's shadow map.\n * It works for shadow casting lights: DirectionalLight and SpotLight.\n * It renders out the shadow map and displays it on a HUD.\n *\n * Example usage:\n *\t1) Import ShadowMapViewer into your app.\n *\n *\t2) Create a shadow casting light and name it optionally:\n *\t\tvar light = new DirectionalLight( 0xffffff, 1 );\n *\t\tlight.castShadow = true;\n *\t\tlight.name = 'Sun';\n *\n *\t3) Create a shadow map viewer for that light and set its size and position optionally:\n *\t\tvar shadowMapViewer = new ShadowMapViewer( light );\n *\t\tshadowMapViewer.size.set( 128, 128 );\t//width, height  default: 256, 256\n *\t\tshadowMapViewer.position.set( 10, 10 );\t//x, y in pixel\t default: 0, 0 (top left corner)\n *\n *\t4) Render the shadow map viewer in your render loop:\n *\t\tshadowMapViewer.render( renderer );\n *\n *\t5) Optionally: Update the shadow map viewer on window resize:\n *\t\tshadowMapViewer.updateForWindowResize();\n *\n *\t6) If you set the position or size members directly, you need to call shadowMapViewer.update();\n */\n\nTHREE.ShadowMapViewer = function ( light ) {\n\n\t//- Internals\n\tvar scope = this;\n\tvar doRenderLabel = ( light.name !== undefined && light.name !== '' );\n\tvar userAutoClearSetting;\n\n\t//Holds the initial position and dimension of the HUD\n\tvar frame = {\n\t\tx: 10,\n\t\ty: 10,\n\t\twidth: 256,\n\t\theight: 256\n\t};\n\n\tvar camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, 1, 10 );\n\tcamera.position.set( 0, 0, 2 );\n\tvar scene = new THREE.Scene();\n\n\t//HUD for shadow map\n\tvar shader = THREE.UnpackDepthRGBAShader;\n\n\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\tvar material = new THREE.ShaderMaterial( {\n\t\tuniforms: uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\t} );\n\tvar plane = new THREE.PlaneBufferGeometry( frame.width, frame.height );\n\tvar mesh = new THREE.Mesh( plane, material );\n\n\tscene.add( mesh );\n\n\n\t//Label for light's name\n\tvar labelCanvas, labelMesh;\n\n\tif ( doRenderLabel ) {\n\n\t\tlabelCanvas = document.createElement( 'canvas' );\n\n\t\tvar context = labelCanvas.getContext( '2d' );\n\t\tcontext.font = 'Bold 20px Arial';\n\n\t\tvar labelWidth = context.measureText( light.name ).width;\n\t\tlabelCanvas.width = labelWidth;\n\t\tlabelCanvas.height = 25;\t//25 to account for g, p, etc.\n\n\t\tcontext.font = 'Bold 20px Arial';\n\t\tcontext.fillStyle = 'rgba( 255, 0, 0, 1 )';\n\t\tcontext.fillText( light.name, 0, 20 );\n\n\t\tvar labelTexture = new THREE.Texture( labelCanvas );\n\t\tlabelTexture.magFilter = THREE.LinearFilter;\n\t\tlabelTexture.minFilter = THREE.LinearFilter;\n\t\tlabelTexture.needsUpdate = true;\n\n\t\tvar labelMaterial = new THREE.MeshBasicMaterial( { map: labelTexture, side: THREE.DoubleSide } );\n\t\tlabelMaterial.transparent = true;\n\n\t\tvar labelPlane = new THREE.PlaneBufferGeometry( labelCanvas.width, labelCanvas.height );\n\t\tlabelMesh = new THREE.Mesh( labelPlane, labelMaterial );\n\n\t\tscene.add( labelMesh );\n\n\t}\n\n\n\tfunction resetPosition() {\n\n\t\tscope.position.set( scope.position.x, scope.position.y );\n\n\t}\n\n\t//- API\n\t// Set to false to disable displaying this shadow map\n\tthis.enabled = true;\n\n\t// Set the size of the displayed shadow map on the HUD\n\tthis.size = {\n\t\twidth: frame.width,\n\t\theight: frame.height,\n\t\tset: function ( width, height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tmesh.scale.set( this.width / frame.width, this.height / frame.height, 1 );\n\n\t\t\t//Reset the position as it is off when we scale stuff\n\t\t\tresetPosition();\n\n\t\t}\n\t};\n\n\t// Set the position of the displayed shadow map on the HUD\n\tthis.position = {\n\t\tx: frame.x,\n\t\ty: frame.y,\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tvar width = scope.size.width;\n\t\t\tvar height = scope.size.height;\n\n\t\t\tmesh.position.set( - window.innerWidth / 2 + width / 2 + this.x, window.innerHeight / 2 - height / 2 - this.y, 0 );\n\n\t\t\tif ( doRenderLabel ) labelMesh.position.set( mesh.position.x, mesh.position.y - scope.size.height / 2 + labelCanvas.height / 2, 0 );\n\n\t\t}\n\t};\n\n\tthis.render = function ( renderer ) {\n\n\t\tif ( this.enabled ) {\n\n\t\t\t//Because a light's .shadowMap is only initialised after the first render pass\n\t\t\t//we have to make sure the correct map is sent into the shader, otherwise we\n\t\t\t//always end up with the scene's first added shadow casting light's shadowMap\n\t\t\t//in the shader\n\t\t\t//See: https://github.com/mrdoob/three.js/issues/5932\n\t\t\tuniforms.tDiffuse.value = light.shadow.map.texture;\n\n\t\t\tuserAutoClearSetting = renderer.autoClear;\n\t\t\trenderer.autoClear = false; // To allow render overlay\n\t\t\trenderer.clearDepth();\n\t\t\trenderer.render( scene, camera );\n\t\t\trenderer.autoClear = userAutoClearSetting;\t//Restore user's setting\n\n\t\t}\n\n\t};\n\n\tthis.updateForWindowResize = function () {\n\n\t\tif ( this.enabled ) {\n\n\t\t\t camera.left = window.innerWidth / - 2;\n\t\t\t camera.right = window.innerWidth / 2;\n\t\t\t camera.top = window.innerHeight / 2;\n\t\t\t camera.bottom = window.innerHeight / - 2;\n\t\t\t camera.updateProjectionMatrix();\n\n\t\t\t this.update();\n\n\t\t}\n\n\t};\n\n\tthis.update = function () {\n\n\t\tthis.position.set( this.position.x, this.position.y );\n\t\tthis.size.set( this.size.width, this.size.height );\n\n\t};\n\n\t//Force an update to set position/size\n\tthis.update();\n\n};\n\nTHREE.ShadowMapViewer.prototype.constructor = THREE.ShadowMapViewer;\n"]}