{"version":3,"sources":["Fire.js"],"names":[],"mappings":"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","file":"Fire-compiled.js","sourcesContent":["console.warn( \"THREE.Fire: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Based on research paper \"Real-Time Fluid Dynamics for Games\" by Jos Stam\n * http://www.dgp.toronto.edu/people/stam/reality/Research/pdf/GDC03.pdf\n *\n */\n\nTHREE.Fire = function ( geometry, options ) {\n\n\tTHREE.Mesh.call( this, geometry );\n\n\tthis.type = 'Fire';\n\n\tthis.clock = new THREE.Clock();\n\n\toptions = options || {};\n\n\tvar textureWidth = options.textureWidth || 512;\n\tvar textureHeight = options.textureHeight || 512;\n\tvar oneOverWidth = 1.0 / textureWidth;\n\tvar oneOverHeight = 1.0 / textureHeight;\n\n\tvar debug = ( options.debug === undefined ) ? false : options.debug;\n\tthis.color1 = options.color1 || new THREE.Color( 0xffffff );\n\tthis.color2 = options.color2 || new THREE.Color( 0xffa000 );\n\tthis.color3 = options.color3 || new THREE.Color( 0x000000 );\n\tthis.colorBias = ( options.colorBias === undefined ) ? 0.8 : options.colorBias;\n\tthis.diffuse = ( options.diffuse === undefined ) ? 1.33 : options.diffuse;\n\tthis.viscosity = ( options.viscosity === undefined ) ? 0.25 : options.viscosity;\n\tthis.expansion = ( options.expansion === undefined ) ? - 0.25 : options.expansion;\n\tthis.swirl = ( options.swirl === undefined ) ? 50.0 : options.swirl;\n\tthis.burnRate = ( options.burnRate === undefined ) ? 0.3 : options.burnRate;\n\tthis.drag = ( options.drag === undefined ) ? 0.35 : options.drag;\n\tthis.airSpeed = ( options.airSpeed === undefined ) ? 6.0 : options.airSpeed;\n\tthis.windVector = options.windVector || new THREE.Vector2( 0.0, 0.75 );\n\tthis.speed = ( options.speed === undefined ) ? 500.0 : options.speed;\n\tthis.massConservation = ( options.massConservation === undefined ) ? false : options.massConservation;\n\n\tvar size = textureWidth * textureHeight;\n\tthis.sourceData = new Uint8Array( 4 * size );\n\n\tthis.clearSources = function () {\n\n\t\tfor ( var y = 0; y < textureHeight; y ++ ) {\n\n\t\t\tfor ( var x = 0; x < textureWidth; x ++ ) {\n\n\t\t\t\tvar i = y * textureWidth + x;\n\t\t\t\tvar stride = i * 4;\n\n\t\t\t\tthis.sourceData[ stride ] = 0;\n\t\t\t\tthis.sourceData[ stride + 1 ] = 0;\n\t\t\t\tthis.sourceData[ stride + 2 ] = 0;\n\t\t\t\tthis.sourceData[ stride + 3 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.sourceMaterial.uniforms[ \"sourceMap\" ].value = this.internalSource;\n\t\tthis.sourceMaterial.needsUpdate = true;\n\n\t\treturn this.sourceData;\n\n\t};\n\n\tthis.addSource = function ( u, v, radius, density = null, windX = null, windY = null ) {\n\n\t\tvar startX = Math.max( Math.floor( ( u - radius ) * textureWidth ), 0 );\n\t\tvar startY = Math.max( Math.floor( ( v - radius ) * textureHeight ), 0 );\n\t\tvar endX = Math.min( Math.floor( ( u + radius ) * textureWidth ), textureWidth );\n\t\tvar endY = Math.min( Math.floor( ( v + radius ) * textureHeight ), textureHeight );\n\n\t\tfor ( var y = startY; y < endY; y ++ ) {\n\n\t\t\tfor ( var x = startX; x < endX; x ++ ) {\n\n\t\t\t\tvar diffX = x * oneOverWidth - u;\n\t\t\t\tvar diffY = y * oneOverHeight - v;\n\n\t\t\t\tif ( diffX * diffX + diffY * diffY < radius * radius ) {\n\n\t\t\t\t\tvar i = y * textureWidth + x;\n\t\t\t\t\tvar stride = i * 4;\n\n\t\t\t\t\tif ( density != null ) {\n\n\t\t\t\t\t\tthis.sourceData[ stride ] = Math.min( Math.max( density, 0.0 ), 1.0 ) * 255;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( windX != null ) {\n\n\t\t\t\t\t\tvar wind = Math.min( Math.max( windX, - 1.0 ), 1.0 );\n\t\t\t\t\t\twind = ( wind < 0.0 ) ? Math.floor( wind * 127 ) + 255 : Math.floor( wind * 127 );\n\t\t\t\t\t\tthis.sourceData[ stride + 1 ] = wind;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( windY != null ) {\n\n\t\t\t\t\t\tvar wind = Math.min( Math.max( windY, - 1.0 ), 1.0 );\n\t\t\t\t\t\twind = ( wind < 0.0 ) ? Math.floor( wind * 127 ) + 255 : Math.floor( wind * 127 );\n\t\t\t\t\t\tthis.sourceData[ stride + 2 ] = wind;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.internalSource.needsUpdate = true;\n\n\t\treturn this.sourceData;\n\n\t};\n\n\t// When setting source map, red channel is density. Green and blue channels\n\t// encode x and y velocity respectively as signed chars:\n\t// (0 -> 127 = 0.0 -> 1.0, 128 -> 255 = -1.0 -> 0.0 )\n\tthis.setSourceMap = function ( texture ) {\n\n\t\tthis.sourceMaterial.uniforms[ \"sourceMap\" ].value = texture;\n\n\t};\n\n\tvar parameters = {\n\t\tminFilter: THREE.NearestFilter,\n\t\tmagFilter: THREE.NearestFilter,\n\t\tdepthBuffer: false\n\t};\n\n\n\tthis.field0 = new THREE.WebGLRenderTarget( textureWidth, textureHeight, parameters );\n\n\tthis.field0.background = new THREE.Color( 0x000000 );\n\n\tthis.field1 = new THREE.WebGLRenderTarget( textureWidth, textureHeight, parameters );\n\n\tthis.field0.background = new THREE.Color( 0x000000 );\n\n\tthis.fieldProj = new THREE.WebGLRenderTarget( textureWidth, textureHeight, parameters );\n\n\tthis.field0.background = new THREE.Color( 0x000000 );\n\n\tif ( ! THREE.MathUtils.isPowerOfTwo( textureWidth ) ||\n\t\t ! THREE.MathUtils.isPowerOfTwo( textureHeight ) ) {\n\n\t\tthis.field0.texture.generateMipmaps = false;\n\t\tthis.field1.texture.generateMipmaps = false;\n\t\tthis.fieldProj.texture.generateMipmaps = false;\n\n\t}\n\n\n\tthis.fieldScene = new THREE.Scene();\n\tthis.fieldScene.background = new THREE.Color( 0x000000 );\n\n\tthis.orthoCamera = new THREE.OrthographicCamera( textureWidth / - 2, textureWidth / 2, textureHeight / 2, textureHeight / - 2, 1, 2 );\n\tthis.orthoCamera.position.z = 1;\n\n\tthis.fieldGeometry = new THREE.PlaneBufferGeometry( textureWidth, textureHeight );\n\n\tthis.internalSource = new THREE.DataTexture( this.sourceData, textureWidth, textureHeight, THREE.RGBAFormat );\n\n\t// Source Shader\n\n\tvar shader = THREE.Fire.SourceShader;\n\tthis.sourceMaterial = new THREE.ShaderMaterial( {\n\t\tuniforms: shader.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\ttransparent: false\n\t} );\n\n\tthis.clearSources();\n\n\tthis.sourceMesh = new THREE.Mesh( this.fieldGeometry, this.sourceMaterial );\n\tthis.fieldScene.add( this.sourceMesh );\n\n\t// Diffuse Shader\n\n\tvar shader = THREE.Fire.DiffuseShader;\n\tthis.diffuseMaterial = new THREE.ShaderMaterial( {\n\t\tuniforms: shader.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\ttransparent: false\n\t} );\n\n\tthis.diffuseMaterial.uniforms[ \"oneOverWidth\" ].value = oneOverWidth;\n\tthis.diffuseMaterial.uniforms[ \"oneOverHeight\" ].value = oneOverHeight;\n\n\tthis.diffuseMesh = new THREE.Mesh( this.fieldGeometry, this.diffuseMaterial );\n\tthis.fieldScene.add( this.diffuseMesh );\n\n\t// Drift Shader\n\n\tshader = THREE.Fire.DriftShader;\n\tthis.driftMaterial = new THREE.ShaderMaterial( {\n\t\tuniforms: shader.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\ttransparent: false\n\t} );\n\n\tthis.driftMaterial.uniforms[ \"oneOverWidth\" ].value = oneOverWidth;\n\tthis.driftMaterial.uniforms[ \"oneOverHeight\" ].value = oneOverHeight;\n\n\tthis.driftMesh = new THREE.Mesh( this.fieldGeometry, this.driftMaterial );\n\tthis.fieldScene.add( this.driftMesh );\n\n\t// Projection Shader 1\n\n\tshader = THREE.Fire.ProjectionShader1;\n\tthis.projMaterial1 = new THREE.ShaderMaterial( {\n\t\tuniforms: shader.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\ttransparent: false\n\t} );\n\n\tthis.projMaterial1.uniforms[ \"oneOverWidth\" ].value = oneOverWidth;\n\tthis.projMaterial1.uniforms[ \"oneOverHeight\" ].value = oneOverHeight;\n\n\tthis.projMesh1 = new THREE.Mesh( this.fieldGeometry, this.projMaterial1 );\n\tthis.fieldScene.add( this.projMesh1 );\n\n\t// Projection Shader 2\n\n\tshader = THREE.Fire.ProjectionShader2;\n\tthis.projMaterial2 = new THREE.ShaderMaterial( {\n\t\tuniforms: shader.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\ttransparent: false\n\t} );\n\n\n\tthis.projMaterial2.uniforms[ \"oneOverWidth\" ].value = oneOverWidth;\n\tthis.projMaterial2.uniforms[ \"oneOverHeight\" ].value = oneOverHeight;\n\n\tthis.projMesh2 = new THREE.Mesh( this.fieldGeometry, this.projMaterial2 );\n\tthis.fieldScene.add( this.projMesh2 );\n\n\t// Projection Shader 3\n\n\tshader = THREE.Fire.ProjectionShader3;\n\tthis.projMaterial3 = new THREE.ShaderMaterial( {\n\t\tuniforms: shader.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\ttransparent: false\n\t} );\n\n\n\tthis.projMaterial3.uniforms[ \"oneOverWidth\" ].value = oneOverWidth;\n\tthis.projMaterial3.uniforms[ \"oneOverHeight\" ].value = oneOverHeight;\n\n\tthis.projMesh3 = new THREE.Mesh( this.fieldGeometry, this.projMaterial3 );\n\tthis.fieldScene.add( this.projMesh3 );\n\n\t// Color Shader\n\n\tif ( debug ) {\n\n\t\tshader = THREE.Fire.DebugShader;\n\n\t} else {\n\n\t\tshader = THREE.Fire.ColorShader;\n\n\t}\n\n\tthis.material = new THREE.ShaderMaterial( {\n\t\tuniforms: shader.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\ttransparent: true\n\t} );\n\n\tthis.material.uniforms[ \"densityMap\" ].value = this.field1.texture;\n\n\tthis.configShaders = function ( dt ) {\n\n\t\tthis.diffuseMaterial.uniforms[ \"diffuse\" ].value = dt * 0.05 * this.diffuse;\n\t\tthis.diffuseMaterial.uniforms[ \"viscosity\" ].value = dt * 0.05 * this.viscosity;\n\t\tthis.diffuseMaterial.uniforms[ \"expansion\" ].value = Math.exp( this.expansion * - 1.0 );\n\t\tthis.diffuseMaterial.uniforms[ \"swirl\" ].value = Math.exp( this.swirl * - 0.1 );\n\t\tthis.diffuseMaterial.uniforms[ \"drag\" ].value = Math.exp( this.drag * - 0.1 );\n\t\tthis.diffuseMaterial.uniforms[ \"burnRate\" ].value = this.burnRate * dt * 0.01;\n\t\tthis.driftMaterial.uniforms[ \"windVector\" ].value = this.windVector;\n\t\tthis.driftMaterial.uniforms[ \"airSpeed\" ].value = dt * this.airSpeed * 0.001 * textureHeight;\n\t\tthis.material.uniforms[ \"color1\" ].value = this.color1;\n\t\tthis.material.uniforms[ \"color2\" ].value = this.color2;\n\t\tthis.material.uniforms[ \"color3\" ].value = this.color3;\n\t\tthis.material.uniforms[ \"colorBias\" ].value = this.colorBias;\n\n\t};\n\n\tthis.clearDiffuse = function () {\n\n\t\tthis.diffuseMaterial.uniforms[ \"expansion\" ].value = 1.0;\n\t\tthis.diffuseMaterial.uniforms[ \"swirl\" ].value = 1.0;\n\t\tthis.diffuseMaterial.uniforms[ \"drag\" ].value = 1.0;\n\t\tthis.diffuseMaterial.uniforms[ \"burnRate\" ].value = 0.0;\n\n\t};\n\n\tthis.swapTextures = function () {\n\n\t\tvar swap = this.field0;\n\t\tthis.field0 = this.field1;\n\t\tthis.field1 = swap;\n\n\t};\n\n\tthis.saveRenderState = function ( renderer ) {\n\n\t\tthis.savedRenderTarget = renderer.getRenderTarget();\n\t\tthis.savedXrEnabled = renderer.xr.enabled;\n\t\tthis.savedShadowAutoUpdate = renderer.shadowMap.autoUpdate;\n\t\tthis.savedAntialias = renderer.antialias;\n\t\tthis.savedToneMapping = renderer.toneMapping;\n\n\t};\n\n\tthis.restoreRenderState = function ( renderer ) {\n\n\t\trenderer.xr.enabled = this.savedXrEnabled;\n\t\trenderer.shadowMap.autoUpdate = this.savedShadowAutoUpdate;\n\t\trenderer.setRenderTarget( this.savedRenderTarget );\n\t\trenderer.antialias = this.savedAntialias;\n\t\trenderer.toneMapping = this.savedToneMapping;\n\n\t};\n\n\tthis.renderSource = function ( renderer ) {\n\n\t\tthis.sourceMesh.visible = true;\n\n\t\tthis.sourceMaterial.uniforms[ \"densityMap\" ].value = this.field0.texture;\n\n\t\trenderer.setRenderTarget( this.field1 );\n\t\trenderer.render( this.fieldScene, this.orthoCamera );\n\n\t\tthis.sourceMesh.visible = false;\n\n\t\tthis.swapTextures();\n\n\t};\n\n\tthis.renderDiffuse = function ( renderer ) {\n\n\t\tthis.diffuseMesh.visible = true;\n\n\t\tthis.diffuseMaterial.uniforms[ \"densityMap\" ].value = this.field0.texture;\n\n\t\trenderer.setRenderTarget( this.field1 );\n\t\trenderer.render( this.fieldScene, this.orthoCamera );\n\n\t\tthis.diffuseMesh.visible = false;\n\n\t\tthis.swapTextures();\n\n\t};\n\n\tthis.renderDrift = function ( renderer ) {\n\n\t\tthis.driftMesh.visible = true;\n\n\t\tthis.driftMaterial.uniforms[ \"densityMap\" ].value = this.field0.texture;\n\n\t\trenderer.setRenderTarget( this.field1 );\n\t\trenderer.render( this.fieldScene, this.orthoCamera );\n\n\t\tthis.driftMesh.visible = false;\n\n\t\tthis.swapTextures();\n\n\t};\n\n\tthis.renderProject = function ( renderer ) {\n\n\t\t// Projection pass 1\n\n\t\tthis.projMesh1.visible = true;\n\n\t\tthis.projMaterial1.uniforms[ \"densityMap\" ].value = this.field0.texture;\n\n\t\trenderer.setRenderTarget( this.fieldProj );\n\t\trenderer.render( this.fieldScene, this.orthoCamera );\n\n\t\tthis.projMesh1.visible = false;\n\n\t\tthis.projMaterial2.uniforms[ \"densityMap\" ].value = this.fieldProj.texture;\n\n\t\t// Projection pass 2\n\n\t\tthis.projMesh2.visible = true;\n\n\t\tfor ( var i = 0; i < 20; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this.field1 );\n\t\t\trenderer.render( this.fieldScene, this.orthoCamera );\n\n\t\t\tvar temp = this.field1;\n\t\t\tthis.field1 = this.fieldProj;\n\t\t\tthis.fieldProj = temp;\n\n\t\t\tthis.projMaterial2.uniforms[ \"densityMap\" ].value = this.fieldProj.texture;\n\n\t\t}\n\n\t\tthis.projMesh2.visible = false;\n\n\t\tthis.projMaterial3.uniforms[ \"densityMap\" ].value = this.field0.texture;\n\t\tthis.projMaterial3.uniforms[ \"projMap\" ].value = this.fieldProj.texture;\n\n\t\t// Projection pass 3\n\n\t\tthis.projMesh3.visible = true;\n\n\t\trenderer.setRenderTarget( this.field1 );\n\t\trenderer.render( this.fieldScene, this.orthoCamera );\n\n\t\tthis.projMesh3.visible = false;\n\n\t\tthis.swapTextures();\n\n\t};\n\n\tthis.onBeforeRender = function ( renderer ) {\n\n\t\tvar delta = this.clock.getDelta();\n\n\t\tif ( delta > 0.1 ) {\n\n\t\t\tdelta = 0.1;\n\n\t\t}\n\n\t\tvar dt = delta * ( this.speed * 0.1 );\n\n\t\tthis.configShaders( dt );\n\n\t\tthis.saveRenderState( renderer );\n\n\t\trenderer.xr.enabled = false; // Avoid camera modification and recursion\n\t\trenderer.shadowMap.autoUpdate = false; // Avoid re-computing shadows\n\t\trenderer.antialias = false;\n\t\trenderer.toneMapping = THREE.NoToneMapping;\n\n\t\tthis.sourceMesh.visible = false;\n\t\tthis.diffuseMesh.visible = false;\n\t\tthis.driftMesh.visible = false;\n\t\tthis.projMesh1.visible = false;\n\t\tthis.projMesh2.visible = false;\n\t\tthis.projMesh3.visible = false;\n\n\t\tthis.renderSource( renderer );\n\n\t\tthis.clearDiffuse();\n\n\t\tfor ( var i = 0; i < 21; i ++ ) {\n\n\t\t\tthis.renderDiffuse( renderer );\n\n\t\t}\n\n\t\tthis.configShaders( dt );\n\t\tthis.renderDiffuse( renderer );\n\n\t\tthis.renderDrift( renderer );\n\n\t\tif ( this.massConservation ) {\n\n\t\t\tthis.renderProject( renderer );\n\t\t\tthis.renderProject( renderer );\n\n\t\t}\n\n\t\t// Final result out for coloring\n\n\t\tthis.material.map = this.field1.texture;\n\t\tthis.material.transparent = true;\n\t\tthis.material.minFilter = THREE.LinearFilter,\n\t\tthis.material.magFilter = THREE.LinearFilter,\n\n\t\tthis.restoreRenderState( renderer );\n\n\t};\n\n};\n\n\nTHREE.Fire.prototype = Object.create( THREE.Mesh.prototype );\nTHREE.Fire.prototype.constructor = THREE.Fire;\n\nTHREE.Fire.SourceShader = {\n\n\tuniforms: {\n\t\t'sourceMap': {\n\t\t\tvalue: null\n\t\t},\n\t\t'densityMap': {\n\t\t\tvalue: null\n\t\t}\n\t},\n\n\tvertexShader: [\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t' \t  vUv = uv;',\n\n\t\t'     vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\t\t'     gl_Position = projectionMatrix * mvPosition;',\n\n\t\t'}'\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t'uniform sampler2D sourceMap;',\n\t\t'uniform sampler2D densityMap;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\t\t'    vec4 source = texture2D( sourceMap, vUv );',\n\t\t'    vec4 current = texture2D( densityMap, vUv );',\n\n\t\t'    vec2 v0 = (current.gb - step(0.5, current.gb)) * 2.0;',\n\t\t'    vec2 v1 = (source.gb - step(0.5, source.gb)) * 2.0;',\n\n\t\t'    vec2 newVel = v0 + v1;',\n\n\t\t'    newVel = clamp(newVel, -0.99, 0.99);',\n\t\t'    newVel = newVel * 0.5 + step(0.0, -newVel);',\n\n\t\t'    float newDensity = source.r + current.a;',\n\t\t'    float newTemp = source.r + current.r;',\n\n\t\t'    newDensity = clamp(newDensity, 0.0, 1.0);',\n\t\t'    newTemp = clamp(newTemp, 0.0, 1.0);',\n\n\t\t'    gl_FragColor = vec4(newTemp, newVel.xy, newDensity);',\n\n\t\t'}'\n\n\t].join( \"\\n\" )\n};\n\n\nTHREE.Fire.DiffuseShader = {\n\n\tuniforms: {\n\t\t'oneOverWidth': {\n\t\t\tvalue: null\n\t\t},\n\t\t'oneOverHeight': {\n\t\t\tvalue: null\n\t\t},\n\t\t'diffuse': {\n\t\t\tvalue: null\n\t\t},\n\t\t'viscosity': {\n\t\t\tvalue: null\n\t\t},\n\t\t'expansion': {\n\t\t\tvalue: null\n\t\t},\n\t\t'swirl': {\n\t\t\tvalue: null\n\t\t},\n\t\t'drag': {\n\t\t\tvalue: null\n\t\t},\n\t\t'burnRate': {\n\t\t\tvalue: null\n\t\t},\n\t\t'densityMap': {\n\t\t\tvalue: null\n\t\t}\n\t},\n\n\tvertexShader: [\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t' \t  vUv = uv;',\n\n\t\t'     vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\t\t'     gl_Position = projectionMatrix * mvPosition;',\n\n\t\t'}'\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t'uniform float oneOverWidth;',\n\t\t'uniform float oneOverHeight;',\n\t\t'uniform float diffuse;',\n\t\t'uniform float viscosity;',\n\t\t'uniform float expansion;',\n\t\t'uniform float swirl;',\n\t\t'uniform float burnRate;',\n\t\t'uniform float drag;',\n\t\t'uniform sampler2D densityMap;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'    vec4 dC = texture2D( densityMap, vUv );',\n\t\t'    vec4 dL = texture2D( densityMap, vec2(vUv.x - oneOverWidth, vUv.y) );',\n\t\t'    vec4 dR = texture2D( densityMap, vec2(vUv.x + oneOverWidth, vUv.y) );',\n\t\t'    vec4 dU = texture2D( densityMap, vec2(vUv.x, vUv.y - oneOverHeight) );',\n\t\t'    vec4 dD = texture2D( densityMap, vec2(vUv.x, vUv.y + oneOverHeight) );',\n\t\t'    vec4 dUL = texture2D( densityMap, vec2(vUv.x - oneOverWidth, vUv.y - oneOverHeight) );',\n\t\t'    vec4 dUR = texture2D( densityMap, vec2(vUv.x + oneOverWidth, vUv.y - oneOverHeight) );',\n\t\t'    vec4 dDL = texture2D( densityMap, vec2(vUv.x - oneOverWidth, vUv.y + oneOverHeight) );',\n\t\t'    vec4 dDR = texture2D( densityMap, vec2(vUv.x + oneOverWidth, vUv.y + oneOverHeight) );',\n\n\t\t'    dC.yz = (dC.yz - step(0.5, dC.yz)) * 2.0;',\n\t\t'    dL.yz = (dL.yz - step(0.5, dL.yz)) * 2.0;',\n\t\t'    dR.yz = (dR.yz - step(0.5, dR.yz)) * 2.0;',\n\t\t'    dU.yz = (dU.yz - step(0.5, dU.yz)) * 2.0;',\n\t\t'    dD.yz = (dD.yz - step(0.5, dD.yz)) * 2.0;',\n\t\t'    dUL.yz = (dUL.yz - step(0.5, dUL.yz)) * 2.0;',\n\t\t'    dUR.yz = (dUR.yz - step(0.5, dUR.yz)) * 2.0;',\n\t\t'    dDL.yz = (dDL.yz - step(0.5, dDL.yz)) * 2.0;',\n\t\t'    dDR.yz = (dDR.yz - step(0.5, dDR.yz)) * 2.0;',\n\n\t\t'    vec4 result = (dC + vec4(diffuse, viscosity, viscosity, diffuse) * ( dL + dR + dU + dD + dUL + dUR + dDL + dDR )) / (1.0 + 8.0 * vec4(diffuse, viscosity, viscosity, diffuse)) - vec4(0.0, 0.0, 0.0, 0.001);',\n\n\t\t'    float temperature = result.r;',\n\t\t'    temperature = clamp(temperature - burnRate, 0.0, 1.0);',\n\n\t\t'    vec2 velocity = result.yz;',\n\n\t\t'    vec2 expansionVec = vec2(dL.w - dR.w, dU.w - dD.w);',\n\n\t\t'    vec2 swirlVec = vec2((dL.z - dR.z) * 0.5, (dU.y - dD.y) * 0.5);',\n\n\t\t'    velocity = velocity + (1.0 - expansion) * expansionVec + (1.0 - swirl) * swirlVec;',\n\n\t\t'    velocity = velocity - (1.0 - drag) * velocity;',\n\n\t\t'    gl_FragColor = vec4(temperature, velocity * 0.5 + step(0.0, -velocity), result.w);',\n\n\t\t'    gl_FragColor = gl_FragColor * step(oneOverWidth, vUv.x);',\n\t\t'    gl_FragColor = gl_FragColor * step(oneOverHeight, vUv.y);',\n\t\t'    gl_FragColor = gl_FragColor * step(vUv.x, 1.0 - oneOverWidth);',\n\t\t'    gl_FragColor = gl_FragColor * step(vUv.y, 1.0 - oneOverHeight);',\n\n\t\t'}'\n\n\t].join( \"\\n\" )\n};\n\nTHREE.Fire.DriftShader = {\n\n\tuniforms: {\n\t\t'oneOverWidth': {\n\t\t\tvalue: null\n\t\t},\n\t\t'oneOverHeight': {\n\t\t\tvalue: null\n\t\t},\n\t\t'windVector': {\n\t\t\tvalue: new THREE.Vector2( 0.0, 0.0 )\n\t\t},\n\t\t'airSpeed': {\n\t\t\tvalue: null\n\t\t},\n\t\t'densityMap': {\n\t\t\tvalue: null\n\t\t}\n\t},\n\n\tvertexShader: [\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t' \t  vUv = uv;',\n\n\t\t'     vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\t\t'     gl_Position = projectionMatrix * mvPosition;',\n\n\t\t'}'\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t'uniform float oneOverWidth;',\n\t\t'uniform float oneOverHeight;',\n\t\t'uniform vec2 windVector;',\n\t\t'uniform float airSpeed;',\n\t\t'uniform sampler2D densityMap;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\t\t'    vec2 velocity = texture2D( densityMap, vUv ).gb;',\n\t\t'    velocity = (velocity - step(0.5, velocity)) * 2.0;',\n\n\t\t'    velocity = velocity + windVector;',\n\n\t\t'    vec2 sourcePos = vUv - airSpeed * vec2(oneOverWidth, oneOverHeight) * velocity;',\n\n\t\t'    vec2 units = sourcePos / vec2(oneOverWidth, oneOverHeight);',\n\n\t\t'    vec2 intPos = floor(units);',\n\t\t'    vec2 frac = units - intPos;',\n\t\t'    intPos = intPos * vec2(oneOverWidth, oneOverHeight);',\n\n\t\t'    vec4 dX0Y0 = texture2D( densityMap, intPos + vec2(0.0, -oneOverHeight) );',\n\t\t'    vec4 dX1Y0 = texture2D( densityMap, intPos + vec2(oneOverWidth, 0.0) );',\n\t\t'    vec4 dX0Y1 = texture2D( densityMap, intPos + vec2(0.0, oneOverHeight) );',\n\t\t'    vec4 dX1Y1 = texture2D( densityMap, intPos + vec2(oneOverWidth, oneOverHeight) );',\n\n\n\t\t'    dX0Y0.gb = (dX0Y0.gb - step(0.5, dX0Y0.gb)) * 2.0;',\n\t\t'    dX1Y0.gb = (dX1Y0.gb - step(0.5, dX1Y0.gb)) * 2.0;',\n\t\t'    dX0Y1.gb = (dX0Y1.gb - step(0.5, dX0Y1.gb)) * 2.0;',\n\t\t'    dX1Y1.gb = (dX1Y1.gb - step(0.5, dX1Y1.gb)) * 2.0;',\n\n\t\t'    vec4 source = mix(mix(dX0Y0, dX1Y0, frac.x), mix(dX0Y1, dX1Y1, frac.x), frac.y);',\n\n\t\t'    source.gb = source.gb * 0.5 + step(0.0, -source.gb);',\n\n\t\t'    gl_FragColor = source;',\n\n\t\t'}'\n\n\t].join( \"\\n\" )\n};\n\n\nTHREE.Fire.ProjectionShader1 = {\n\n\tuniforms: {\n\t\t'oneOverWidth': {\n\t\t\tvalue: null\n\t\t},\n\t\t'oneOverHeight': {\n\t\t\tvalue: null\n\t\t},\n\t\t'densityMap': {\n\t\t\tvalue: null\n\t\t}\n\t},\n\n\tvertexShader: [\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t' \t  vUv = uv;',\n\n\t\t'     vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\t\t'     gl_Position = projectionMatrix * mvPosition;',\n\n\t\t'}'\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t'uniform float oneOverWidth;',\n\t\t'uniform float oneOverHeight;',\n\t\t'uniform sampler2D densityMap;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\t\t'    float dL = texture2D( densityMap, vec2(vUv.x - oneOverWidth, vUv.y) ).g;',\n\t\t'    float dR = texture2D( densityMap, vec2(vUv.x + oneOverWidth, vUv.y) ).g;',\n\t\t'    float dU = texture2D( densityMap, vec2(vUv.x, vUv.y - oneOverHeight) ).b;',\n\t\t'    float dD = texture2D( densityMap, vec2(vUv.x, vUv.y + oneOverHeight) ).b;',\n\n\t\t'    dL = (dL - step(0.5, dL)) * 2.0;',\n\t\t'    dR = (dR - step(0.5, dR)) * 2.0;',\n\t\t'    dU = (dU - step(0.5, dU)) * 2.0;',\n\t\t'    dD = (dD - step(0.5, dD)) * 2.0;',\n\n\t\t'    float h = (oneOverWidth + oneOverHeight) * 0.5;',\n\t\t'    float div = -0.5 * h * (dR - dL + dD - dU);',\n\n\t\t'    gl_FragColor = vec4( 0.0, 0.0, div * 0.5 + step(0.0, -div), 0.0);',\n\n\t\t'}'\n\n\t].join( \"\\n\" )\n};\n\n\nTHREE.Fire.ProjectionShader2 = {\n\n\tuniforms: {\n\t\t'oneOverWidth': {\n\t\t\tvalue: null\n\t\t},\n\t\t'oneOverHeight': {\n\t\t\tvalue: null\n\t\t},\n\t\t'densityMap': {\n\t\t\tvalue: null\n\t\t}\n\t},\n\n\tvertexShader: [\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t' \t  vUv = uv;',\n\n\t\t'     vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\t\t'     gl_Position = projectionMatrix * mvPosition;',\n\n\t\t'}'\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t'uniform float oneOverWidth;',\n\t\t'uniform float oneOverHeight;',\n\t\t'uniform sampler2D densityMap;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\t\t'    float div = texture2D( densityMap, vUv ).b;',\n\t\t'    float pL = texture2D( densityMap, vec2(vUv.x - oneOverWidth, vUv.y) ).g;',\n\t\t'    float pR = texture2D( densityMap, vec2(vUv.x + oneOverWidth, vUv.y) ).g;',\n\t\t'    float pU = texture2D( densityMap, vec2(vUv.x, vUv.y - oneOverHeight) ).g;',\n\t\t'    float pD = texture2D( densityMap, vec2(vUv.x, vUv.y + oneOverHeight) ).g;',\n\n\t\t'    float divNorm = (div - step(0.5, div)) * 2.0;',\n\t\t'    pL = (pL - step(0.5, pL)) * 2.0;',\n\t\t'    pR = (pR - step(0.5, pR)) * 2.0;',\n\t\t'    pU = (pU - step(0.5, pU)) * 2.0;',\n\t\t'    pD = (pD - step(0.5, pD)) * 2.0;',\n\n\t\t'    float p = (divNorm + pR + pL + pD + pU) * 0.25;',\n\n\t\t'    gl_FragColor = vec4( 0.0, p * 0.5 + step(0.0, -p), div, 0.0);',\n\n\t\t'}'\n\n\t].join( \"\\n\" )\n};\n\n\nTHREE.Fire.ProjectionShader3 = {\n\n\tuniforms: {\n\t\t'oneOverWidth': {\n\t\t\tvalue: null\n\t\t},\n\t\t'oneOverHeight': {\n\t\t\tvalue: null\n\t\t},\n\t\t'densityMap': {\n\t\t\tvalue: null\n\t\t},\n\t\t'projMap': {\n\t\t\tvalue: null\n\t\t}\n\t},\n\n\tvertexShader: [\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t' \t  vUv = uv;',\n\n\t\t'     vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\t\t'     gl_Position = projectionMatrix * mvPosition;',\n\n\t\t'}'\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t'uniform float oneOverWidth;',\n\t\t'uniform float oneOverHeight;',\n\t\t'uniform sampler2D densityMap;',\n\t\t'uniform sampler2D projMap;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\t\t'    vec4 orig = texture2D(densityMap, vUv);',\n\n\t\t'    float pL = texture2D( projMap, vec2(vUv.x - oneOverWidth, vUv.y) ).g;',\n\t\t'    float pR = texture2D( projMap, vec2(vUv.x + oneOverWidth, vUv.y) ).g;',\n\t\t'    float pU = texture2D( projMap, vec2(vUv.x, vUv.y - oneOverHeight) ).g;',\n\t\t'    float pD = texture2D( projMap, vec2(vUv.x, vUv.y + oneOverHeight) ).g;',\n\n\t\t'    float uNorm = (orig.g - step(0.5, orig.g)) * 2.0;',\n\t\t'    float vNorm = (orig.b - step(0.5, orig.b)) * 2.0;',\n\n\t\t'    pL = (pL - step(0.5, pL)) * 2.0;',\n\t\t'    pR = (pR - step(0.5, pR)) * 2.0;',\n\t\t'    pU = (pU - step(0.5, pU)) * 2.0;',\n\t\t'    pD = (pD - step(0.5, pD)) * 2.0;',\n\n\t\t'    float h = (oneOverWidth + oneOverHeight) * 0.5;',\n\t\t'    float u = uNorm - (0.5 * (pR - pL) / h);',\n\t\t'    float v = vNorm - (0.5 * (pD - pU) / h);',\n\n\t\t'    gl_FragColor = vec4( orig.r, u * 0.5 + step(0.0, -u), v * 0.5 + step(0.0, -v), orig.a);',\n\n\t\t'}'\n\n\t].join( \"\\n\" )\n};\n\nTHREE.Fire.ColorShader = {\n\n\tuniforms: {\n\t\t'color1': {\n\t\t\tvalue: null\n\t\t},\n\t\t'color2': {\n\t\t\tvalue: null\n\t\t},\n\t\t'color3': {\n\t\t\tvalue: null\n\t\t},\n\t\t'colorBias': {\n\t\t\tvalue: null\n\t\t},\n\t\t'densityMap': {\n\t\t\tvalue: null\n\t\t}\n\t},\n\n\tvertexShader: [\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t' \t  vUv = uv;',\n\n\t\t'     vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\t\t'     gl_Position = projectionMatrix * mvPosition;',\n\n\t\t'}'\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t'uniform vec3 color1;',\n\t\t'uniform vec3 color2;',\n\t\t'uniform vec3 color3;',\n\t\t'uniform float colorBias;',\n\t\t'uniform sampler2D densityMap;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\t\t'    float density = texture2D( densityMap, vUv ).a;',\n\t\t'    float temperature = texture2D( densityMap, vUv ).r;',\n\n\t\t'    float bias = clamp(colorBias, 0.0001, 0.9999);',\n\n\t\t'    vec3 blend1 = mix(color3, color2, temperature / bias) * (1.0 - step(bias, temperature));',\n\t\t'    vec3 blend2 = mix(color2, color1, (temperature - bias) / (1.0 - bias) ) * step(bias, temperature);',\n\n\t\t'    gl_FragColor = vec4(blend1 + blend2, density);',\n\t\t'}'\n\n\t].join( \"\\n\" )\n};\n\n\nTHREE.Fire.DebugShader = {\n\n\tuniforms: {\n\t\t'color1': {\n\t\t\tvalue: null\n\t\t},\n\t\t'color2': {\n\t\t\tvalue: null\n\t\t},\n\t\t'color3': {\n\t\t\tvalue: null\n\t\t},\n\t\t'colorBias': {\n\t\t\tvalue: null\n\t\t},\n\t\t'densityMap': {\n\t\t\tvalue: null\n\t\t}\n\t},\n\n\tvertexShader: [\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t' \t  vUv = uv;',\n\n\t\t'     vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\t\t'     gl_Position = projectionMatrix * mvPosition;',\n\n\t\t'}'\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t'uniform sampler2D densityMap;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\t\t'    float density;',\n\t\t'    density = texture2D( densityMap, vUv ).a;',\n\n\t\t'    vec2 vel = texture2D( densityMap, vUv ).gb;',\n\n\t\t'    vel = (vel - step(0.5, vel)) * 2.0;',\n\n\t\t'    float r = density;',\n\t\t'    float g = max(abs(vel.x), density * 0.5);',\n\t\t'    float b = max(abs(vel.y), density * 0.5);',\n\t\t'    float a = max(density * 0.5, max(abs(vel.x), abs(vel.y)));',\n\n\t\t'    gl_FragColor = vec4(r, g, b, a);',\n\n\t\t'}'\n\n\t].join( \"\\n\" )\n};\n"]}