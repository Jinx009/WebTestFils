{"version":3,"sources":["ShadowMesh.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,2SAAd;AACA;;;;AAIA,MAAM,UAAN,GAAmB,UAAW,IAAX,EAAkB;;AAEpC,KAAI,iBAAiB,IAAI,MAAM,iBAAV,CAA6B;;AAEjD,SAAO,QAF0C;AAGjD,eAAa,IAHoC;AAIjD,WAAS,GAJwC;AAKjD,cAAY;;AALqC,EAA7B,CAArB;;AASA,OAAM,IAAN,CAAW,IAAX,CAAiB,IAAjB,EAAuB,KAAK,QAA5B,EAAsC,cAAtC;;AAEA,MAAK,UAAL,GAAkB,KAAK,WAAvB;;AAEA,MAAK,aAAL,GAAqB,KAArB;AACA,MAAK,gBAAL,GAAwB,KAAxB;AAEA,CAlBD;;AAoBA,MAAM,UAAN,CAAiB,SAAjB,GAA6B,OAAO,MAAP,CAAe,MAAM,IAAN,CAAW,SAA1B,CAA7B;AACA,MAAM,UAAN,CAAiB,SAAjB,CAA2B,WAA3B,GAAyC,MAAM,UAA/C;;AAEA,MAAM,UAAN,CAAiB,SAAjB,CAA2B,MAA3B,GAAoC,YAAY;;AAE/C,KAAI,eAAe,IAAI,MAAM,OAAV,EAAnB;;AAEA,QAAO,UAAW,KAAX,EAAkB,eAAlB,EAAoC;;AAE1C;;AAEA,MAAI,MAAM,MAAM,MAAN,CAAa,CAAb,GAAiB,gBAAgB,CAAjC,GACP,MAAM,MAAN,CAAa,CAAb,GAAiB,gBAAgB,CAD1B,GAEP,MAAM,MAAN,CAAa,CAAb,GAAiB,gBAAgB,CAF1B,GAGP,CAAE,MAAM,QAAR,GAAmB,gBAAgB,CAHtC;;AAKA,MAAI,MAAM,aAAa,QAAvB;;AAEA,MAAK,CAAL,IAAW,MAAM,gBAAgB,CAAhB,GAAoB,MAAM,MAAN,CAAa,CAAlD;AACA,MAAK,CAAL,IAAW,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA9C;AACA,MAAK,CAAL,IAAW,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA9C;AACA,MAAK,EAAL,IAAY,CAAE,gBAAgB,CAAlB,GAAsB,CAAE,MAAM,QAA1C;;AAEA,MAAK,CAAL,IAAW,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA9C;AACA,MAAK,CAAL,IAAW,MAAM,gBAAgB,CAAhB,GAAoB,MAAM,MAAN,CAAa,CAAlD;AACA,MAAK,CAAL,IAAW,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA9C;AACA,MAAK,EAAL,IAAY,CAAE,gBAAgB,CAAlB,GAAsB,CAAE,MAAM,QAA1C;;AAEA,MAAK,CAAL,IAAW,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA9C;AACA,MAAK,CAAL,IAAW,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA9C;AACA,MAAK,EAAL,IAAY,MAAM,gBAAgB,CAAhB,GAAoB,MAAM,MAAN,CAAa,CAAnD;AACA,MAAK,EAAL,IAAY,CAAE,gBAAgB,CAAlB,GAAsB,CAAE,MAAM,QAA1C;;AAEA,MAAK,CAAL,IAAW,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA9C;AACA,MAAK,CAAL,IAAW,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA9C;AACA,MAAK,EAAL,IAAY,CAAE,gBAAgB,CAAlB,GAAsB,MAAM,MAAN,CAAa,CAA/C;AACA,MAAK,EAAL,IAAY,MAAM,gBAAgB,CAAhB,GAAoB,CAAE,MAAM,QAA9C;;AAEA,OAAK,MAAL,CAAY,gBAAZ,CAA8B,YAA9B,EAA4C,KAAK,UAAjD;AAEA,EAjCD;AAmCA,CAvCmC,EAApC","file":"ShadowMesh-compiled.js","sourcesContent":["console.warn( \"THREE.ShadowMesh: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * A shadow Mesh that follows a shadow-casting Mesh in the scene, but is confined to a single plane.\n */\n\nTHREE.ShadowMesh = function ( mesh ) {\n\n\tvar shadowMaterial = new THREE.MeshBasicMaterial( {\n\n\t\tcolor: 0x000000,\n\t\ttransparent: true,\n\t\topacity: 0.6,\n\t\tdepthWrite: false\n\n\t} );\n\n\tTHREE.Mesh.call( this, mesh.geometry, shadowMaterial );\n\n\tthis.meshMatrix = mesh.matrixWorld;\n\n\tthis.frustumCulled = false;\n\tthis.matrixAutoUpdate = false;\n\n};\n\nTHREE.ShadowMesh.prototype = Object.create( THREE.Mesh.prototype );\nTHREE.ShadowMesh.prototype.constructor = THREE.ShadowMesh;\n\nTHREE.ShadowMesh.prototype.update = function () {\n\n\tvar shadowMatrix = new THREE.Matrix4();\n\n\treturn function ( plane, lightPosition4D ) {\n\n\t\t// based on https://www.opengl.org/archives/resources/features/StencilTalk/tsld021.htm\n\n\t\tvar dot = plane.normal.x * lightPosition4D.x +\n\t\t\t  plane.normal.y * lightPosition4D.y +\n\t\t\t  plane.normal.z * lightPosition4D.z +\n\t\t\t  - plane.constant * lightPosition4D.w;\n\n\t\tvar sme = shadowMatrix.elements;\n\n\t\tsme[ 0 ] = dot - lightPosition4D.x * plane.normal.x;\n\t\tsme[ 4 ] = - lightPosition4D.x * plane.normal.y;\n\t\tsme[ 8 ] = - lightPosition4D.x * plane.normal.z;\n\t\tsme[ 12 ] = - lightPosition4D.x * - plane.constant;\n\n\t\tsme[ 1 ] = - lightPosition4D.y * plane.normal.x;\n\t\tsme[ 5 ] = dot - lightPosition4D.y * plane.normal.y;\n\t\tsme[ 9 ] = - lightPosition4D.y * plane.normal.z;\n\t\tsme[ 13 ] = - lightPosition4D.y * - plane.constant;\n\n\t\tsme[ 2 ] = - lightPosition4D.z * plane.normal.x;\n\t\tsme[ 6 ] = - lightPosition4D.z * plane.normal.y;\n\t\tsme[ 10 ] = dot - lightPosition4D.z * plane.normal.z;\n\t\tsme[ 14 ] = - lightPosition4D.z * - plane.constant;\n\n\t\tsme[ 3 ] = - lightPosition4D.w * plane.normal.x;\n\t\tsme[ 7 ] = - lightPosition4D.w * plane.normal.y;\n\t\tsme[ 11 ] = - lightPosition4D.w * plane.normal.z;\n\t\tsme[ 15 ] = dot - lightPosition4D.w * - plane.constant;\n\n\t\tthis.matrix.multiplyMatrices( shadowMatrix, this.meshMatrix );\n\n\t};\n\n}();\n"]}