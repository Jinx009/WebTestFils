{"version":3,"sources":["CinematicCamera.js"],"names":[],"mappings":"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","file":"CinematicCamera-compiled.js","sourcesContent":["console.warn( \"THREE.CinematicCamera: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.CinematicCamera = function ( fov, aspect, near, far ) {\n\n\tTHREE.PerspectiveCamera.call( this, fov, aspect, near, far );\n\n\tthis.type = 'CinematicCamera';\n\n\tthis.postprocessing = { enabled: true };\n\tthis.shaderSettings = {\n\t\trings: 3,\n\t\tsamples: 4\n\t};\n\n\tvar depthShader = THREE.BokehDepthShader;\n\n\tthis.materialDepth = new THREE.ShaderMaterial( {\n\t\tuniforms: depthShader.uniforms,\n\t\tvertexShader: depthShader.vertexShader,\n\t\tfragmentShader: depthShader.fragmentShader\n\t} );\n\n\tthis.materialDepth.uniforms[ 'mNear' ].value = near;\n\tthis.materialDepth.uniforms[ 'mFar' ].value = far;\n\n\t// In case of cinematicCamera, having a default lens set is important\n\tthis.setLens();\n\n\tthis.initPostProcessing();\n\n};\n\nTHREE.CinematicCamera.prototype = Object.create( THREE.PerspectiveCamera.prototype );\nTHREE.CinematicCamera.prototype.constructor = THREE.CinematicCamera;\n\n\n// providing fnumber and coc(Circle of Confusion) as extra arguments\nTHREE.CinematicCamera.prototype.setLens = function ( focalLength, filmGauge, fNumber, coc ) {\n\n\t// In case of cinematicCamera, having a default lens set is important\n\tif ( focalLength === undefined ) focalLength = 35;\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\n\tthis.setFocalLength( focalLength );\n\n\t// if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n\tif ( fNumber === undefined ) fNumber = 8;\n\tif ( coc === undefined ) coc = 0.019;\n\n\tthis.fNumber = fNumber;\n\tthis.coc = coc;\n\n\t// fNumber is focalLength by aperture\n\tthis.aperture = focalLength / this.fNumber;\n\n\t// hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n\tthis.hyperFocal = ( focalLength * focalLength ) / ( this.aperture * this.coc );\n\n};\n\nTHREE.CinematicCamera.prototype.linearize = function ( depth ) {\n\n\tvar zfar = this.far;\n\tvar znear = this.near;\n\treturn - zfar * znear / ( depth * ( zfar - znear ) - zfar );\n\n};\n\nTHREE.CinematicCamera.prototype.smoothstep = function ( near, far, depth ) {\n\n\tvar x = this.saturate( ( depth - near ) / ( far - near ) );\n\treturn x * x * ( 3 - 2 * x );\n\n};\n\nTHREE.CinematicCamera.prototype.saturate = function ( x ) {\n\n\treturn Math.max( 0, Math.min( 1, x ) );\n\n};\n\n// function for focusing at a distance from the camera\nTHREE.CinematicCamera.prototype.focusAt = function ( focusDistance ) {\n\n\tif ( focusDistance === undefined ) focusDistance = 20;\n\n\tvar focalLength = this.getFocalLength();\n\n\t// distance from the camera (normal to frustrum) to focus on\n\tthis.focus = focusDistance;\n\n\t// the nearest point from the camera which is in focus (unused)\n\tthis.nearPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal + ( this.focus - focalLength ) );\n\n\t// the farthest point from the camera which is in focus (unused)\n\tthis.farPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal - ( this.focus - focalLength ) );\n\n\t// the gap or width of the space in which is everything is in focus (unused)\n\tthis.depthOfField = this.farPoint - this.nearPoint;\n\n\t// Considering minimum distance of focus for a standard lens (unused)\n\tif ( this.depthOfField < 0 ) this.depthOfField = 0;\n\n\tthis.sdistance = this.smoothstep( this.near, this.far, this.focus );\n\n\tthis.ldistance = this.linearize( 1 -\tthis.sdistance );\n\n\tthis.postprocessing.bokeh_uniforms[ 'focalDepth' ].value = this.ldistance;\n\n};\n\nTHREE.CinematicCamera.prototype.initPostProcessing = function () {\n\n\tif ( this.postprocessing.enabled ) {\n\n\t\tthis.postprocessing.scene = new THREE.Scene();\n\n\t\tthis.postprocessing.camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2,\twindow.innerHeight / 2, window.innerHeight / - 2, - 10000, 10000 );\n\n\t\tthis.postprocessing.scene.add( this.postprocessing.camera );\n\n\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\t\tthis.postprocessing.rtTextureDepth = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, pars );\n\t\tthis.postprocessing.rtTextureColor = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, pars );\n\n\t\tvar bokeh_shader = THREE.BokehShader;\n\n\t\tthis.postprocessing.bokeh_uniforms = THREE.UniformsUtils.clone( bokeh_shader.uniforms );\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"tColor\" ].value = this.postprocessing.rtTextureColor.texture;\n\t\tthis.postprocessing.bokeh_uniforms[ \"tDepth\" ].value = this.postprocessing.rtTextureDepth.texture;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"manualdof\" ].value = 0;\n\t\tthis.postprocessing.bokeh_uniforms[ \"shaderFocus\" ].value = 0;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"fstop\" ].value = 2.8;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"showFocus\" ].value = 1;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value = 0.1;\n\n\t\t//console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"znear\" ].value = this.near;\n\t\tthis.postprocessing.bokeh_uniforms[ \"zfar\" ].value = this.near;\n\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"textureWidth\" ].value = window.innerWidth;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"textureHeight\" ].value = window.innerHeight;\n\n\t\tthis.postprocessing.materialBokeh = new THREE.ShaderMaterial( {\n\t\t\tuniforms: this.postprocessing.bokeh_uniforms,\n\t\t\tvertexShader: bokeh_shader.vertexShader,\n\t\t\tfragmentShader: bokeh_shader.fragmentShader,\n\t\t\tdefines: {\n\t\t\t\tRINGS: this.shaderSettings.rings,\n\t\t\t\tSAMPLES: this.shaderSettings.samples,\n\t\t\t\tDEPTH_PACKING: 1\n\t\t\t}\n\t\t} );\n\n\t\tthis.postprocessing.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( window.innerWidth, window.innerHeight ), this.postprocessing.materialBokeh );\n\t\tthis.postprocessing.quad.position.z = - 500;\n\t\tthis.postprocessing.scene.add( this.postprocessing.quad );\n\n\t}\n\n};\n\nTHREE.CinematicCamera.prototype.renderCinematic = function ( scene, renderer ) {\n\n\tif ( this.postprocessing.enabled ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.clear();\n\n\t\t// Render scene into texture\n\n\t\tscene.overrideMaterial = null;\n\t\trenderer.setRenderTarget( this.postprocessing.rtTextureColor );\n\t\trenderer.clear();\n\t\trenderer.render( scene, this );\n\n\t\t// Render depth into texture\n\n\t\tscene.overrideMaterial = this.materialDepth;\n\t\trenderer.setRenderTarget( this.postprocessing.rtTextureDepth );\n\t\trenderer.clear();\n\t\trenderer.render( scene, this );\n\n\t\t// Render bokeh composite\n\n\t\trenderer.setRenderTarget( null );\n\t\trenderer.render( this.postprocessing.scene, this.postprocessing.camera );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n};\n"]}