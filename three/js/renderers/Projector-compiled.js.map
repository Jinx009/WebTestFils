{"version":3,"sources":["Projector.js"],"names":[],"mappings":"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","file":"Projector-compiled.js","sourcesContent":["console.warn( \"THREE.Projector: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t\t_vector3 = new THREE.Vector3(),\n\t\t_vector4 = new THREE.Vector4(),\n\n\t\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t\t_boundingBox = new THREE.Box3(),\n\t\t_points3 = new Array( 3 ),\n\n\t\t_viewMatrix = new THREE.Matrix4(),\n\t\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_modelMatrix,\n\t\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_normalMatrix = new THREE.Matrix3(),\n\n\t\t_frustum = new THREE.Frustum(),\n\n\t\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar colors = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tcolors.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t}\n\n\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\tprojectVertex( _vertex );\n\n\t\t}\n\n\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\tnormals.push( x, y, z );\n\n\t\t}\n\n\t\tfunction pushColor( r, g, b ) {\n\n\t\t\tcolors.push( r, g, b );\n\n\t\t}\n\n\t\tfunction pushUv( x, y ) {\n\n\t\t\tuvs.push( x, y );\n\n\t\t}\n\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t}\n\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t}\n\n\t\tfunction pushLine( a, b ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t// Clip\n\n\t\t\tv1.positionScreen.copy( v1.position ).applyMatrix4( _modelViewProjectionMatrix );\n\t\t\tv2.positionScreen.copy( v2.position ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\tif ( clipLine( v1.positionScreen, v2.positionScreen ) === true ) {\n\n\t\t\t\t// Perform the perspective divide\n\t\t\t\tv1.positionScreen.multiplyScalar( 1 / v1.positionScreen.w );\n\t\t\t\tv2.positionScreen.multiplyScalar( 1 / v2.positionScreen.w );\n\n\t\t\t\t_line = getNextLineInPool();\n\t\t\t\t_line.id = object.id;\n\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t_line.z = Math.max( v1.positionScreen.z, v2.positionScreen.z );\n\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t_line.material = object.material;\n\n\t\t\t\tif ( object.material.vertexColors ) {\n\n\t\t\t\t\t_line.vertexColors[ 0 ].fromArray( colors, a * 3 );\n\t\t\t\t\t_line.vertexColors[ 1 ].fromArray( colors, b * 3 );\n\n\t\t\t\t}\n\n\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushTriangle( a, b, c, material ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// face normal\n\t\t\t\t_vector3.subVectors( v3.position, v2.position );\n\t\t\t\t_vector4.subVectors( v1.position, v2.position );\n\t\t\t\t_vector3.cross( _vector4 );\n\t\t\t\t_face.normalModel.copy( _vector3 );\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = material;\n\n\t\t\t\tif ( material.vertexColors ) {\n\n\t\t\t\t\t_face.color.fromArray( colors, a * 3 );\n\n\t\t\t\t}\n\n\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushColor: pushColor,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t};\n\n\t};\n\n\tvar renderList = new RenderList();\n\n\tfunction projectObject( object ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t_renderData.lights.push( object );\n\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction addObject( object ) {\n\n\t\t_object = getNextObjectInPool();\n\t\t_object.id = object.id;\n\t\t_object.object = object;\n\n\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\n\t\t_object.z = _vector3.z;\n\t\t_object.renderOrder = object.renderOrder;\n\n\t\t_renderData.objects.push( _object );\n\n\t}\n\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t_frustum.setFromProjectionMatrix( _viewProjectionMatrix );\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tprojectObject( scene );\n\n\t\tif ( sortObjects === true ) {\n\n\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t}\n\n\t\t//\n\n\t\tvar objects = _renderData.objects;\n\n\t\tfor ( var o = 0, ol = objects.length; o < ol; o ++ ) {\n\n\t\t\tvar object = objects[ o ].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject( object );\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\tvar x = positions[ i ];\n\t\t\t\t\t\tvar y = positions[ i + 1 ];\n\t\t\t\t\t\tvar z = positions[ i + 2 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphAttributes.position;\n\t\t\t\t\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\n\t\t\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t\t\tx += target.getX( i / 3 ) * influence;\n\t\t\t\t\t\t\t\t\ty += target.getY( i / 3 ) * influence;\n\t\t\t\t\t\t\t\t\tz += target.getZ( i / 3 ) * influence;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tx += ( target.getX( i / 3 ) - positions[ i ] ) * influence;\n\t\t\t\t\t\t\t\t\ty += ( target.getY( i / 3 ) - positions[ i + 1 ] ) * influence;\n\t\t\t\t\t\t\t\t\tz += ( target.getZ( i / 3 ) - positions[ i + 2 ] ) * influence;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( x, y, z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\tvar colors = attributes.color.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\n\n\t\t\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t\t\t ? object.material[ group.materialIndex ]\n\t\t\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ], material );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ], material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\n\n\t\t\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t\t\t ? object.material[ group.materialIndex ]\n\t\t\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2, material );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2, material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t ? object.material[ face.materialIndex ]\n\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tvar colors = attributes.color.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif ( object.material.vertexColors ) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Points ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector4.set( vertex.x, vertex.y, vertex.z, 1 );\n\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t_vector4.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ], 1 );\n\t\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( sortElements === true ) {\n\n\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t}\n\n\t\treturn _renderData;\n\n\t};\n\n\tfunction pushPoint( _vector4, object, camera ) {\n\n\t\tvar invW = 1 / _vector4.w;\n\n\t\t_vector4.z *= invW;\n\n\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t_sprite.id = object.id;\n\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t_sprite.z = _vector4.z;\n\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t_sprite.object = object;\n\n\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t_sprite.material = object.material;\n\n\t\t\t_renderData.elements.push( _sprite );\n\n\t\t}\n\n\t}\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push( object );\n\t\t\t_objectPoolLength ++;\n\t\t\t_objectCount ++;\n\t\t\treturn object;\n\n\t\t}\n\n\t\treturn _objectPool[ _objectCount ++ ];\n\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push( vertex );\n\t\t\t_vertexPoolLength ++;\n\t\t\t_vertexCount ++;\n\t\t\treturn vertex;\n\n\t\t}\n\n\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push( face );\n\t\t\t_facePoolLength ++;\n\t\t\t_faceCount ++;\n\t\t\treturn face;\n\n\t\t}\n\n\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push( line );\n\t\t\t_linePoolLength ++;\n\t\t\t_lineCount ++;\n\t\t\treturn line;\n\n\t\t}\n\n\t\treturn _linePool[ _lineCount ++ ];\n\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push( sprite );\n\t\t\t_spritePoolLength ++;\n\t\t\t_spriteCount ++;\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t}\n\n\t//\n\n\tfunction painterSort( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else if ( a.id !== b.id ) {\n\n\t\t\treturn a.id - b.id;\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tfunction clipLine( s1, s2 ) {\n\n\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t\t// Z = -1 and Z = +1, respectively.\n\n\t\t\tbc1near = s1.z + s1.w,\n\t\t\tbc2near = s2.z + s2.w,\n\t\t\tbc1far = - s1.z + s1.w,\n\t\t\tbc2far = - s2.z + s2.w;\n\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t}\n\n\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t}\n\n\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n"]}