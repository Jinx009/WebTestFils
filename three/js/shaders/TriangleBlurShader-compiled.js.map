{"version":3,"sources":["TriangleBlurShader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,mTAAd;AACA;;;;;;;;;;AAUA,MAAM,kBAAN,GAA2B;;AAE1B,WAAU;;AAET,aAAW,EAAE,OAAO,IAAT,EAFF;AAGT,WAAS,EAAE,OAAO,IAAI,MAAM,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,CAAT;;AAHA,EAFgB;;AAS1B,eAAc,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAOb,4EAPa,EASb,GATa,EAWZ,IAXY,CAWN,IAXM,CATY;;AAsB1B,iBAAgB,CAEf,mBAFe,EAIf,yBAJe,EAMf,4BANe,EAOf,qBAPe,EASf,mBATe,EAWf,eAXe,EAaf,4BAbe,EAef,qBAfe;;AAiBf;;AAEA,+BAnBe,EAqBf,yDArBe,EAuBf,sDAvBe,EAwBf,wCAxBe,EA0Bf,kEA1Be,EA2Bf,oBA3Be,EA6Bf,IA7Be,EA+Bf,gCA/Be,EAiCf,GAjCe,EAmCd,IAnCc,CAmCR,IAnCQ;;AAtBU,CAA3B","file":"TriangleBlurShader-compiled.js","sourcesContent":["console.warn( \"THREE.TriangleBlurShader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Triangle blur shader\n * based on glfx.js triangle blur shader\n * https://github.com/evanw/glfx.js\n *\n * A basic blur filter, which convolves the image with a\n * pyramid filter. The pyramid filter is separable and is applied as two\n * perpendicular triangle filters.\n */\n\nTHREE.TriangleBlurShader = {\n\n\tuniforms: {\n\n\t\t\"texture\": { value: null },\n\t\t\"delta\": { value: new THREE.Vector2( 1, 1 ) }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"#include <common>\",\n\n\t\t\"#define ITERATIONS 10.0\",\n\n\t\t\"uniform sampler2D texture;\",\n\t\t\"uniform vec2 delta;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 color = vec4( 0.0 );\",\n\n\t\t\"\tfloat total = 0.0;\",\n\n\t\t// randomize the lookup values to hide the fixed number of samples\n\n\t\t\"\tfloat offset = rand( vUv );\",\n\n\t\t\"\tfor ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\",\n\n\t\t\"\t\tfloat percent = ( t + offset - 0.5 ) / ITERATIONS;\",\n\t\t\"\t\tfloat weight = 1.0 - abs( percent );\",\n\n\t\t\"\t\tcolor += texture2D( texture, vUv + delta * percent ) * weight;\",\n\t\t\"\t\ttotal += weight;\",\n\n\t\t\"\t}\",\n\n\t\t\"\tgl_FragColor = color / total;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n"]}