{"version":3,"sources":["VerticalTiltShiftShader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,wTAAd;AACA;;;;;;;;;AASA,MAAM,uBAAN,GAAgC;;AAE/B,WAAU;;AAET,cAAY,EAAE,OAAO,IAAT,EAFH;AAGT,OAAK,EAAE,OAAO,MAAM,KAAf,EAHI;AAIT,OAAK,EAAE,OAAO,IAAT;;AAJI,EAFqB;;AAU/B,eAAc,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAOb,4EAPa,EASb,GATa,EAWZ,IAXY,CAWN,IAXM,CAViB;;AAuB/B,iBAAgB,CAEf,6BAFe,EAGf,kBAHe,EAIf,kBAJe,EAMf,mBANe,EAQf,eARe,EAUf,0BAVe,EAYf,mCAZe,EAcf,yEAde,EAef,0EAfe,EAgBf,2EAhBe,EAiBf,0EAjBe,EAkBf,+DAlBe,EAmBf,0EAnBe,EAoBf,2EApBe,EAqBf,0EArBe,EAsBf,yEAtBe,EAwBf,sBAxBe,EA0Bf,GA1Be,EA4Bd,IA5Bc,CA4BR,IA5BQ;;AAvBe,CAAhC","file":"VerticalTiltShiftShader-compiled.js","sourcesContent":["console.warn( \"THREE.VerticalTiltShiftShader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n * - \"r\" parameter control where \"focused\" horizontal line lies\n */\n\nTHREE.VerticalTiltShiftShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"v\": { value: 1.0 / 512.0 },\n\t\t\"r\": { value: 0.35 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float v;\",\n\t\t\"uniform float r;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 sum = vec4( 0.0 );\",\n\n\t\t\"\tfloat vv = v * abs( r - vUv.y );\",\n\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\",\n\n\t\t\"\tgl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n"]}