{"version":3,"sources":["ACESFilmicToneMappingShader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,4TAAd;AACA;;;;;;;;AAQA,MAAM,2BAAN,GAAoC;;AAEnC,WAAU;;AAET,cAAY,EAAE,OAAO,IAAT,EAFH;AAGT,cAAY,EAAE,OAAO,GAAT;;AAHH,EAFyB;;AASnC,eAAc,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAOb,4EAPa,EASb,GATa,EAWZ,IAXY,CAWN,IAXM,CATqB;;AAsBnC,iBAAgB,CAEf,0CAFe,EAIf,6BAJe,EAMf,yBANe,EAQf,mBARe,EAUf,+BAVe,EAYf,gDAZe,EAaf,wDAbe,EAcf,gBAde,EAgBf,GAhBe,EAkBf,4CAlBe;;AAoBf;AACA,mCArBe,EAsBf,sCAtBe,EAsByB;AACxC,uCAvBe,EAwBf,qCAxBe,EAyBf,KAzBe;;AA2Bf;AACA,oCA5Be,EA6Bf,yCA7Be,EA6B4B;AAC3C,0CA9Be,EA+Bf,wCA/Be,EAgCf,KAhCe,EAkCf,gCAlCe;;AAoCf;AACA,kCArCe,EAuCf,iCAvCe;;AAyCf;AACA,6BA1Ce,EA4Cf,GA5Ce,EA8Cf,eA9Ce,EAgDf,yCAhDe,EAkDf,6BAlDe,EAkDgB;;AAE/B,mEApDe,EAsDf,GAtDe,EAwDd,IAxDc,CAwDR,IAxDQ;;AAtBmB,CAApC","file":"ACESFilmicToneMappingShader-compiled.js","sourcesContent":["console.warn( \"THREE.ACESFilmicToneMappingShader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * ACES Filmic Tone Mapping Shader by Stephen Hill\n * source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\n *\n * this implementation of ACES is modified to accommodate a brighter viewing environment.\n * the scale factor of 1/0.6 is subjective. see discussion in #19621.\n */\n\nTHREE.ACESFilmicToneMappingShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'exposure': { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvUv = uv;',\n\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t'}'\n\n\t].join( '\\n' ),\n\n\tfragmentShader: [\n\n\t\t'#define saturate(a) clamp( a, 0.0, 1.0 )',\n\n\t\t'uniform sampler2D tDiffuse;',\n\n\t\t'uniform float exposure;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'vec3 RRTAndODTFit( vec3 v ) {',\n\n\t\t'\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;',\n\t\t'\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;',\n\t\t'\treturn a / b;',\n\n\t\t'}',\n\n\t\t'vec3 ACESFilmicToneMapping( vec3 color ) {',\n\n\t\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\t\t'\tconst mat3 ACESInputMat = mat3(',\n\t\t'\t\tvec3( 0.59719, 0.07600, 0.02840 ),', // transposed from source\n\t\t'\t\tvec3( 0.35458, 0.90834, 0.13383 ),',\n\t\t'\t\tvec3( 0.04823, 0.01566, 0.83777 )',\n\t\t'\t);',\n\n\t\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\t\t'\tconst mat3 ACESOutputMat = mat3(',\n\t\t'\t\tvec3(  1.60475, -0.10208, -0.00327 ),', // transposed from source\n\t\t'\t\tvec3( -0.53108,  1.10813, -0.07276 ),',\n\t\t'\t\tvec3( -0.07367, -0.00605,  1.07602 )',\n\t\t'\t);',\n\n\t\t'\tcolor = ACESInputMat * color;',\n\n\t\t// Apply RRT and ODT\n\t\t'\tcolor = RRTAndODTFit( color );',\n\n\t\t'\tcolor = ACESOutputMat * color;',\n\n\t\t// Clamp to [0, 1]\n\t\t'\treturn saturate( color );',\n\n\t\t'}',\n\n\t\t'void main() {',\n\n\t\t'\tvec4 tex = texture2D( tDiffuse, vUv );',\n\n\t\t'\ttex.rgb *= exposure / 0.6;', // pre-exposed, outside of the tone mapping function\n\n\t\t'\tgl_FragColor = vec4( ACESFilmicToneMapping( tex.rgb ), tex.a );',\n\n\t\t'}'\n\n\t].join( '\\n' )\n\n};\n"]}