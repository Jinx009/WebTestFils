{"version":3,"sources":["VignetteShader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,+SAAd;AACA;;;;;;AAMA,MAAM,cAAN,GAAuB;;AAEtB,WAAU;;AAET,cAAY,EAAE,OAAO,IAAT,EAFH;AAGT,YAAU,EAAE,OAAO,GAAT,EAHD;AAIT,cAAY,EAAE,OAAO,GAAT;;AAJH,EAFY;;AAUtB,eAAc,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAOb,4EAPa,EASb,GATa,EAWZ,IAXY,CAWN,IAXM,CAVQ;;AAuBtB,iBAAgB,CAEf,uBAFe,EAGf,yBAHe,EAKf,6BALe,EAOf,mBAPe,EASf,eATe;;AAWf;;AAEA,4CAbe,EAcf,oDAde,EAef,2FAfe;;AAiBf;;;;;;;;;AAUA,IA3Be,EA6Bd,IA7Bc,CA6BR,IA7BQ;;AAvBM,CAAvB","file":"VignetteShader-compiled.js","sourcesContent":["console.warn( \"THREE.VignetteShader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Vignette shader\n * based on PaintEffect postprocess from ro.me\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n */\n\nTHREE.VignetteShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"offset\": { value: 1.0 },\n\t\t\"darkness\": { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float offset;\",\n\t\t\"uniform float darkness;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t// Eskil's vignette\n\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\"\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\n\t\t\"\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n\n\t\t/*\n\t\t// alternative version from glfx.js\n\t\t// this one makes more \"dusty\" look (as opposed to \"burned\")\n\n\t\t\"\tvec4 color = texture2D( tDiffuse, vUv );\",\n\t\t\"\tfloat dist = distance( vUv, vec2( 0.5 ) );\",\n\t\t\"\tcolor.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n\t\t\"\tgl_FragColor = color;\",\n\t\t*/\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n"]}