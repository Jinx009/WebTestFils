{"version":3,"sources":["BokehShader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,4SAAd;AACA;;;;;;AAMA,MAAM,WAAN,GAAoB;;AAEnB,UAAS;AACR,mBAAiB,CADT;AAER,wBAAsB;AAFd,EAFU;;AAOnB,WAAU;;AAET,YAAU,EAAE,OAAO,IAAT,EAFD;AAGT,YAAU,EAAE,OAAO,IAAT,EAHD;AAIT,WAAS,EAAE,OAAO,GAAT,EAJA;AAKT,YAAU,EAAE,OAAO,GAAT,EALD;AAMT,cAAY,EAAE,OAAO,KAAT,EANH;AAOT,aAAW,EAAE,OAAO,IAAT,EAPF;AAQT,cAAY,EAAE,OAAO,GAAT,EARH;AAST,aAAW,EAAE,OAAO,MAAT;;AATF,EAPS;;AAoBnB,eAAc,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAOb,4EAPa,EASb,GATa,EAWZ,IAXY,CAWN,IAXM,CApBK;;AAiCnB,iBAAgB,CACf,mBADe,EAGf,mBAHe,EAKf,2BALe,EAMf,2BANe,EAQf,wBARe,EAQW;AAC1B,0BATe,EASY;;AAE3B,0BAXe,EAYf,wBAZe,EAcf,sBAde,EAef,uBAfe,EAiBf,oBAjBe,EAmBf,kDAnBe,EAoBf,yBApBe,EAqBf,mEArBe,EAsBf,QAtBe,EAuBf,gDAvBe,EAwBf,SAxBe,EAyBf,GAzBe,EA2Bf,0CA3Be,EA4Bf,8BA5Be,EA6Bf,8DA7Be,EA8Bf,QA9Be,EA+Bf,+DA/Be,EAgCf,SAhCe,EAiCf,GAjCe,EAoCf,eApCe,EAsCf,4CAtCe,EAwCf,6CAxCe,EA0Cf,oCA1Ce,EA0CuB;;AAEtC,0EA5Ce,EA8Cf,iCA9Ce,EA+Cf,iCA/Ce,EAgDf,iCAhDe,EAkDf,0BAlDe,EAoDf,sCApDe,EAqDf,2FArDe,EAsDf,2FAtDe,EAuDf,2FAvDe,EAwDf,2FAxDe,EAyDf,2FAzDe,EA0Df,2FA1De,EA2Df,2FA3De,EA4Df,2FA5De,EA6Df,2FA7De,EA8Df,2FA9De,EA+Df,2FA/De,EAgEf,2FAhEe,EAiEf,2FAjEe,EAkEf,2FAlEe,EAmEf,2FAnEe,EAoEf,2FApEe,EAsEf,4FAtEe,EAuEf,4FAvEe,EAwEf,4FAxEe,EAyEf,4FAzEe,EA0Ef,4FA1Ee,EA2Ef,4FA3Ee,EA4Ef,4FA5Ee,EA6Ef,4FA7Ee,EA+Ef,4FA/Ee,EAgFf,4FAhFe,EAiFf,4FAjFe,EAkFf,4FAlFe,EAmFf,4FAnFe,EAoFf,4FApFe,EAqFf,4FArFe,EAsFf,4FAtFe,EAwFf,4FAxFe,EAyFf,4FAzFe,EA0Ff,4FA1Fe,EA2Ff,4FA3Fe,EA4Ff,4FA5Fe,EA6Ff,4FA7Fe,EA8Ff,4FA9Fe,EA+Ff,4FA/Fe,EAiGf,6BAjGe,EAkGf,wBAlGe,EAoGf,GApGe,EAsGd,IAtGc,CAsGR,IAtGQ;;AAjCG,CAApB","file":"BokehShader-compiled.js","sourcesContent":["console.warn( \"THREE.BokehShader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Depth-of-field shader with bokeh\n * ported from GLSL shader by Martins Upitis\n * http://artmartinsh.blogspot.com/2010/02/glsl-lens-blur-filter-with-bokeh.html\n */\n\nTHREE.BokehShader = {\n\n\tdefines: {\n\t\t\"DEPTH_PACKING\": 1,\n\t\t\"PERSPECTIVE_CAMERA\": 1,\n\t},\n\n\tuniforms: {\n\n\t\t\"tColor\": { value: null },\n\t\t\"tDepth\": { value: null },\n\t\t\"focus\": { value: 1.0 },\n\t\t\"aspect\": { value: 1.0 },\n\t\t\"aperture\": { value: 0.025 },\n\t\t\"maxblur\": { value: 0.01 },\n\t\t\"nearClip\": { value: 1.0 },\n\t\t\"farClip\": { value: 1000.0 },\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\t\t\"#include <common>\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"uniform sampler2D tColor;\",\n\t\t\"uniform sampler2D tDepth;\",\n\n\t\t\"uniform float maxblur;\", // max blur amount\n\t\t\"uniform float aperture;\", // aperture - bigger values for shallower depth of field\n\n\t\t\"uniform float nearClip;\",\n\t\t\"uniform float farClip;\",\n\n\t\t\"uniform float focus;\",\n\t\t\"uniform float aspect;\",\n\n\t\t\"#include <packing>\",\n\n\t\t\"float getDepth( const in vec2 screenPosition ) {\",\n\t\t\"\t#if DEPTH_PACKING == 1\",\n\t\t\"\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );\",\n\t\t\"\t#else\",\n\t\t\"\treturn texture2D( tDepth, screenPosition ).x;\",\n\t\t\"\t#endif\",\n\t\t\"}\",\n\n\t\t\"float getViewZ( const in float depth ) {\",\n\t\t\"\t#if PERSPECTIVE_CAMERA == 1\",\n\t\t\"\treturn perspectiveDepthToViewZ( depth, nearClip, farClip );\",\n\t\t\"\t#else\",\n\t\t\"\treturn orthographicDepthToViewZ( depth, nearClip, farClip );\",\n\t\t\"\t#endif\",\n\t\t\"}\",\n\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec2 aspectcorrect = vec2( 1.0, aspect );\",\n\n\t\t\"\tfloat viewZ = getViewZ( getDepth( vUv ) );\",\n\n\t\t\"\tfloat factor = ( focus + viewZ );\", // viewZ is <= 0, so this is a difference equation\n\n\t\t\"\tvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\",\n\n\t\t\"\tvec2 dofblur9 = dofblur * 0.9;\",\n\t\t\"\tvec2 dofblur7 = dofblur * 0.7;\",\n\t\t\"\tvec2 dofblur4 = dofblur * 0.4;\",\n\n\t\t\"\tvec4 col = vec4( 0.0 );\",\n\n\t\t\"\tcol += texture2D( tColor, vUv.xy );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\",\n\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\",\n\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\",\n\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\",\n\t\t\"\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\",\n\n\t\t\"\tgl_FragColor = col / 41.0;\",\n\t\t\"\tgl_FragColor.a = 1.0;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n"]}