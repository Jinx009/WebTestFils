{"version":3,"sources":["FocusShader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,4SAAd;AACA;;;;;;AAMA,MAAM,WAAN,GAAoB;;AAEnB,WAAU;;AAET,cAAY,EAAE,OAAO,IAAT,EAFH;AAGT,iBAAe,EAAE,OAAO,IAAT,EAHN;AAIT,kBAAgB,EAAE,OAAO,IAAT,EAJP;AAKT,oBAAkB,EAAE,OAAO,IAAT,EALT;AAMT,gBAAc,EAAE,OAAO,OAAT;;AANL,EAFS;;AAYnB,eAAc,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAOb,4EAPa,EASb,GATa,EAWZ,IAXY,CAWN,IAXM,CAZK;;AAyBnB,iBAAgB,CAEf,4BAFe,EAGf,6BAHe,EAIf,+BAJe,EAKf,2BALe,EAOf,6BAPe,EASf,mBATe,EAWf,eAXe,EAaf,6BAbe,EAcf,wBAde,EAef,YAfe,EAgBf,iBAhBe,EAkBf,iDAlBe,EAoBf,4CApBe,EAqBf,uCArBe,EAuBf,mEAvBe,EAyBf,gFAzBe,EA2Bf,oFA3Be,EA4Bf,qCA5Be,EA8Bf,oFA9Be,EA+Bf,qCA/Be,EAiCf,qFAjCe,EAkCf,qCAlCe,EAoCf,qFApCe,EAqCf,qCArCe,EAuCf,sFAvCe,EAwCf,qCAxCe,EA0Cf,sFA1Ce,EA2Cf,qCA3Ce,EA6Cf,qFA7Ce,EA8Cf,qCA9Ce,EAgDf,uDAhDe,EAiDf,+FAjDe,EAmDf,gFAnDe,EAqDf,GArDe,EAwDd,IAxDc,CAwDR,IAxDQ;AAzBG,CAApB","file":"FocusShader-compiled.js","sourcesContent":["console.warn( \"THREE.FocusShader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Focus shader\n * based on PaintEffect postprocess from ro.me\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n */\n\nTHREE.FocusShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"screenWidth\": { value: 1024 },\n\t\t\"screenHeight\": { value: 1024 },\n\t\t\"sampleDistance\": { value: 0.94 },\n\t\t\"waveFactor\": { value: 0.00125 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float screenWidth;\",\n\t\t\"uniform float screenHeight;\",\n\t\t\"uniform float sampleDistance;\",\n\t\t\"uniform float waveFactor;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 color, org, tmp, add;\",\n\t\t\"\tfloat sample_dist, f;\",\n\t\t\"\tvec2 vin;\",\n\t\t\"\tvec2 uv = vUv;\",\n\n\t\t\"\tadd = color = org = texture2D( tDiffuse, uv );\",\n\n\t\t\"\tvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\",\n\t\t\"\tsample_dist = dot( vin, vin ) * 2.0;\",\n\n\t\t\"\tf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\",\n\n\t\t\"\tvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\",\n\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\",\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\",\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\",\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\",\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\",\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\",\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\",\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\n\n\t\t\"\tcolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\",\n\t\t\"\tcolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\",\n\n\t\t\"\tgl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\",\n\n\t\t\"}\"\n\n\n\t].join( \"\\n\" )\n};\n"]}