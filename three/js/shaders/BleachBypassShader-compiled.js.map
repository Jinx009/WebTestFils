{"version":3,"sources":["BleachBypassShader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,mTAAd;AACA;;;;;;AAMA,MAAM,kBAAN,GAA2B;;AAE1B,WAAU;;AAET,cAAY,EAAE,OAAO,IAAT,EAFH;AAGT,aAAW,EAAE,OAAO,GAAT;;AAHF,EAFgB;;AAS1B,eAAc,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAOb,4EAPa,EASb,GATa,EAWZ,IAXY,CAWN,IAXM,CATY;;AAsB1B,iBAAgB,CAEf,wBAFe,EAIf,6BAJe,EAMf,mBANe,EAQf,eARe,EAUf,0CAVe,EAYf,2CAZe,EAaf,yCAbe,EAcf,4BAde,EAgBf,2DAhBe,EAkBf,yCAlBe,EAmBf,mEAnBe,EAqBf,8CArBe,EAuBf,+BAvBe,EAwBf,mCAxBe,EAyBf,yCAzBe,EA2Bf,yCA3Be,EA6Bf,GA7Be,EA+Bd,IA/Bc,CA+BR,IA/BQ;;AAtBU,CAA3B","file":"BleachBypassShader-compiled.js","sourcesContent":["console.warn( \"THREE.BleachBypassShader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Bleach bypass shader [http://en.wikipedia.org/wiki/Bleach_bypass]\n * - based on Nvidia example\n * http://developer.download.nvidia.com/shaderlibrary/webpages/shader_library.html#post_bleach_bypass\n */\n\nTHREE.BleachBypassShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\": { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 base = texture2D( tDiffuse, vUv );\",\n\n\t\t\"\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\",\n\t\t\"\tfloat lum = dot( lumCoeff, base.rgb );\",\n\t\t\"\tvec3 blend = vec3( lum );\",\n\n\t\t\"\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\",\n\n\t\t\"\tvec3 result1 = 2.0 * base.rgb * blend;\",\n\t\t\"\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\",\n\n\t\t\"\tvec3 newColor = mix( result1, result2, L );\",\n\n\t\t\"\tfloat A2 = opacity * base.a;\",\n\t\t\"\tvec3 mixRGB = A2 * newColor.rgb;\",\n\t\t\"\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\",\n\n\t\t\"\tgl_FragColor = vec4( mixRGB, base.a );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n"]}