{"version":3,"sources":["HueSaturationShader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,oTAAd;AACA;;;;;;;AAOA,MAAM,mBAAN,GAA4B;;AAE3B,WAAU;;AAET,cAAY,EAAE,OAAO,IAAT,EAFH;AAGT,SAAO,EAAE,OAAO,CAAT,EAHE;AAIT,gBAAc,EAAE,OAAO,CAAT;;AAJL,EAFiB;;AAU3B,eAAc,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAQb,4EARa,EAUb,GAVa,EAYZ,IAZY,CAYN,IAZM,CAVa;;AAwB3B,iBAAgB,CAEf,6BAFe,EAGf,oBAHe,EAIf,2BAJe,EAMf,mBANe,EAQf,eARe,EAUf,6CAVe;;AAYf;AACA,mCAbe,EAcf,wCAde,EAef,qFAfe,EAgBf,wCAhBe,EAiBf,2BAjBe,EAkBf,uCAlBe,EAmBf,uCAnBe,EAoBf,sCApBe,EAqBf,KArBe;;AAuBf;AACA,6EAxBe,EAyBf,0BAzBe,EA0Bf,0FA1Be,EA2Bf,WA3Be,EA4Bf,qEA5Be,EA6Bf,IA7Be,EA+Bf,GA/Be,EAiCd,IAjCc,CAiCR,IAjCQ;;AAxBW,CAA5B","file":"HueSaturationShader-compiled.js","sourcesContent":["console.warn( \"THREE.HueSaturationShader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Hue and saturation adjustment\n * https://github.com/evanw/glfx.js\n * hue: -1 to 1 (-1 is 180 degrees in the negative direction, 0 is no change, etc.\n * saturation: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\n */\n\nTHREE.HueSaturationShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"hue\": { value: 0 },\n\t\t\"saturation\": { value: 0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float hue;\",\n\t\t\"uniform float saturation;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tgl_FragColor = texture2D( tDiffuse, vUv );\",\n\n\t\t// hue\n\t\t\"\tfloat angle = hue * 3.14159265;\",\n\t\t\"\tfloat s = sin(angle), c = cos(angle);\",\n\t\t\"\tvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\",\n\t\t\"\tfloat len = length(gl_FragColor.rgb);\",\n\t\t\"\tgl_FragColor.rgb = vec3(\",\n\t\t\"\t\tdot(gl_FragColor.rgb, weights.xyz),\",\n\t\t\"\t\tdot(gl_FragColor.rgb, weights.zxy),\",\n\t\t\"\t\tdot(gl_FragColor.rgb, weights.yzx)\",\n\t\t\"\t);\",\n\n\t\t// saturation\n\t\t\"\tfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\",\n\t\t\"\tif (saturation > 0.0) {\",\n\t\t\"\t\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\",\n\t\t\"\t} else {\",\n\t\t\"\t\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\",\n\t\t\"\t}\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n"]}