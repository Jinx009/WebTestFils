{"version":3,"sources":["DeviceOrientationControls.js"],"names":[],"mappings":"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","file":"DeviceOrientationControls-compiled.js","sourcesContent":["console.warn( \"THREE.DeviceOrientationControls: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\n/**\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function ( object ) {\n\n\tvar scope = this;\n\tvar changeEvent = { type: \"change\" };\n\tvar EPS = 0.000001;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( 'YXZ' );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alphaOffset = 0; // radians\n\n\tvar onDeviceOrientationChangeEvent = function ( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function () {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function () {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function ( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t};\n\n\t}();\n\n\tthis.connect = function () {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\t// iOS 13+\n\n\t\tif ( window.DeviceOrientationEvent !== undefined && typeof window.DeviceOrientationEvent.requestPermission === 'function' ) {\n\n\t\t\twindow.DeviceOrientationEvent.requestPermission().then( function ( response ) {\n\n\t\t\t\tif ( response == 'granted' ) {\n\n\t\t\t\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\t\t\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\t\t\t}\n\n\t\t\t} ).catch( function ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:', error );\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\t}\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function () {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = ( function () {\n\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function () {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tvar device = scope.deviceOrientation;\n\n\t\t\tif ( device ) {\n\n\t\t\t\tvar alpha = device.alpha ? THREE.MathUtils.degToRad( device.alpha ) + scope.alphaOffset : 0; // Z\n\n\t\t\t\tvar beta = device.beta ? THREE.MathUtils.degToRad( device.beta ) : 0; // X'\n\n\t\t\t\tvar gamma = device.gamma ? THREE.MathUtils.degToRad( device.gamma ) : 0; // Y''\n\n\t\t\t\tvar orient = scope.screenOrientation ? THREE.MathUtils.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\t\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\n\t\t\t\tif ( 8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\n\t} )();\n\n\tthis.dispose = function () {\n\n\t\tscope.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n\nTHREE.DeviceOrientationControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.DeviceOrientationControls.prototype.constructor = THREE.DeviceOrientationControls;\n"]}