{"version":3,"sources":["EffectComposer.js"],"names":[],"mappings":"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","file":"EffectComposer-compiled.js","sourcesContent":["console.warn( \"THREE.EffectComposer: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat\n\t\t};\n\n\t\tvar size = renderer.getSize( new THREE.Vector2() );\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t} else {\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = renderTarget.width;\n\t\tthis._height = renderTarget.height;\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.CopyShader' );\n\n\t}\n\n\tif ( THREE.ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n\tthis.clock = new THREE.Clock();\n\n};\n\nObject.assign( THREE.EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.getContext();\n\t\t\t\t\tvar stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( THREE.MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize( new THREE.Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t},\n\n\tsetPixelRatio: function ( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n} );\n\n\nTHREE.Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( THREE.Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nTHREE.Pass.FullScreenQuad = ( function () {\n\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new THREE.PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new THREE.Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n"]}