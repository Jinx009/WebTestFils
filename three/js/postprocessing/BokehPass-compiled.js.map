{"version":3,"sources":["BokehPass.js"],"names":[],"mappings":"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","file":"BokehPass-compiled.js","sourcesContent":["console.warn( \"THREE.BokehPass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Depth-of-field post-process with bokeh shader\n */\n\nTHREE.BokehPass = function ( scene, camera, params ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tvar focus = ( params.focus !== undefined ) ? params.focus : 1.0;\n\tvar aspect = ( params.aspect !== undefined ) ? params.aspect : camera.aspect;\n\tvar aperture = ( params.aperture !== undefined ) ? params.aperture : 0.025;\n\tvar maxblur = ( params.maxblur !== undefined ) ? params.maxblur : 1.0;\n\n\t// render targets\n\n\tvar width = params.width || window.innerWidth || 1;\n\tvar height = params.height || window.innerHeight || 1;\n\n\tthis.renderTargetDepth = new THREE.WebGLRenderTarget( width, height, {\n\t\tminFilter: THREE.NearestFilter,\n\t\tmagFilter: THREE.NearestFilter\n\t} );\n\n\tthis.renderTargetDepth.texture.name = \"BokehPass.depth\";\n\n\t// depth material\n\n\tthis.materialDepth = new THREE.MeshDepthMaterial();\n\tthis.materialDepth.depthPacking = THREE.RGBADepthPacking;\n\tthis.materialDepth.blending = THREE.NoBlending;\n\n\t// bokeh material\n\n\tif ( THREE.BokehShader === undefined ) {\n\n\t\tconsole.error( \"THREE.BokehPass relies on THREE.BokehShader\" );\n\n\t}\n\n\tvar bokehShader = THREE.BokehShader;\n\tvar bokehUniforms = THREE.UniformsUtils.clone( bokehShader.uniforms );\n\n\tbokehUniforms[ \"tDepth\" ].value = this.renderTargetDepth.texture;\n\n\tbokehUniforms[ \"focus\" ].value = focus;\n\tbokehUniforms[ \"aspect\" ].value = aspect;\n\tbokehUniforms[ \"aperture\" ].value = aperture;\n\tbokehUniforms[ \"maxblur\" ].value = maxblur;\n\tbokehUniforms[ \"nearClip\" ].value = camera.near;\n\tbokehUniforms[ \"farClip\" ].value = camera.far;\n\n\tthis.materialBokeh = new THREE.ShaderMaterial( {\n\t\tdefines: Object.assign( {}, bokehShader.defines ),\n\t\tuniforms: bokehUniforms,\n\t\tvertexShader: bokehShader.vertexShader,\n\t\tfragmentShader: bokehShader.fragmentShader\n\t} );\n\n\tthis.uniforms = bokehUniforms;\n\tthis.needsSwap = false;\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.materialBokeh );\n\n\tthis.oldClearColor = new THREE.Color();\n\n};\n\nTHREE.BokehPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.BokehPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n\t\t// Render depth into texture\n\n\t\tthis.scene.overrideMaterial = this.materialDepth;\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tvar oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( 0xffffff );\n\t\trenderer.setClearAlpha( 1.0 );\n\t\trenderer.setRenderTarget( this.renderTargetDepth );\n\t\trenderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// Render bokeh composite\n\n\t\tthis.uniforms[ \"tColor\" ].value = readBuffer.texture;\n\t\tthis.uniforms[ \"nearClip\" ].value = this.camera.near;\n\t\tthis.uniforms[ \"farClip\" ].value = this.camera.far;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.setClearColor( this.oldClearColor );\n\t\trenderer.setClearAlpha( oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n"]}