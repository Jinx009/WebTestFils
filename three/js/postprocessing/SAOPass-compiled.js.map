{"version":3,"sources":["SAOPass.js"],"names":[],"mappings":"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","file":"SAOPass-compiled.js","sourcesContent":["console.warn( \"THREE.SAOPass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * SAO implementation inspired from bhouston previous SAO work\n */\n\nTHREE.SAOPass = function ( scene, camera, depthTexture, useNormals, resolution ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.supportsDepthTextureExtension = ( depthTexture !== undefined ) ? depthTexture : false;\n\tthis.supportsNormalTexture = ( useNormals !== undefined ) ? useNormals : false;\n\n\tthis.originalClearColor = new THREE.Color();\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.params = {\n\t\toutput: 0,\n\t\tsaoBias: 0.5,\n\t\tsaoIntensity: 0.18,\n\t\tsaoScale: 1,\n\t\tsaoKernelRadius: 100,\n\t\tsaoMinResolution: 0,\n\t\tsaoBlur: true,\n\t\tsaoBlurRadius: 8,\n\t\tsaoBlurStdDev: 4,\n\t\tsaoBlurDepthCutoff: 0.01\n\t};\n\n\tthis.resolution = ( resolution !== undefined ) ? new THREE.Vector2( resolution.x, resolution.y ) : new THREE.Vector2( 256, 256 );\n\n\tthis.saoRenderTarget = new THREE.WebGLRenderTarget( this.resolution.x, this.resolution.y, {\n\t\tminFilter: THREE.LinearFilter,\n\t\tmagFilter: THREE.LinearFilter,\n\t\tformat: THREE.RGBAFormat\n\t} );\n\tthis.blurIntermediateRenderTarget = this.saoRenderTarget.clone();\n\tthis.beautyRenderTarget = this.saoRenderTarget.clone();\n\n\tthis.normalRenderTarget = new THREE.WebGLRenderTarget( this.resolution.x, this.resolution.y, {\n\t\tminFilter: THREE.NearestFilter,\n\t\tmagFilter: THREE.NearestFilter,\n\t\tformat: THREE.RGBAFormat\n\t} );\n\tthis.depthRenderTarget = this.normalRenderTarget.clone();\n\n\tif ( this.supportsDepthTextureExtension ) {\n\n\t\tvar depthTexture = new THREE.DepthTexture();\n\t\tdepthTexture.type = THREE.UnsignedShortType;\n\t\tdepthTexture.minFilter = THREE.NearestFilter;\n\t\tdepthTexture.maxFilter = THREE.NearestFilter;\n\n\t\tthis.beautyRenderTarget.depthTexture = depthTexture;\n\t\tthis.beautyRenderTarget.depthBuffer = true;\n\n\t}\n\n\tthis.depthMaterial = new THREE.MeshDepthMaterial();\n\tthis.depthMaterial.depthPacking = THREE.RGBADepthPacking;\n\tthis.depthMaterial.blending = THREE.NoBlending;\n\n\tthis.normalMaterial = new THREE.MeshNormalMaterial();\n\tthis.normalMaterial.blending = THREE.NoBlending;\n\n\tif ( THREE.SAOShader === undefined ) {\n\n\t\tconsole.error( 'THREE.SAOPass relies on THREE.SAOShader' );\n\n\t}\n\n\tthis.saoMaterial = new THREE.ShaderMaterial( {\n\t\tdefines: Object.assign( {}, THREE.SAOShader.defines ),\n\t\tfragmentShader: THREE.SAOShader.fragmentShader,\n\t\tvertexShader: THREE.SAOShader.vertexShader,\n\t\tuniforms: THREE.UniformsUtils.clone( THREE.SAOShader.uniforms )\n\t} );\n\tthis.saoMaterial.extensions.derivatives = true;\n\tthis.saoMaterial.defines[ 'DEPTH_PACKING' ] = this.supportsDepthTextureExtension ? 0 : 1;\n\tthis.saoMaterial.defines[ 'NORMAL_TEXTURE' ] = this.supportsNormalTexture ? 1 : 0;\n\tthis.saoMaterial.defines[ 'PERSPECTIVE_CAMERA' ] = this.camera.isPerspectiveCamera ? 1 : 0;\n\tthis.saoMaterial.uniforms[ 'tDepth' ].value = ( this.supportsDepthTextureExtension ) ? depthTexture : this.depthRenderTarget.texture;\n\tthis.saoMaterial.uniforms[ 'tNormal' ].value = this.normalRenderTarget.texture;\n\tthis.saoMaterial.uniforms[ 'size' ].value.set( this.resolution.x, this.resolution.y );\n\tthis.saoMaterial.uniforms[ 'cameraInverseProjectionMatrix' ].value.getInverse( this.camera.projectionMatrix );\n\tthis.saoMaterial.uniforms[ 'cameraProjectionMatrix' ].value = this.camera.projectionMatrix;\n\tthis.saoMaterial.blending = THREE.NoBlending;\n\n\tif ( THREE.DepthLimitedBlurShader === undefined ) {\n\n\t\tconsole.error( 'THREE.SAOPass relies on THREE.DepthLimitedBlurShader' );\n\n\t}\n\n\tthis.vBlurMaterial = new THREE.ShaderMaterial( {\n\t\tuniforms: THREE.UniformsUtils.clone( THREE.DepthLimitedBlurShader.uniforms ),\n\t\tdefines: Object.assign( {}, THREE.DepthLimitedBlurShader.defines ),\n\t\tvertexShader: THREE.DepthLimitedBlurShader.vertexShader,\n\t\tfragmentShader: THREE.DepthLimitedBlurShader.fragmentShader\n\t} );\n\tthis.vBlurMaterial.defines[ 'DEPTH_PACKING' ] = this.supportsDepthTextureExtension ? 0 : 1;\n\tthis.vBlurMaterial.defines[ 'PERSPECTIVE_CAMERA' ] = this.camera.isPerspectiveCamera ? 1 : 0;\n\tthis.vBlurMaterial.uniforms[ 'tDiffuse' ].value = this.saoRenderTarget.texture;\n\tthis.vBlurMaterial.uniforms[ 'tDepth' ].value = ( this.supportsDepthTextureExtension ) ? depthTexture : this.depthRenderTarget.texture;\n\tthis.vBlurMaterial.uniforms[ 'size' ].value.set( this.resolution.x, this.resolution.y );\n\tthis.vBlurMaterial.blending = THREE.NoBlending;\n\n\tthis.hBlurMaterial = new THREE.ShaderMaterial( {\n\t\tuniforms: THREE.UniformsUtils.clone( THREE.DepthLimitedBlurShader.uniforms ),\n\t\tdefines: Object.assign( {}, THREE.DepthLimitedBlurShader.defines ),\n\t\tvertexShader: THREE.DepthLimitedBlurShader.vertexShader,\n\t\tfragmentShader: THREE.DepthLimitedBlurShader.fragmentShader\n\t} );\n\tthis.hBlurMaterial.defines[ 'DEPTH_PACKING' ] = this.supportsDepthTextureExtension ? 0 : 1;\n\tthis.hBlurMaterial.defines[ 'PERSPECTIVE_CAMERA' ] = this.camera.isPerspectiveCamera ? 1 : 0;\n\tthis.hBlurMaterial.uniforms[ 'tDiffuse' ].value = this.blurIntermediateRenderTarget.texture;\n\tthis.hBlurMaterial.uniforms[ 'tDepth' ].value = ( this.supportsDepthTextureExtension ) ? depthTexture : this.depthRenderTarget.texture;\n\tthis.hBlurMaterial.uniforms[ 'size' ].value.set( this.resolution.x, this.resolution.y );\n\tthis.hBlurMaterial.blending = THREE.NoBlending;\n\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.SAOPass relies on THREE.CopyShader' );\n\n\t}\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\t\tuniforms: THREE.UniformsUtils.clone( THREE.CopyShader.uniforms ),\n\t\tvertexShader: THREE.CopyShader.vertexShader,\n\t\tfragmentShader: THREE.CopyShader.fragmentShader,\n\t\tblending: THREE.NoBlending\n\t} );\n\tthis.materialCopy.transparent = true;\n\tthis.materialCopy.depthTest = false;\n\tthis.materialCopy.depthWrite = false;\n\tthis.materialCopy.blending = THREE.CustomBlending;\n\tthis.materialCopy.blendSrc = THREE.DstColorFactor;\n\tthis.materialCopy.blendDst = THREE.ZeroFactor;\n\tthis.materialCopy.blendEquation = THREE.AddEquation;\n\tthis.materialCopy.blendSrcAlpha = THREE.DstAlphaFactor;\n\tthis.materialCopy.blendDstAlpha = THREE.ZeroFactor;\n\tthis.materialCopy.blendEquationAlpha = THREE.AddEquation;\n\n\tif ( THREE.UnpackDepthRGBAShader === undefined ) {\n\n\t\tconsole.error( 'THREE.SAOPass relies on THREE.UnpackDepthRGBAShader' );\n\n\t}\n\n\tthis.depthCopy = new THREE.ShaderMaterial( {\n\t\tuniforms: THREE.UniformsUtils.clone( THREE.UnpackDepthRGBAShader.uniforms ),\n\t\tvertexShader: THREE.UnpackDepthRGBAShader.vertexShader,\n\t\tfragmentShader: THREE.UnpackDepthRGBAShader.fragmentShader,\n\t\tblending: THREE.NoBlending\n\t} );\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( null );\n\n};\n\nTHREE.SAOPass.OUTPUT = {\n\t'Beauty': 1,\n\t'Default': 0,\n\t'SAO': 2,\n\t'Depth': 3,\n\t'Normal': 4\n};\n\nTHREE.SAOPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\tconstructor: THREE.SAOPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n\t\t// Rendering readBuffer first when rendering to screen\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.materialCopy.blending = THREE.NoBlending;\n\t\t\tthis.materialCopy.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\t\tthis.materialCopy.needsUpdate = true;\n\t\t\tthis.renderPass( renderer, this.materialCopy, null );\n\n\t\t}\n\n\t\tif ( this.params.output === 1 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setRenderTarget( this.depthRenderTarget );\n\t\trenderer.clear();\n\n\t\tthis.saoMaterial.uniforms[ 'bias' ].value = this.params.saoBias;\n\t\tthis.saoMaterial.uniforms[ 'intensity' ].value = this.params.saoIntensity;\n\t\tthis.saoMaterial.uniforms[ 'scale' ].value = this.params.saoScale;\n\t\tthis.saoMaterial.uniforms[ 'kernelRadius' ].value = this.params.saoKernelRadius;\n\t\tthis.saoMaterial.uniforms[ 'minResolution' ].value = this.params.saoMinResolution;\n\t\tthis.saoMaterial.uniforms[ 'cameraNear' ].value = this.camera.near;\n\t\tthis.saoMaterial.uniforms[ 'cameraFar' ].value = this.camera.far;\n\t\t// this.saoMaterial.uniforms['randomSeed'].value = Math.random();\n\n\t\tvar depthCutoff = this.params.saoBlurDepthCutoff * ( this.camera.far - this.camera.near );\n\t\tthis.vBlurMaterial.uniforms[ 'depthCutoff' ].value = depthCutoff;\n\t\tthis.hBlurMaterial.uniforms[ 'depthCutoff' ].value = depthCutoff;\n\n\t\tthis.vBlurMaterial.uniforms[ 'cameraNear' ].value = this.camera.near;\n\t\tthis.vBlurMaterial.uniforms[ 'cameraFar' ].value = this.camera.far;\n\t\tthis.hBlurMaterial.uniforms[ 'cameraNear' ].value = this.camera.near;\n\t\tthis.hBlurMaterial.uniforms[ 'cameraFar' ].value = this.camera.far;\n\n\t\tthis.params.saoBlurRadius = Math.floor( this.params.saoBlurRadius );\n\t\tif ( ( this.prevStdDev !== this.params.saoBlurStdDev ) || ( this.prevNumSamples !== this.params.saoBlurRadius ) ) {\n\n\t\t\tTHREE.BlurShaderUtils.configure( this.vBlurMaterial, this.params.saoBlurRadius, this.params.saoBlurStdDev, new THREE.Vector2( 0, 1 ) );\n\t\t\tTHREE.BlurShaderUtils.configure( this.hBlurMaterial, this.params.saoBlurRadius, this.params.saoBlurStdDev, new THREE.Vector2( 1, 0 ) );\n\t\t\tthis.prevStdDev = this.params.saoBlurStdDev;\n\t\t\tthis.prevNumSamples = this.params.saoBlurRadius;\n\n\t\t}\n\n\t\t// Rendering scene to depth texture\n\t\trenderer.setClearColor( 0x000000 );\n\t\trenderer.setRenderTarget( this.beautyRenderTarget );\n\t\trenderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// Re-render scene if depth texture extension is not supported\n\t\tif ( ! this.supportsDepthTextureExtension ) {\n\n\t\t\t// Clear rule : far clipping plane in both RGBA and Basic encoding\n\t\t\tthis.renderOverride( renderer, this.depthMaterial, this.depthRenderTarget, 0x000000, 1.0 );\n\n\t\t}\n\n\t\tif ( this.supportsNormalTexture ) {\n\n\t\t\t// Clear rule : default normal is facing the camera\n\t\t\tthis.renderOverride( renderer, this.normalMaterial, this.normalRenderTarget, 0x7777ff, 1.0 );\n\n\t\t}\n\n\t\t// Rendering SAO texture\n\t\tthis.renderPass( renderer, this.saoMaterial, this.saoRenderTarget, 0xffffff, 1.0 );\n\n\t\t// Blurring SAO texture\n\t\tif ( this.params.saoBlur ) {\n\n\t\t\tthis.renderPass( renderer, this.vBlurMaterial, this.blurIntermediateRenderTarget, 0xffffff, 1.0 );\n\t\t\tthis.renderPass( renderer, this.hBlurMaterial, this.saoRenderTarget, 0xffffff, 1.0 );\n\n\t\t}\n\n\t\tvar outputMaterial = this.materialCopy;\n\t\t// Setting up SAO rendering\n\t\tif ( this.params.output === 3 ) {\n\n\t\t\tif ( this.supportsDepthTextureExtension ) {\n\n\t\t\t\tthis.materialCopy.uniforms[ 'tDiffuse' ].value = this.beautyRenderTarget.depthTexture;\n\t\t\t\tthis.materialCopy.needsUpdate = true;\n\n\t\t\t} else {\n\n\t\t\t\tthis.depthCopy.uniforms[ 'tDiffuse' ].value = this.depthRenderTarget.texture;\n\t\t\t\tthis.depthCopy.needsUpdate = true;\n\t\t\t\toutputMaterial = this.depthCopy;\n\n\t\t\t}\n\n\t\t} else if ( this.params.output === 4 ) {\n\n\t\t\tthis.materialCopy.uniforms[ 'tDiffuse' ].value = this.normalRenderTarget.texture;\n\t\t\tthis.materialCopy.needsUpdate = true;\n\n\t\t} else {\n\n\t\t\tthis.materialCopy.uniforms[ 'tDiffuse' ].value = this.saoRenderTarget.texture;\n\t\t\tthis.materialCopy.needsUpdate = true;\n\n\t\t}\n\n\t\t// Blending depends on output, only want a CustomBlending when showing SAO\n\t\tif ( this.params.output === 0 ) {\n\n\t\t\toutputMaterial.blending = THREE.CustomBlending;\n\n\t\t} else {\n\n\t\t\toutputMaterial.blending = THREE.NoBlending;\n\n\t\t}\n\n\t\t// Rendering SAOPass result on top of previous pass\n\t\tthis.renderPass( renderer, outputMaterial, this.renderToScreen ? null : readBuffer );\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\trenderPass: function ( renderer, passMaterial, renderTarget, clearColor, clearAlpha ) {\n\n\t\t// save original state\n\t\tthis.originalClearColor.copy( renderer.getClearColor() );\n\t\tvar originalClearAlpha = renderer.getClearAlpha();\n\t\tvar originalAutoClear = renderer.autoClear;\n\n\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t// setup pass state\n\t\trenderer.autoClear = false;\n\t\tif ( ( clearColor !== undefined ) && ( clearColor !== null ) ) {\n\n\t\t\trenderer.setClearColor( clearColor );\n\t\t\trenderer.setClearAlpha( clearAlpha || 0.0 );\n\t\t\trenderer.clear();\n\n\t\t}\n\n\t\tthis.fsQuad.material = passMaterial;\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// restore original state\n\t\trenderer.autoClear = originalAutoClear;\n\t\trenderer.setClearColor( this.originalClearColor );\n\t\trenderer.setClearAlpha( originalClearAlpha );\n\n\t},\n\n\trenderOverride: function ( renderer, overrideMaterial, renderTarget, clearColor, clearAlpha ) {\n\n\t\tthis.originalClearColor.copy( renderer.getClearColor() );\n\t\tvar originalClearAlpha = renderer.getClearAlpha();\n\t\tvar originalAutoClear = renderer.autoClear;\n\n\t\trenderer.setRenderTarget( renderTarget );\n\t\trenderer.autoClear = false;\n\n\t\tclearColor = overrideMaterial.clearColor || clearColor;\n\t\tclearAlpha = overrideMaterial.clearAlpha || clearAlpha;\n\t\tif ( ( clearColor !== undefined ) && ( clearColor !== null ) ) {\n\n\t\t\trenderer.setClearColor( clearColor );\n\t\t\trenderer.setClearAlpha( clearAlpha || 0.0 );\n\t\t\trenderer.clear();\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = overrideMaterial;\n\t\trenderer.render( this.scene, this.camera );\n\t\tthis.scene.overrideMaterial = null;\n\n\t\t// restore original state\n\t\trenderer.autoClear = originalAutoClear;\n\t\trenderer.setClearColor( this.originalClearColor );\n\t\trenderer.setClearAlpha( originalClearAlpha );\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.beautyRenderTarget.setSize( width, height );\n\t\tthis.saoRenderTarget.setSize( width, height );\n\t\tthis.blurIntermediateRenderTarget.setSize( width, height );\n\t\tthis.normalRenderTarget.setSize( width, height );\n\t\tthis.depthRenderTarget.setSize( width, height );\n\n\t\tthis.saoMaterial.uniforms[ 'size' ].value.set( width, height );\n\t\tthis.saoMaterial.uniforms[ 'cameraInverseProjectionMatrix' ].value.getInverse( this.camera.projectionMatrix );\n\t\tthis.saoMaterial.uniforms[ 'cameraProjectionMatrix' ].value = this.camera.projectionMatrix;\n\t\tthis.saoMaterial.needsUpdate = true;\n\n\t\tthis.vBlurMaterial.uniforms[ 'size' ].value.set( width, height );\n\t\tthis.vBlurMaterial.needsUpdate = true;\n\n\t\tthis.hBlurMaterial.uniforms[ 'size' ].value.set( width, height );\n\t\tthis.hBlurMaterial.needsUpdate = true;\n\n\t}\n\n} );\n"]}