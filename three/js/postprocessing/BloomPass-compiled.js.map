{"version":3,"sources":["BloomPass.js"],"names":[],"mappings":"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","file":"BloomPass-compiled.js","sourcesContent":["console.warn( \"THREE.BloomPass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\tTHREE.Pass.call( this );\n\n\tstrength = ( strength !== undefined ) ? strength : 1;\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t// render targets\n\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\n\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetX.texture.name = \"BloomPass.x\";\n\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetY.texture.name = \"BloomPass.y\";\n\n\t// copy material\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\ttransparent: true\n\n\t} );\n\n\t// convolution material\n\n\tif ( THREE.ConvolutionShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\tvar convolutionShader = THREE.ConvolutionShader;\n\n\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.convolutionUniforms,\n\t\tvertexShader: convolutionShader.vertexShader,\n\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\tdefines: {\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t}\n\n\t} );\n\n\tthis.needsSwap = false;\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( null );\n\n};\n\nTHREE.BloomPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.BloomPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\tthis.fsQuad.material = this.materialConvolution;\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\trenderer.setRenderTarget( this.renderTargetX );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\n\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX.texture;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\trenderer.setRenderTarget( this.renderTargetY );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Render original scene with superimposed blur to texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY.texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t}\n\n} );\n\nTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\nTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n"]}