{"version":3,"sources":["AfterimagePass.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,+SAAd;;AAEA,MAAM,cAAN,GAAuB,UAAW,IAAX,EAAkB;;AAExC,OAAM,IAAN,CAAW,IAAX,CAAiB,IAAjB;;AAEA,KAAK,MAAM,gBAAN,KAA2B,SAAhC,EACC,QAAQ,KAAR,CAAe,uDAAf;;AAED,MAAK,MAAL,GAAc,MAAM,gBAApB;;AAEA,MAAK,QAAL,GAAgB,MAAM,aAAN,CAAoB,KAApB,CAA2B,KAAK,MAAL,CAAY,QAAvC,CAAhB;;AAEA,MAAK,QAAL,CAAe,MAAf,EAAwB,KAAxB,GAAgC,SAAS,SAAT,GAAqB,IAArB,GAA4B,IAA5D;;AAEA,MAAK,WAAL,GAAmB,IAAI,MAAM,iBAAV,CAA6B,OAAO,UAApC,EAAgD,OAAO,WAAvD,EAAoE;;AAEtF,aAAW,MAAM,YAFqE;AAGtF,aAAW,MAAM,aAHqE;AAItF,UAAQ,MAAM;;AAJwE,EAApE,CAAnB;;AAQA,MAAK,UAAL,GAAkB,IAAI,MAAM,iBAAV,CAA6B,OAAO,UAApC,EAAgD,OAAO,WAAvD,EAAoE;;AAErF,aAAW,MAAM,YAFoE;AAGrF,aAAW,MAAM,aAHoE;AAIrF,UAAQ,MAAM;;AAJuE,EAApE,CAAlB;;AAQA,MAAK,cAAL,GAAsB,IAAI,MAAM,cAAV,CAA0B;;AAE/C,YAAU,KAAK,QAFgC;AAG/C,gBAAc,KAAK,MAAL,CAAY,YAHqB;AAI/C,kBAAgB,KAAK,MAAL,CAAY;;AAJmB,EAA1B,CAAtB;;AAQA,MAAK,UAAL,GAAkB,IAAI,MAAM,IAAN,CAAW,cAAf,CAA+B,KAAK,cAApC,CAAlB;;AAEA,KAAI,WAAW,IAAI,MAAM,iBAAV,EAAf;AACA,MAAK,UAAL,GAAkB,IAAI,MAAM,IAAN,CAAW,cAAf,CAA+B,QAA/B,CAAlB;AAEA,CA1CD;;AA4CA,MAAM,cAAN,CAAqB,SAArB,GAAiC,OAAO,MAAP,CAAe,OAAO,MAAP,CAAe,MAAM,IAAN,CAAW,SAA1B,CAAf,EAAsD;;AAEtF,cAAa,MAAM,cAFmE;;AAItF,SAAQ,UAAW,QAAX,EAAqB,WAArB,EAAkC,UAAlC,EAA+C;;AAEtD,OAAK,QAAL,CAAe,MAAf,EAAwB,KAAxB,GAAgC,KAAK,UAAL,CAAgB,OAAhD;AACA,OAAK,QAAL,CAAe,MAAf,EAAwB,KAAxB,GAAgC,WAAW,OAA3C;;AAEA,WAAS,eAAT,CAA0B,KAAK,WAA/B;AACA,OAAK,UAAL,CAAgB,MAAhB,CAAwB,QAAxB;;AAEA,OAAK,UAAL,CAAgB,QAAhB,CAAyB,GAAzB,GAA+B,KAAK,WAAL,CAAiB,OAAhD;;AAEA,MAAK,KAAK,cAAV,EAA2B;;AAE1B,YAAS,eAAT,CAA0B,IAA1B;AACA,QAAK,UAAL,CAAgB,MAAhB,CAAwB,QAAxB;AAEA,GALD,MAKO;;AAEN,YAAS,eAAT,CAA0B,WAA1B;;AAEA,OAAK,KAAK,KAAV,EAAkB,SAAS,KAAT;;AAElB,QAAK,UAAL,CAAgB,MAAhB,CAAwB,QAAxB;AAEA;;AAED;AACA,MAAI,OAAO,KAAK,UAAhB;AACA,OAAK,UAAL,GAAkB,KAAK,WAAvB;AACA,OAAK,WAAL,GAAmB,IAAnB;AACA;AAEA,EAnCqF;;AAqCtF,UAAS,UAAW,KAAX,EAAkB,MAAlB,EAA2B;;AAEnC,OAAK,WAAL,CAAiB,OAAjB,CAA0B,KAA1B,EAAiC,MAAjC;AACA,OAAK,UAAL,CAAgB,OAAhB,CAAyB,KAAzB,EAAgC,MAAhC;AAEA;;AA1CqF,CAAtD,CAAjC","file":"AfterimagePass-compiled.js","sourcesContent":["console.warn( \"THREE.AfterimagePass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.AfterimagePass = function ( damp ) {\n\n\tTHREE.Pass.call( this );\n\n\tif ( THREE.AfterimageShader === undefined )\n\t\tconsole.error( \"THREE.AfterimagePass relies on THREE.AfterimageShader\" );\n\n\tthis.shader = THREE.AfterimageShader;\n\n\tthis.uniforms = THREE.UniformsUtils.clone( this.shader.uniforms );\n\n\tthis.uniforms[ \"damp\" ].value = damp !== undefined ? damp : 0.96;\n\n\tthis.textureComp = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, {\n\n\t\tminFilter: THREE.LinearFilter,\n\t\tmagFilter: THREE.NearestFilter,\n\t\tformat: THREE.RGBAFormat\n\n\t} );\n\n\tthis.textureOld = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, {\n\n\t\tminFilter: THREE.LinearFilter,\n\t\tmagFilter: THREE.NearestFilter,\n\t\tformat: THREE.RGBAFormat\n\n\t} );\n\n\tthis.shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: this.shader.vertexShader,\n\t\tfragmentShader: this.shader.fragmentShader\n\n\t} );\n\n\tthis.compFsQuad = new THREE.Pass.FullScreenQuad( this.shaderMaterial );\n\n\tvar material = new THREE.MeshBasicMaterial();\n\tthis.copyFsQuad = new THREE.Pass.FullScreenQuad( material );\n\n};\n\nTHREE.AfterimagePass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.AfterimagePass,\n\n\trender: function ( renderer, writeBuffer, readBuffer ) {\n\n\t\tthis.uniforms[ \"tOld\" ].value = this.textureOld.texture;\n\t\tthis.uniforms[ \"tNew\" ].value = readBuffer.texture;\n\n\t\trenderer.setRenderTarget( this.textureComp );\n\t\tthis.compFsQuad.render( renderer );\n\n\t\tthis.copyFsQuad.material.map = this.textureComp.texture;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.copyFsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\n\t\t\tif ( this.clear ) renderer.clear();\n\n\t\t\tthis.copyFsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Swap buffers.\n\t\tvar temp = this.textureOld;\n\t\tthis.textureOld = this.textureComp;\n\t\tthis.textureComp = temp;\n\t\t// Now textureOld contains the latest image, ready for the next frame.\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.textureComp.setSize( width, height );\n\t\tthis.textureOld.setSize( width, height );\n\n\t}\n\n} );\n"]}