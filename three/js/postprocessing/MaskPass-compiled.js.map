{"version":3,"sources":["MaskPass.js"],"names":[],"mappings":"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","file":"MaskPass-compiled.js","sourcesContent":["console.warn( \"THREE.MaskPass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.getContext();\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n} );\n\n\nTHREE.ClearMaskPass = function () {\n\n\tTHREE.Pass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nTHREE.ClearMaskPass.prototype = Object.create( THREE.Pass.prototype );\n\nObject.assign( THREE.ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n"]}