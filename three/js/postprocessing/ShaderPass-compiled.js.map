{"version":3,"sources":["ShaderPass.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,2SAAd;;AAEA,MAAM,UAAN,GAAmB,UAAW,MAAX,EAAmB,SAAnB,EAA+B;;AAEjD,OAAM,IAAN,CAAW,IAAX,CAAiB,IAAjB;;AAEA,MAAK,SAAL,GAAmB,cAAc,SAAhB,GAA8B,SAA9B,GAA0C,UAA3D;;AAEA,KAAK,kBAAkB,MAAM,cAA7B,EAA8C;;AAE7C,OAAK,QAAL,GAAgB,OAAO,QAAvB;;AAEA,OAAK,QAAL,GAAgB,MAAhB;AAEA,EAND,MAMO,IAAK,MAAL,EAAc;;AAEpB,OAAK,QAAL,GAAgB,MAAM,aAAN,CAAoB,KAApB,CAA2B,OAAO,QAAlC,CAAhB;;AAEA,OAAK,QAAL,GAAgB,IAAI,MAAM,cAAV,CAA0B;;AAEzC,YAAS,OAAO,MAAP,CAAe,EAAf,EAAmB,OAAO,OAA1B,CAFgC;AAGzC,aAAU,KAAK,QAH0B;AAIzC,iBAAc,OAAO,YAJoB;AAKzC,mBAAgB,OAAO;;AALkB,GAA1B,CAAhB;AASA;;AAED,MAAK,MAAL,GAAc,IAAI,MAAM,IAAN,CAAW,cAAf,CAA+B,KAAK,QAApC,CAAd;AAEA,CA7BD;;AA+BA,MAAM,UAAN,CAAiB,SAAjB,GAA6B,OAAO,MAAP,CAAe,OAAO,MAAP,CAAe,MAAM,IAAN,CAAW,SAA1B,CAAf,EAAsD;;AAElF,cAAa,MAAM,UAF+D;;AAIlF,SAAQ,UAAW,QAAX,EAAqB,WAArB,EAAkC,UAAlC,CAA6C,4BAA7C,EAA4E;;AAEnF,MAAK,KAAK,QAAL,CAAe,KAAK,SAApB,CAAL,EAAuC;;AAEtC,QAAK,QAAL,CAAe,KAAK,SAApB,EAAgC,KAAhC,GAAwC,WAAW,OAAnD;AAEA;;AAED,OAAK,MAAL,CAAY,QAAZ,GAAuB,KAAK,QAA5B;;AAEA,MAAK,KAAK,cAAV,EAA2B;;AAE1B,YAAS,eAAT,CAA0B,IAA1B;AACA,QAAK,MAAL,CAAY,MAAZ,CAAoB,QAApB;AAEA,GALD,MAKO;;AAEN,YAAS,eAAT,CAA0B,WAA1B;AACA;AACA,OAAK,KAAK,KAAV,EAAkB,SAAS,KAAT,CAAgB,SAAS,cAAzB,EAAyC,SAAS,cAAlD,EAAkE,SAAS,gBAA3E;AAClB,QAAK,MAAL,CAAY,MAAZ,CAAoB,QAApB;AAEA;AAED;;AA5BiF,CAAtD,CAA7B","file":"ShaderPass-compiled.js","sourcesContent":["console.warn( \"THREE.ShaderPass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\n\n};\n\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n"]}