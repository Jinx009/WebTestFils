{"version":3,"sources":["NURBSCurve.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,2SAAd;AACA;;;;;;;;;AASA,MAAM,UAAN,GAAmB,UAAW,MAAX,EAAmB,KAAnB,CAAyB,oBAAzB,EAA+C,aAA/C,CAA6D,4BAA7D,EAA2F,SAA3F,CAAqG,oBAArG,EAA2H,OAA3H,CAAmI,oBAAnI,EAA0J;;AAE5K,OAAM,KAAN,CAAY,IAAZ,CAAkB,IAAlB;;AAEA,MAAK,MAAL,GAAc,MAAd;AACA,MAAK,KAAL,GAAa,KAAb;AACA,MAAK,aAAL,GAAqB,EAArB;AACA;AACA,MAAK,SAAL,GAAiB,aAAa,CAA9B;AACA,MAAK,OAAL,GAAe,WAAa,KAAK,KAAL,CAAW,MAAX,GAAoB,CAAhD;AACA,MAAM,IAAI,IAAI,CAAd,EAAiB,IAAI,cAAc,MAAnC,EAA2C,EAAG,CAA9C,EAAkD;;AAEjD;AACA,MAAI,QAAQ,cAAe,CAAf,CAAZ;AACA,OAAK,aAAL,CAAoB,CAApB,IAA0B,IAAI,MAAM,OAAV,CAAmB,MAAM,CAAzB,EAA4B,MAAM,CAAlC,EAAqC,MAAM,CAA3C,EAA8C,MAAM,CAApD,CAA1B;AAEA;AAED,CAlBD;;AAqBA,MAAM,UAAN,CAAiB,SAAjB,GAA6B,OAAO,MAAP,CAAe,MAAM,KAAN,CAAY,SAA3B,CAA7B;AACA,MAAM,UAAN,CAAiB,SAAjB,CAA2B,WAA3B,GAAyC,MAAM,UAA/C;;AAGA,MAAM,UAAN,CAAiB,SAAjB,CAA2B,QAA3B,GAAsC,UAAW,CAAX,EAAc,cAAd,EAA+B;;AAEpE,KAAI,QAAQ,kBAAkB,IAAI,MAAM,OAAV,EAA9B;;AAEA,KAAI,IAAI,KAAK,KAAL,CAAY,KAAK,SAAjB,IAA+B,KAAM,KAAK,KAAL,CAAY,KAAK,OAAjB,IAA6B,KAAK,KAAL,CAAY,KAAK,SAAjB,CAAnC,CAAvC,CAJoE,CAIsC;;AAE1G;AACA,KAAI,SAAS,MAAM,UAAN,CAAiB,gBAAjB,CAAmC,KAAK,MAAxC,EAAgD,KAAK,KAArD,EAA4D,KAAK,aAAjE,EAAgF,CAAhF,CAAb;;AAEA,KAAK,OAAO,CAAP,IAAY,GAAjB,EAAuB;;AAEtB;AACA,SAAO,YAAP,CAAqB,OAAO,CAA5B;AAEA;;AAED,QAAO,MAAM,GAAN,CAAW,OAAO,CAAlB,EAAqB,OAAO,CAA5B,EAA+B,OAAO,CAAtC,CAAP;AAEA,CAlBD;;AAqBA,MAAM,UAAN,CAAiB,SAAjB,CAA2B,UAA3B,GAAwC,UAAW,CAAX,EAAc,cAAd,EAA+B;;AAEtE,KAAI,UAAU,kBAAkB,IAAI,MAAM,OAAV,EAAhC;;AAEA,KAAI,IAAI,KAAK,KAAL,CAAY,CAAZ,IAAkB,KAAM,KAAK,KAAL,CAAY,KAAK,KAAL,CAAW,MAAX,GAAoB,CAAhC,IAAsC,KAAK,KAAL,CAAY,CAAZ,CAA5C,CAA1B;AACA,KAAI,OAAO,MAAM,UAAN,CAAiB,oBAAjB,CAAuC,KAAK,MAA5C,EAAoD,KAAK,KAAzD,EAAgE,KAAK,aAArE,EAAoF,CAApF,EAAuF,CAAvF,CAAX;AACA,SAAQ,IAAR,CAAc,KAAM,CAAN,CAAd,EAA0B,SAA1B;;AAEA,QAAO,OAAP;AAEA,CAVD","file":"NURBSCurve-compiled.js","sourcesContent":["console.warn( \"THREE.NURBSCurve: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nTHREE.NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\n\n\tTHREE.Curve.call( this );\n\n\tthis.degree = degree;\n\tthis.knots = knots;\n\tthis.controlPoints = [];\n\t// Used by periodic NURBS to remove hidden spans\n\tthis.startKnot = startKnot || 0;\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t// ensure Vector4 for control points\n\t\tvar point = controlPoints[ i ];\n\t\tthis.controlPoints[ i ] = new THREE.Vector4( point.x, point.y, point.z, point.w );\n\n\t}\n\n};\n\n\nTHREE.NURBSCurve.prototype = Object.create( THREE.Curve.prototype );\nTHREE.NURBSCurve.prototype.constructor = THREE.NURBSCurve;\n\n\nTHREE.NURBSCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new THREE.Vector3();\n\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t// following results in (wx, wy, wz, w) homogeneous point\n\tvar hpoint = THREE.NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\tif ( hpoint.w != 1.0 ) {\n\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\thpoint.divideScalar( hpoint.w );\n\n\t}\n\n\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n};\n\n\nTHREE.NURBSCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\tvar tangent = optionalTarget || new THREE.Vector3();\n\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\tvar ders = THREE.NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\ttangent.copy( ders[ 1 ] ).normalize();\n\n\treturn tangent;\n\n};\n"]}