{"version":3,"sources":["ParametricGeometries.js"],"names":[],"mappings":"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","file":"ParametricGeometries-compiled.js","sourcesContent":["console.warn( \"THREE.ParametricGeometries: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Experimenting of primitive geometry creation using Surface Parametric equations\n */\n\nTHREE.ParametricGeometries = {\n\n\tklein: function ( v, u, target ) {\n\n\t\tu *= Math.PI;\n\t\tv *= 2 * Math.PI;\n\n\t\tu = u * 2;\n\t\tvar x, y, z;\n\t\tif ( u < Math.PI ) {\n\n\t\t\tx = 3 * Math.cos( u ) * ( 1 + Math.sin( u ) ) + ( 2 * ( 1 - Math.cos( u ) / 2 ) ) * Math.cos( u ) * Math.cos( v );\n\t\t\tz = - 8 * Math.sin( u ) - 2 * ( 1 - Math.cos( u ) / 2 ) * Math.sin( u ) * Math.cos( v );\n\n\t\t} else {\n\n\t\t\tx = 3 * Math.cos( u ) * ( 1 + Math.sin( u ) ) + ( 2 * ( 1 - Math.cos( u ) / 2 ) ) * Math.cos( v + Math.PI );\n\t\t\tz = - 8 * Math.sin( u );\n\n\t\t}\n\n\t\ty = - 2 * ( 1 - Math.cos( u ) / 2 ) * Math.sin( v );\n\n\t\ttarget.set( x, y, z );\n\n\t},\n\n\tplane: function ( width, height ) {\n\n\t\treturn function ( u, v, target ) {\n\n\t\t\tvar x = u * width;\n\t\t\tvar y = 0;\n\t\t\tvar z = v * height;\n\n\t\t\ttarget.set( x, y, z );\n\n\t\t};\n\n\t},\n\n\tmobius: function ( u, t, target ) {\n\n\t\t// flat mobius strip\n\t\t// http://www.wolframalpha.com/input/?i=M%C3%B6bius+strip+parametric+equations&lk=1&a=ClashPrefs_*Surface.MoebiusStrip.SurfaceProperty.ParametricEquations-\n\t\tu = u - 0.5;\n\t\tvar v = 2 * Math.PI * t;\n\n\t\tvar x, y, z;\n\n\t\tvar a = 2;\n\n\t\tx = Math.cos( v ) * ( a + u * Math.cos( v / 2 ) );\n\t\ty = Math.sin( v ) * ( a + u * Math.cos( v / 2 ) );\n\t\tz = u * Math.sin( v / 2 );\n\n\t\ttarget.set( x, y, z );\n\n\t},\n\n\tmobius3d: function ( u, t, target ) {\n\n\t\t// volumetric mobius strip\n\n\t\tu *= Math.PI;\n\t\tt *= 2 * Math.PI;\n\n\t\tu = u * 2;\n\t\tvar phi = u / 2;\n\t\tvar major = 2.25, a = 0.125, b = 0.65;\n\n\t\tvar x, y, z;\n\n\t\tx = a * Math.cos( t ) * Math.cos( phi ) - b * Math.sin( t ) * Math.sin( phi );\n\t\tz = a * Math.cos( t ) * Math.sin( phi ) + b * Math.sin( t ) * Math.cos( phi );\n\t\ty = ( major + x ) * Math.sin( u );\n\t\tx = ( major + x ) * Math.cos( u );\n\n\t\ttarget.set( x, y, z );\n\n\t}\n\n};\n\n\n/*********************************************\n *\n * Parametric Replacement for TubeGeometry\n *\n *********************************************/\n\nTHREE.ParametricGeometries.TubeGeometry = function ( path, segments, radius, segmentsRadius, closed ) {\n\n\tthis.path = path;\n\tthis.segments = segments || 64;\n\tthis.radius = radius || 1;\n\tthis.segmentsRadius = segmentsRadius || 8;\n\tthis.closed = closed || false;\n\n\tvar scope = this, numpoints = this.segments + 1;\n\n\tvar frames = path.computeFrenetFrames( segments, closed ),\n\t\ttangents = frames.tangents,\n\t\tnormals = frames.normals,\n\t\tbinormals = frames.binormals;\n\n\t// proxy internals\n\n\tthis.tangents = tangents;\n\tthis.normals = normals;\n\tthis.binormals = binormals;\n\n\tvar position = new THREE.Vector3();\n\n\tvar ParametricTube = function ( u, v, target ) {\n\n\t\tv *= 2 * Math.PI;\n\n\t\tvar i = u * ( numpoints - 1 );\n\t\ti = Math.floor( i );\n\n\t\tpath.getPointAt( u, position );\n\n\t\tvar normal = normals[ i ];\n\t\tvar binormal = binormals[ i ];\n\n\t\tvar cx = - scope.radius * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n\t\tvar cy = scope.radius * Math.sin( v );\n\n\t\tposition.x += cx * normal.x + cy * binormal.x;\n\t\tposition.y += cx * normal.y + cy * binormal.y;\n\t\tposition.z += cx * normal.z + cy * binormal.z;\n\n\t\ttarget.copy( position );\n\n\t};\n\n\tTHREE.ParametricGeometry.call( this, ParametricTube, segments, segmentsRadius );\n\n};\n\nTHREE.ParametricGeometries.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.ParametricGeometries.TubeGeometry.prototype.constructor = THREE.ParametricGeometries.TubeGeometry;\n\n\n/*********************************************\n  *\n  * Parametric Replacement for TorusKnotGeometry\n  *\n  *********************************************/\nTHREE.ParametricGeometries.TorusKnotGeometry = function ( radius, tube, segmentsT, segmentsR, p, q ) {\n\n\tthis.radius = radius || 200;\n\tthis.tube = tube || 40;\n\tthis.segmentsT = segmentsT || 64;\n\tthis.segmentsR = segmentsR || 8;\n\tthis.p = p || 2;\n\tthis.q = q || 3;\n\n\tfunction TorusKnotCurve() {\n\n\t\tTHREE.Curve.call( this );\n\n\t}\n\n\tTorusKnotCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTorusKnotCurve.prototype.constructor = TorusKnotCurve;\n\n\tTorusKnotCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new THREE.Vector3();\n\n\t\tt *= Math.PI * 2;\n\n\t\tvar r = 0.5;\n\n\t\tvar x = ( 1 + r * Math.cos( q * t ) ) * Math.cos( p * t );\n\t\tvar y = ( 1 + r * Math.cos( q * t ) ) * Math.sin( p * t );\n\t\tvar z = r * Math.sin( q * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( radius );\n\n\t};\n\n\tvar segments = segmentsT;\n\tvar radiusSegments = segmentsR;\n\tvar extrudePath = new TorusKnotCurve();\n\n\tTHREE.ParametricGeometries.TubeGeometry.call( this, extrudePath, segments, tube, radiusSegments, true, false );\n\n};\n\nTHREE.ParametricGeometries.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.ParametricGeometries.TorusKnotGeometry.prototype.constructor = THREE.ParametricGeometries.TorusKnotGeometry;\n\n\n/*********************************************\n  *\n  * Parametric Replacement for SphereGeometry\n  *\n  *********************************************/\nTHREE.ParametricGeometries.SphereGeometry = function ( size, u, v ) {\n\n\tfunction sphere( u, v, target ) {\n\n\t\tu *= Math.PI;\n\t\tv *= 2 * Math.PI;\n\n\t\tvar x = size * Math.sin( u ) * Math.cos( v );\n\t\tvar y = size * Math.sin( u ) * Math.sin( v );\n\t\tvar z = size * Math.cos( u );\n\n\t\ttarget.set( x, y, z );\n\n\t}\n\n\tTHREE.ParametricGeometry.call( this, sphere, u, v );\n\n};\n\nTHREE.ParametricGeometries.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.ParametricGeometries.SphereGeometry.prototype.constructor = THREE.ParametricGeometries.SphereGeometry;\n\n\n/*********************************************\n  *\n  * Parametric Replacement for PlaneGeometry\n  *\n  *********************************************/\n\nTHREE.ParametricGeometries.PlaneGeometry = function ( width, depth, segmentsWidth, segmentsDepth ) {\n\n\tfunction plane( u, v, target ) {\n\n\t\tvar x = u * width;\n\t\tvar y = 0;\n\t\tvar z = v * depth;\n\n\t\ttarget.set( x, y, z );\n\n\t}\n\n\tTHREE.ParametricGeometry.call( this, plane, segmentsWidth, segmentsDepth );\n\n};\n\nTHREE.ParametricGeometries.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.ParametricGeometries.PlaneGeometry.prototype.constructor = THREE.ParametricGeometries.PlaneGeometry;\n"]}