{"version":3,"sources":["DecalGeometry.js"],"names":[],"mappings":"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","file":"DecalGeometry-compiled.js","sourcesContent":["console.warn( \"THREE.DecalGeometry: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * You can use this geometry to create a decal mesh, that serves different kinds of purposes.\n * e.g. adding unique details to models, performing dynamic visual environmental changes or covering seams.\n *\n * Constructor parameter:\n *\n * mesh — Any mesh object\n * position — Position of the decal projector\n * orientation — Orientation of the decal projector\n * size — Size of the decal projector\n *\n * reference: http://blog.wolfire.com/2009/06/how-to-project-decals/\n *\n */\n\nTHREE.DecalGeometry = function ( mesh, position, orientation, size ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\t// buffers\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helpers\n\n\tvar plane = new THREE.Vector3();\n\n\t// this matrix represents the transformation of the decal projector\n\n\tvar projectorMatrix = new THREE.Matrix4();\n\tprojectorMatrix.makeRotationFromEuler( orientation );\n\tprojectorMatrix.setPosition( position );\n\n\tvar projectorMatrixInverse = new THREE.Matrix4().getInverse( projectorMatrix );\n\n\t// generate buffers\n\n\tgenerate();\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generate() {\n\n\t\tvar i;\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tvar decalVertices = [];\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\n\t\t// handle different geometry types\n\n\t\tif ( mesh.geometry.isGeometry ) {\n\n\t\t\tgeometry.fromGeometry( mesh.geometry );\n\n\t\t} else {\n\n\t\t\tgeometry.copy( mesh.geometry );\n\n\t\t}\n\n\t\tvar positionAttribute = geometry.attributes.position;\n\t\tvar normalAttribute = geometry.attributes.normal;\n\n\t\t// first, create an array of 'DecalVertex' objects\n\t\t// three consecutive 'DecalVertex' objects represent a single face\n\t\t//\n\t\t// this data structure will be later used to perform the clipping\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tvar index = geometry.index;\n\n\t\t\tfor ( i = 0; i < index.count; i ++ ) {\n\n\t\t\t\tvertex.fromBufferAttribute( positionAttribute, index.getX( i ) );\n\t\t\t\tnormal.fromBufferAttribute( normalAttribute, index.getX( i ) );\n\n\t\t\t\tpushDecalVertex( decalVertices, vertex, normal );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tfor ( i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t\tvertex.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tnormal.fromBufferAttribute( normalAttribute, i );\n\n\t\t\t\tpushDecalVertex( decalVertices, vertex, normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// second, clip the geometry so that it doesn't extend out from the projector\n\n\t\tdecalVertices = clipGeometry( decalVertices, plane.set( 1, 0, 0 ) );\n\t\tdecalVertices = clipGeometry( decalVertices, plane.set( - 1, 0, 0 ) );\n\t\tdecalVertices = clipGeometry( decalVertices, plane.set( 0, 1, 0 ) );\n\t\tdecalVertices = clipGeometry( decalVertices, plane.set( 0, - 1, 0 ) );\n\t\tdecalVertices = clipGeometry( decalVertices, plane.set( 0, 0, 1 ) );\n\t\tdecalVertices = clipGeometry( decalVertices, plane.set( 0, 0, - 1 ) );\n\n\t\t// third, generate final vertices, normals and uvs\n\n\t\tfor ( i = 0; i < decalVertices.length; i ++ ) {\n\n\t\t\tvar decalVertex = decalVertices[ i ];\n\n\t\t\t// create texture coordinates (we are still in projector space)\n\n\t\t\tuvs.push(\n\t\t\t\t0.5 + ( decalVertex.position.x / size.x ),\n\t\t\t\t0.5 + ( decalVertex.position.y / size.y )\n\t\t\t);\n\n\t\t\t// transform the vertex back to world space\n\n\t\t\tdecalVertex.position.applyMatrix4( projectorMatrix );\n\n\t\t\t// now create vertex and normal buffer data\n\n\t\t\tvertices.push( decalVertex.position.x, decalVertex.position.y, decalVertex.position.z );\n\t\t\tnormals.push( decalVertex.normal.x, decalVertex.normal.y, decalVertex.normal.z );\n\n\t\t}\n\n\t}\n\n\tfunction pushDecalVertex( decalVertices, vertex, normal ) {\n\n\t\t// transform the vertex to world space, then to projector space\n\n\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\t\tvertex.applyMatrix4( projectorMatrixInverse );\n\n\t\tnormal.transformDirection( mesh.matrixWorld );\n\n\t\tdecalVertices.push( new THREE.DecalVertex( vertex.clone(), normal.clone() ) );\n\n\t}\n\n\tfunction clipGeometry( inVertices, plane ) {\n\n\t\tvar outVertices = [];\n\n\t\tvar s = 0.5 * Math.abs( size.dot( plane ) );\n\n\t\t// a single iteration clips one face,\n\t\t// which consists of three consecutive 'DecalVertex' objects\n\n\t\tfor ( var i = 0; i < inVertices.length; i += 3 ) {\n\n\t\t\tvar v1Out, v2Out, v3Out, total = 0;\n\t\t\tvar nV1, nV2, nV3, nV4;\n\n\t\t\tvar d1 = inVertices[ i + 0 ].position.dot( plane ) - s;\n\t\t\tvar d2 = inVertices[ i + 1 ].position.dot( plane ) - s;\n\t\t\tvar d3 = inVertices[ i + 2 ].position.dot( plane ) - s;\n\n\t\t\tv1Out = d1 > 0;\n\t\t\tv2Out = d2 > 0;\n\t\t\tv3Out = d3 > 0;\n\n\t\t\t// calculate, how many vertices of the face lie outside of the clipping plane\n\n\t\t\ttotal = ( v1Out ? 1 : 0 ) + ( v2Out ? 1 : 0 ) + ( v3Out ? 1 : 0 );\n\n\t\t\tswitch ( total ) {\n\n\t\t\t\tcase 0: {\n\n\t\t\t\t\t// the entire face lies inside of the plane, no clipping needed\n\n\t\t\t\t\toutVertices.push( inVertices[ i ] );\n\t\t\t\t\toutVertices.push( inVertices[ i + 1 ] );\n\t\t\t\t\toutVertices.push( inVertices[ i + 2 ] );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcase 1: {\n\n\t\t\t\t\t// one vertex lies outside of the plane, perform clipping\n\n\t\t\t\t\tif ( v1Out ) {\n\n\t\t\t\t\t\tnV1 = inVertices[ i + 1 ];\n\t\t\t\t\t\tnV2 = inVertices[ i + 2 ];\n\t\t\t\t\t\tnV3 = clip( inVertices[ i ], nV1, plane, s );\n\t\t\t\t\t\tnV4 = clip( inVertices[ i ], nV2, plane, s );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( v2Out ) {\n\n\t\t\t\t\t\tnV1 = inVertices[ i ];\n\t\t\t\t\t\tnV2 = inVertices[ i + 2 ];\n\t\t\t\t\t\tnV3 = clip( inVertices[ i + 1 ], nV1, plane, s );\n\t\t\t\t\t\tnV4 = clip( inVertices[ i + 1 ], nV2, plane, s );\n\n\t\t\t\t\t\toutVertices.push( nV3 );\n\t\t\t\t\t\toutVertices.push( nV2.clone() );\n\t\t\t\t\t\toutVertices.push( nV1.clone() );\n\n\t\t\t\t\t\toutVertices.push( nV2.clone() );\n\t\t\t\t\t\toutVertices.push( nV3.clone() );\n\t\t\t\t\t\toutVertices.push( nV4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( v3Out ) {\n\n\t\t\t\t\t\tnV1 = inVertices[ i ];\n\t\t\t\t\t\tnV2 = inVertices[ i + 1 ];\n\t\t\t\t\t\tnV3 = clip( inVertices[ i + 2 ], nV1, plane, s );\n\t\t\t\t\t\tnV4 = clip( inVertices[ i + 2 ], nV2, plane, s );\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutVertices.push( nV1.clone() );\n\t\t\t\t\toutVertices.push( nV2.clone() );\n\t\t\t\t\toutVertices.push( nV3 );\n\n\t\t\t\t\toutVertices.push( nV4 );\n\t\t\t\t\toutVertices.push( nV3.clone() );\n\t\t\t\t\toutVertices.push( nV2.clone() );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcase 2: {\n\n\t\t\t\t\t// two vertices lies outside of the plane, perform clipping\n\n\t\t\t\t\tif ( ! v1Out ) {\n\n\t\t\t\t\t\tnV1 = inVertices[ i ].clone();\n\t\t\t\t\t\tnV2 = clip( nV1, inVertices[ i + 1 ], plane, s );\n\t\t\t\t\t\tnV3 = clip( nV1, inVertices[ i + 2 ], plane, s );\n\t\t\t\t\t\toutVertices.push( nV1 );\n\t\t\t\t\t\toutVertices.push( nV2 );\n\t\t\t\t\t\toutVertices.push( nV3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! v2Out ) {\n\n\t\t\t\t\t\tnV1 = inVertices[ i + 1 ].clone();\n\t\t\t\t\t\tnV2 = clip( nV1, inVertices[ i + 2 ], plane, s );\n\t\t\t\t\t\tnV3 = clip( nV1, inVertices[ i ], plane, s );\n\t\t\t\t\t\toutVertices.push( nV1 );\n\t\t\t\t\t\toutVertices.push( nV2 );\n\t\t\t\t\t\toutVertices.push( nV3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! v3Out ) {\n\n\t\t\t\t\t\tnV1 = inVertices[ i + 2 ].clone();\n\t\t\t\t\t\tnV2 = clip( nV1, inVertices[ i ], plane, s );\n\t\t\t\t\t\tnV3 = clip( nV1, inVertices[ i + 1 ], plane, s );\n\t\t\t\t\t\toutVertices.push( nV1 );\n\t\t\t\t\t\toutVertices.push( nV2 );\n\t\t\t\t\t\toutVertices.push( nV3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcase 3: {\n\n\t\t\t\t\t// the entire face lies outside of the plane, so let's discard the corresponding vertices\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn outVertices;\n\n\t}\n\n\tfunction clip( v0, v1, p, s ) {\n\n\t\tvar d0 = v0.position.dot( p ) - s;\n\t\tvar d1 = v1.position.dot( p ) - s;\n\n\t\tvar s0 = d0 / ( d0 - d1 );\n\n\t\tvar v = new THREE.DecalVertex(\n\t\t\tnew THREE.Vector3(\n\t\t\t\tv0.position.x + s0 * ( v1.position.x - v0.position.x ),\n\t\t\t\tv0.position.y + s0 * ( v1.position.y - v0.position.y ),\n\t\t\t\tv0.position.z + s0 * ( v1.position.z - v0.position.z )\n\t\t\t),\n\t\t\tnew THREE.Vector3(\n\t\t\t\tv0.normal.x + s0 * ( v1.normal.x - v0.normal.x ),\n\t\t\t\tv0.normal.y + s0 * ( v1.normal.y - v0.normal.y ),\n\t\t\t\tv0.normal.z + s0 * ( v1.normal.z - v0.normal.z )\n\t\t\t)\n\t\t);\n\n\t\t// need to clip more values (texture coordinates)? do it this way:\n\t\t// intersectpoint.value = a.value + s * ( b.value - a.value );\n\n\t\treturn v;\n\n\t}\n\n};\n\nTHREE.DecalGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.DecalGeometry.prototype.constructor = THREE.DecalGeometry;\n\n// helper\n\nTHREE.DecalVertex = function ( position, normal ) {\n\n\tthis.position = position;\n\tthis.normal = normal;\n\n};\n\nTHREE.DecalVertex.prototype.clone = function () {\n\n\treturn new this.constructor( this.position.clone(), this.normal.clone() );\n\n};\n"]}