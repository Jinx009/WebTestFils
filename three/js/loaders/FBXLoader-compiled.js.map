{"version":3,"sources":["FBXLoader.js"],"names":[],"mappings":"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","file":"FBXLoader-compiled.js","sourcesContent":["console.warn( \"THREE.FBXLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nTHREE.FBXLoader = ( function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader( manager ) {\n\n\t\tTHREE.Loader.call( this, manager );\n\n\t}\n\n\tFBXLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\tconstructor: FBXLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( scope.path === '' ) ? THREE.LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( scope.requestHeader );\n\t\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( FBXBuffer, path ) {\n\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t\t}\n\n\t\t\t// console.log( fbxTree );\n\n\t\t\tvar textureLoader = new THREE.TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t\t}\n\n\t} );\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a THREE.Group\n\tfunction FBXTreeParser( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures( images );\n\t\t\tvar materials = this.parseMaterials( textures );\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\n\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\n\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor ( var nodeID in videoNodes ) {\n\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\n\n\t\t\t\t\tvar id = parseInt( nodeID );\n\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var id in images ) {\n\n\t\t\t\tvar filename = images[ id ];\n\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function ( videoNode ) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array( content );\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function ( images ) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor ( var nodeID in textureNodes ) {\n\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function ( textureNode, images ) {\n\n\t\t\tvar texture = this.loadTexture( textureNode, images );\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n\t\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using THREE.TextureLoader\n\t\tloadTexture: function ( textureNode, images ) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get( textureNode.id ).children;\n\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\t\tif ( extension === 'tga' ) {\n\n\t\t\t\tvar loader = this.manager.getHandler( '.tga' );\n\n\t\t\t\tif ( loader === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\t\ttexture = new THREE.Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t\t}\n\n\t\t\t} else if ( extension === 'psd' ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new THREE.Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath( currentPath );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function ( textureMap ) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor ( var nodeID in materialNodes ) {\n\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function ( materialNode, textureMap ) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif ( typeof type === 'object' ) {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\t\tvar material;\n\n\t\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new THREE.MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues( parameters );\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Diffuse ) {\n\n\t\t\t\tparameters.color = new THREE.Color().fromArray( materialNode.Diffuse.value );\n\n\t\t\t} else if ( materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new THREE.Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Emissive ) {\n\n\t\t\t\tparameters.emissive = new THREE.Color().fromArray( materialNode.Emissive.value );\n\n\t\t\t} else if ( materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new THREE.Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Opacity ) {\n\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t\t}\n\n\t\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Shininess ) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Specular ) {\n\n\t\t\t\tparameters.specular = new THREE.Color().fromArray( materialNode.Specular.value );\n\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new THREE.Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.map.encoding = THREE.sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.emissiveMap.encoding = THREE.sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.envMap.mapping = THREE.EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = THREE.sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.specularMap.encoding = THREE.sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function ( textureMap, id ) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get( id );\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\n\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransformLink: new THREE.Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t\t// transform: new THREE.Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push( rawBone );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\t\tvar child = relationships.children[ i ];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main THREE.Group() to be returned by the loader\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\n\n\t\t\tsceneGraph = new THREE.Group();\n\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar scope = this;\n\t\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\n\t\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\n\n\t\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( model.parent === null ) {\n\n\t\t\t\t\tsceneGraph.add( model );\n\n\t\t\t\t}\n\n\n\t\t\t} );\n\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\t\tif ( node.parent ) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n\t\t\t\t\tvar transform = generateTransform( node.userData.transformData );\n\n\t\t\t\t\tnode.applyMatrix4( transform );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor ( var nodeID in modelNodes ) {\n\n\t\t\t\tvar id = parseInt( nodeID );\n\t\t\t\tvar node = modelNodes[ nodeID ];\n\t\t\t\tvar relationships = connections.get( id );\n\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\t\tmodel = new THREE.Bone();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new THREE.Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = node.attrName ? THREE.PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.getTransformData( model, node );\n\t\t\t\tmodelMap.set( id, model );\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new THREE.Bone();\n\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\t\tbone.name = name ? THREE.PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a THREE.PerspectiveCamera or THREE.OrthographicCamera\n\t\tcreateCamera: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\t\tmodel = new THREE.Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new THREE.PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new THREE.OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\t\tmodel = new THREE.Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a THREE.DirectionalLight, THREE.PointLight or THREE.SpotLight\n\t\tcreateLight: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( lightAttribute === undefined ) {\n\n\t\t\t\tmodel = new THREE.Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\t\tcolor = new THREE.Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new THREE.PointLight( color, intensity, distance, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new THREE.DirectionalLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\t\tangle = THREE.MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = THREE.MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new THREE.SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a THREE.PointLight.' );\n\t\t\t\t\t\tmodel = new THREE.PointLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( materials.length > 1 ) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if ( materials.length > 0 ) {\n\n\t\t\t\tmaterial = materials[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new THREE.MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\t\tmaterials.push( material );\n\n\t\t\t}\n\n\t\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t} );\n\n\t\t\t\tmodel = new THREE.SkinnedMesh( geometry, material );\n\t\t\t\tmodel.normalizeSkinWeights();\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new THREE.Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function ( relationships, geometryMap ) {\n\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null );\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new THREE.LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\t\treturn new THREE.Line( geometry, material );\n\n\t\t},\n\n\t\t// parse the model node for transform data\n\t\tgetTransformData: function ( model, modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\t\tmodel.userData.transformData = transformData;\n\n\t\t},\n\n\t\tsetLookAtProperties: function ( model, modelNode ) {\n\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\t\tvar children = connections.get( model.ID ).children;\n\n\t\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt( new THREE.Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\t\tmodel.bind( new THREE.Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\n\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new THREE.Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new THREE.Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[ 0 ];\n\t\t\t\tvar g = ambientColor[ 1 ];\n\t\t\t\tvar b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tvar color = new THREE.Color( r, g, b );\n\t\t\t\t\tsceneGraph.add( new THREE.AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tvar scope = this;\n\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\tif ( child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length ) {\n\n\t\t\t\t\t\tif ( Array.isArray( child.material ) ) {\n\n\t\t\t\t\t\t\tchild.material.forEach( function ( material, i ) {\n\n\t\t\t\t\t\t\t\tscope.setupMorphMaterial( child, material, i );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tscope.setupMorphMaterial( child, child.material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t\tsetupMorphMaterial: function ( child, material, index ) {\n\n\t\t\tvar uuid = child.uuid;\n\t\t\tvar matUuid = material.uuid;\n\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\tvar sharedMat = false;\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.isMesh ) {\n\n\t\t\t\t\tif ( Array.isArray( node.material ) ) {\n\n\t\t\t\t\t\tnode.material.forEach( function ( mat ) {\n\n\t\t\t\t\t\t\tif ( mat.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else if ( node.material.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( sharedMat === true ) {\n\n\t\t\t\tvar clonedMat = material.clone();\n\t\t\t\tclonedMat.morphTargets = true;\n\n\t\t\t\tif ( index === undefined ) child.material = clonedMat;\n\t\t\t\telse child.material[ index ] = clonedMat;\n\n\t\t\t} else material.morphTargets = true;\n\n\t\t}\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() {}\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function ( deformers ) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor ( var nodeID in geoNodes ) {\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tswitch ( geoNode.attrType ) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = [];\n\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t\t} );\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif ( modelNodes.length === 0 ) return;\n\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null );\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// Assume one model and get the preRotation from that\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\t\tvar modelNode = modelNodes[ 0 ];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t\t},\n\n\t\t// Generate a THREE.BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function ( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\t\tvar geo = new THREE.BufferGeometry();\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\t\tvar buffers = this.genBuffers( geoInfo );\n\n\t\t\tvar positionAttribute = new THREE.Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\t\tgeo.setAttribute( 'color', new THREE.Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tgeo.setAttribute( 'skinIndex', new THREE.Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\t\tgeo.setAttribute( 'skinWeight', new THREE.Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( preTransform );\n\n\t\t\t\tvar normalAttribute = new THREE.Float32BufferAttribute( buffers.normal, 3 );\n\t\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.setAttribute( name, new THREE.Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t\t} );\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function ( geoInfo ) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar scope = this;\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t\t} );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength ++;\n\n\t\t\t\tif ( endOfFace ) {\n\n\t\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\t\tpolygonIndex ++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\t\tif ( morphTargets.length === 0 ) return;\n\n\t\t\tparentGeo.morphTargetsRelative = true;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\t\tvar scope = this;\n\t\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\tvar morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\n\t\t\tvar morphPositions = new Float32Array( length );\n\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\n\n\t\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: morphPositions,\n\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\t\tvar positionAttribute = new THREE.Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function ( NormalNode ) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function ( UVNode ) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function ( ColorNode ) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function ( MaterialNode ) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [ 0 ],\n\t\t\t\t\tindices: [ 0 ],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\t\tmaterialIndices.push( i );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function ( geoNode ) {\n\n\t\t\tif ( THREE.NURBSCurve === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\t\treturn new THREE.BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt( geoNode.Order );\n\n\t\t\tif ( isNaN( order ) ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\t\treturn new THREE.BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\t\tcontrolPoints.push( new THREE.Vector4().fromArray( pointsValues, i ) );\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\n\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new THREE.NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\n\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\n\n\t\t\tvertices.forEach( function ( vertex, i ) {\n\n\t\t\t\tvertex.toArray( positions, i * 3 );\n\n\t\t\t} );\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() {}\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif ( rawClips !== undefined ) {\n\n\t\t\t\tfor ( var key in rawClips ) {\n\n\t\t\t\t\tvar rawClip = rawClips[ key ];\n\n\t\t\t\t\tvar clip = this.addClip( rawClip );\n\n\t\t\t\t\tanimationClips.push( clip );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor ( var nodeID in rawCurves ) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\n\n\t\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor ( var nodeID in rawLayers ) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? THREE.PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? THREE.PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a THREE.AnimationClip\n\t\tparseAnimStacks: function ( layersMap ) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor ( var nodeID in rawStacks ) {\n\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function ( rawClip ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar scope = this;\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t\t} );\n\n\t\t\treturn new THREE.AnimationClip( rawClip.name, - 1, tracks );\n\n\t\t},\n\n\t\tgenerateTracks: function ( rawTracks ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new THREE.Vector3();\n\t\t\tvar initialRotation = new THREE.Quaternion();\n\t\t\tvar initialScale = new THREE.Vector3();\n\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new THREE.Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\treturn new THREE.VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t\t},\n\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\t\tif ( curves.x !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.x );\n\t\t\t\tcurves.x.values = curves.x.values.map( THREE.MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tif ( curves.y !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.y );\n\t\t\t\tcurves.y.values = curves.y.values.map( THREE.MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tif ( curves.z !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.z );\n\t\t\t\tcurves.z.values = curves.z.values.map( THREE.MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\tif ( preRotation !== undefined ) {\n\n\t\t\t\tpreRotation = preRotation.map( THREE.MathUtils.degToRad );\n\t\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\t\tpreRotation = new THREE.Euler().fromArray( preRotation );\n\t\t\t\tpreRotation = new THREE.Quaternion().setFromEuler( preRotation );\n\n\t\t\t}\n\n\t\t\tif ( postRotation !== undefined ) {\n\n\t\t\t\tpostRotation = postRotation.map( THREE.MathUtils.degToRad );\n\t\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\t\tpostRotation = new THREE.Euler().fromArray( postRotation );\n\t\t\t\tpostRotation = new THREE.Quaternion().setFromEuler( postRotation ).inverse();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new THREE.Quaternion();\n\t\t\tvar euler = new THREE.Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\n\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t\t}\n\n\t\t\treturn new THREE.QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t\t},\n\n\t\tgenerateMorphTrack: function ( rawTracks ) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map( function ( val ) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t} );\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\t\treturn new THREE.NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function ( curves ) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t} ).filter( function ( elem, index, array ) {\n\n\t\t\t\treturn array.indexOf( elem ) == index;\n\n\t\t\t} );\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach( function ( time ) {\n\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\n\t\t\t\t\tvalues.push( xValue );\n\t\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\n\t\t\t\t\tvalues.push( yValue );\n\t\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\n\t\t\t\t\tvalues.push( zValue );\n\t\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function ( curve ) {\n\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() {}\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function ( node ) {\n\n\t\t\tthis.nodeStack.push( node );\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function ( val, name ) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tthis.currentIndent = 0;\n\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar scope = this;\n\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\n\n\t\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\t\tif ( matchBeginning ) {\n\n\t\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\t\tscope.popStack();\n\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function ( line, property ) {\n\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\t} );\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\t\tthis.pushStack( node );\n\n\t\t},\n\n\t\tparseNodeAttr: function ( attrs ) {\n\n\t\t\tvar id = attrs[ 0 ];\n\n\t\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif ( attrs.length > 1 ) {\n\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\t\ttype = attrs[ 2 ];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\n\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif ( propName === 'C' ) {\n\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\n\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t\t} );\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [ from, to ];\n\t\t\t\tappend( propValue, rest );\n\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t\t} else {\n\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function ( line ) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t\t} );\n\n\t\t\tvar innerPropName = props[ 0 ];\n\t\t\tvar innerPropType1 = props[ 1 ];\n\t\t\tvar innerPropType2 = props[ 2 ];\n\t\t\tvar innerPropFlag = props[ 3 ];\n\t\t\tvar innerPropValue = props[ 4 ];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch ( innerPropType1 ) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() {}\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function ( buffer ) {\n\n\t\t\tvar reader = new BinaryReader( buffer );\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tif ( version < 6400 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t\t}\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\t\tvar node = this.parseNode( reader, version );\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function ( reader ) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function ( reader, version ) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString( nameLen );\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif ( endOffset === 0 ) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\n\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\t\tvar subNode = this.parseNode( reader, version );\n\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif ( typeof id === 'number' ) node.id = id;\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\t\tif ( name !== '' ) node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function ( name, node, subNode ) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\n\n\t\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push( array );\n\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\t\tvar keys = Object.keys( subNode );\n\n\t\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function ( reader ) {\n\n\t\t\tvar type = reader.getString( 1 );\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString( length );\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof Inflate === 'undefined' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function ( length ) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getBoolean() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8( this.offset );\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif ( high & 0x80000000 ) {\n\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function ( size ) {\n\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function ( size ) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta[ i ] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf( 0 );\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\t\treturn THREE.LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() {}\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function ( key, val ) {\n\n\t\t\tthis[ key ] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary( buffer ) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n\t}\n\n\tfunction isFbxFormatASCII( text ) {\n\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read( offset ) {\n\n\t\t\tvar result = text[ offset - 1 ];\n\t\t\ttext = text.slice( cursor + offset );\n\t\t\tcursor ++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\n\n\t\t\tvar num = read( 1 );\n\t\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion( text ) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match( versionRegExp );\n\n\t\tif ( match ) {\n\n\t\t\tvar version = parseInt( match[ 1 ] );\n\t\t\treturn version;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds( time ) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\t\tvar index;\n\n\t\tswitch ( infoObject.mappingType ) {\n\n\t\t\tcase 'ByPolygonVertex' :\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon' :\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice' :\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame' :\n\t\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t\t}\n\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\n\n\t}\n\n\tvar tempEuler = new THREE.Euler();\n\tvar tempVec = new THREE.Vector3();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n\tfunction generateTransform( transformData ) {\n\n\t\tvar lTranslationM = new THREE.Matrix4();\n\t\tvar lPreRotationM = new THREE.Matrix4();\n\t\tvar lRotationM = new THREE.Matrix4();\n\t\tvar lPostRotationM = new THREE.Matrix4();\n\n\t\tvar lScalingM = new THREE.Matrix4();\n\t\tvar lScalingPivotM = new THREE.Matrix4();\n\t\tvar lScalingOffsetM = new THREE.Matrix4();\n\t\tvar lRotationOffsetM = new THREE.Matrix4();\n\t\tvar lRotationPivotM = new THREE.Matrix4();\n\n\t\tvar lParentGX = new THREE.Matrix4();\n\t\tvar lGlobalT = new THREE.Matrix4();\n\n\t\tvar inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\t\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\t\tif ( transformData.preRotation ) {\n\n\t\t\tvar array = transformData.preRotation.map( THREE.MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.rotation ) {\n\n\t\t\tvar array = transformData.rotation.map( THREE.MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.postRotation ) {\n\n\t\t\tvar array = transformData.postRotation.map( THREE.MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t\t// Pivots and offsets\n\t\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\t\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\t\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\t\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t\t// parent transform\n\t\tif ( transformData.parentMatrixWorld ) lParentGX = transformData.parentMatrixWorld;\n\n\t\t// Global Rotation\n\t\tvar lLRM = lPreRotationM.multiply( lRotationM ).multiply( lPostRotationM );\n\t\tvar lParentGRM = new THREE.Matrix4();\n\t\tlParentGX.extractRotation( lParentGRM );\n\n\t\t// Global Shear*Scaling\n\t\tvar lParentTM = new THREE.Matrix4();\n\t\tlParentTM.copyPosition( lParentGX );\n\n\t\tvar lParentGSM = new THREE.Matrix4();\n\t\tlParentGSM.getInverse( lParentGRM ).multiply( lParentGX );\n\n\t\tvar lGlobalRS = new THREE.Matrix4();\n\n\t\tif ( inheritType === 0 ) {\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lScalingM );\n\n\t\t} else if ( inheritType === 1 ) {\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lScalingM );\n\n\t\t} else {\n\n\t\t\tvar lParentLSM_inv = new THREE.Matrix4().getInverse( lScalingM );\n\t\t\tvar lParentGSM_noLocal = new THREE.Matrix4().multiply( lParentGSM ).multiply( lParentLSM_inv );\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lScalingM );\n\n\t\t}\n\n\t\tvar lRotationPivotM_inv = new THREE.Matrix4().getInverse( lRotationPivotM );\n\t\tvar lScalingPivotM_inv = new THREE.Matrix4().getInverse( lScalingPivotM );\n\t\t// Calculate the local transform matrix\n\t\tvar lTransform = new THREE.Matrix4();\n\t\tlTransform.copy( lTranslationM ).multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new THREE.Matrix4().copyPosition( lTransform );\n\n\t\tvar lGlobalTranslation = new THREE.Matrix4().copy( lParentGX ).multiply( lLocalTWithAllPivotAndOffsetInfo );\n\t\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\t\tlTransform = new THREE.Matrix4().multiply( lGlobalT ).multiply( lGlobalRS );\n\n\t\treturn lTransform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder( order ) {\n\n\t\torder = order || 0;\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif ( order === 6 ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\t\treturn enums[ 0 ];\n\n\t\t}\n\n\t\treturn enums[ order ];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray( value ) {\n\n\t\tvar array = value.split( ',' ).map( function ( val ) {\n\n\t\t\treturn parseFloat( val );\n\n\t\t} );\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString( buffer, from, to ) {\n\n\t\tif ( from === undefined ) from = 0;\n\t\tif ( to === undefined ) to = buffer.byteLength;\n\n\t\treturn THREE.LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n\t}\n\n\tfunction append( a, b ) {\n\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\tfunction slice( a, b, from, to ) {\n\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject( a1, index, a2 ) {\n\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n\t}\n\n\treturn FBXLoader;\n\n} )();\n"]}