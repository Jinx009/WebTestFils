{"version":3,"sources":["NRRDLoader.js"],"names":[],"mappings":"AAAA,QAAQ,IAAR,CAAc,2SAAd;;AAEA,MAAM,UAAN,GAAmB,UAAW,OAAX,EAAqB;;AAEvC,OAAM,MAAN,CAAa,IAAb,CAAmB,IAAnB,EAAyB,OAAzB;AAEA,CAJD;;AAMA,MAAM,UAAN,CAAiB,SAAjB,GAA6B,OAAO,MAAP,CAAe,OAAO,MAAP,CAAe,MAAM,MAAN,CAAa,SAA5B,CAAf,EAAwD;;AAEpF,cAAa,MAAM,UAFiE;;AAIpF,OAAM,UAAW,GAAX,EAAgB,MAAhB,EAAwB,UAAxB,EAAoC,OAApC,EAA8C;;AAEnD,MAAI,QAAQ,IAAZ;;AAEA,MAAI,SAAS,IAAI,MAAM,UAAV,CAAsB,MAAM,OAA5B,CAAb;AACA,SAAO,OAAP,CAAgB,MAAM,IAAtB;AACA,SAAO,eAAP,CAAwB,aAAxB;AACA,SAAO,gBAAP,CAAyB,MAAM,aAA/B;AACA,SAAO,kBAAP,CAA2B,MAAM,eAAjC;AACA,SAAO,IAAP,CAAa,GAAb,EAAkB,UAAW,IAAX,EAAkB;;AAEnC,OAAI;;AAEH,WAAQ,MAAM,KAAN,CAAa,IAAb,CAAR;AAEA,IAJD,CAIE,OAAQ,CAAR,EAAY;;AAEb,QAAK,OAAL,EAAe;;AAEd,aAAS,CAAT;AAEA,KAJD,MAIO;;AAEN,aAAQ,KAAR,CAAe,CAAf;AAEA;;AAED,UAAM,OAAN,CAAc,SAAd,CAAyB,GAAzB;AAEA;AAED,GAtBD,EAsBG,UAtBH,EAsBe,OAtBf;AAwBA,EArCmF;;AAuCpF,QAAO,UAAW,IAAX,EAAkB;;AAExB;;AAEA,MAAI,QAAQ,IAAZ;;AAEA,MAAI,eAAe,CAAnB;;AAEA,MAAI,sBAAsB,IAAI,SAAJ,CAAe,IAAI,UAAJ,CAAgB,CAAE,CAAF,CAAhB,EAAwB,MAAvC,EAAiD,CAAjD,IAAuD,CAAjF;;AAEA,MAAI,gBAAgB,IAApB;;AAEA,MAAI,eAAe,EAAnB;;AAEA,WAAS,IAAT,CAAe,IAAf,EAAqB,MAArB,EAA8B;;AAE7B,OAAK,WAAW,SAAX,IAAwB,WAAW,IAAxC,EAA+C;;AAE9C,aAAS,CAAT;AAEA;;AAED,OAAI,aAAa,CAAjB;AACA,OAAI,cAAc,UAAlB;;AAEA,WAAS,IAAT;;AAEC;AACA,SAAK,OAAL;AACC;AACD,SAAK,OAAL;AACC,mBAAc,SAAd;AACA;AACA;AACD,SAAK,QAAL;AACC,mBAAc,WAAd;AACA,kBAAa,CAAb;AACA;AACD,SAAK,QAAL;AACC,mBAAc,UAAd;AACA,kBAAa,CAAb;AACA;AACA;AACD,SAAK,MAAL;AACC,mBAAc,WAAd;AACA,kBAAa,CAAb;AACA;AACD,SAAK,MAAL;AACC,mBAAc,UAAd;AACA,kBAAa,CAAb;AACA;AACD,SAAK,OAAL;AACC,mBAAc,YAAd;AACA,kBAAa,CAAb;AACA;AACD,SAAK,SAAL;AACC,mBAAc,YAAd;AACA,kBAAa,CAAb;AACA;AACD,SAAK,QAAL;AACC,mBAAc,YAAd;AACA,kBAAa,CAAb;AACA;;AArCF;;AAyCA;AACA,OAAI,SAAS,IAAI,WAAJ,CAAiB,MAAM,KAAN,CAAa,YAAb,EAC7B,gBAAgB,SAAS,UADI,CAAjB,CAAb;;AAGA;AACA,OAAK,uBAAuB,aAA5B,EAA4C;;AAE3C;AACA,aAAS,eAAgB,MAAhB,EAAwB,UAAxB,CAAT;AAEA;;AAED,OAAK,UAAU,CAAf,EAAmB;;AAElB;AACA,WAAO,OAAQ,CAAR,CAAP;AAEA;;AAED;AACA,UAAO,MAAP;AAEA;;AAED;;AAEA,WAAS,cAAT,CAAyB,KAAzB,EAAgC,SAAhC,EAA4C;;AAE3C,OAAI,KAAK,IAAI,UAAJ,CAAgB,MAAM,MAAtB,EAA8B,MAAM,UAApC,EAAgD,MAAM,UAAtD,CAAT;AACA,QAAM,IAAI,IAAI,CAAd,EAAiB,IAAI,MAAM,UAA3B,EAAuC,KAAK,SAA5C,EAAwD;;AAEvD,SAAM,IAAI,IAAI,IAAI,SAAJ,GAAgB,CAAxB,EAA2B,IAAI,CAArC,EAAwC,IAAI,CAA5C,EAA+C,KAAM,GAArD,EAA4D;;AAE3D,SAAI,MAAM,GAAI,CAAJ,CAAV;AACA,QAAI,CAAJ,IAAU,GAAI,CAAJ,CAAV;AACA,QAAI,CAAJ,IAAU,GAAV;AAEA;AAED;;AAED,UAAO,KAAP;AAEA;;AAED;AACA,WAAS,WAAT,CAAsB,MAAtB,EAA+B;;AAE9B,OAAI,IAAJ,EAAU,KAAV,EAAiB,EAAjB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,KAA3B,EAAkC,CAAlC,EAAqC,EAArC,EAAyC,IAAzC;AACA,WAAQ,OAAO,KAAP,CAAc,OAAd,CAAR;AACA,QAAM,KAAK,CAAL,EAAQ,OAAO,MAAM,MAA3B,EAAmC,KAAK,IAAxC,EAA8C,IAA9C,EAAsD;;AAErD,QAAI,MAAO,EAAP,CAAJ;AACA,QAAK,EAAE,KAAF,CAAS,SAAT,CAAL,EAA4B;;AAE3B,kBAAa,MAAb,GAAsB,IAAtB;AAEA,KAJD,MAIO,IAAK,EAAE,KAAF,CAAS,IAAT,CAAL,EAAuB,CAC7B,CADM,MACA,IAAK,IAAI,EAAE,KAAF,CAAS,WAAT,CAAT,EAAkC;;AAExC,aAAQ,EAAG,CAAH,EAAO,IAAP,EAAR;AACA,YAAO,EAAG,CAAH,EAAO,IAAP,EAAP;AACA,UAAK,MAAM,UAAN,CAAiB,SAAjB,CAA2B,cAA3B,CAA2C,KAA3C,CAAL;AACA,SAAK,EAAL,EAAU;;AAET,SAAG,IAAH,CAAS,YAAT,EAAuB,IAAvB;AAEA,MAJD,MAIO;;AAEN,mBAAc,KAAd,IAAwB,IAAxB;AAEA;AAED;AAED;;AAED,OAAK,CAAE,aAAa,MAApB,EAA6B;;AAE5B,UAAM,IAAI,KAAJ,CAAW,kBAAX,CAAN;AAEA;;AAED,OAAK,aAAa,QAAb,KAA0B,KAA1B,IAAmC,aAAa,QAAb,KAA0B,OAAlE,EAA4E;;AAE3E,UAAM,IAAI,KAAJ,CAAW,uBAAX,CAAN;AAEA;;AAED,OAAK,CAAE,aAAa,OAApB,EAA8B;;AAE7B;AACA,iBAAa,OAAb,GAAuB,CAAE,IAAI,MAAM,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAF,EAAgC,IAAI,MAAM,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAhC,EAA8D,IAAI,MAAM,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAA9D,CAAvB;AACA;AACA,QAAK,aAAa,QAAlB,EAA6B;;AAE5B,UAAM,IAAI,CAAV,EAAa,KAAK,CAAlB,EAAqB,GAArB,EAA4B;;AAE3B,UAAK,CAAE,MAAO,aAAa,QAAb,CAAuB,CAAvB,CAAP,CAAP,EAA6C;;AAE5C,oBAAa,OAAb,CAAsB,CAAtB,EAA0B,cAA1B,CAA0C,aAAa,QAAb,CAAuB,CAAvB,CAA1C;AAEA;AAED;AAED;AAED;AAED;;AAED;AACA,WAAS,eAAT,CAA0B,IAA1B,EAAgC,KAAhC,EAAuC,GAAvC,EAA6C;;AAE5C,OAAI,SAAS,EAAb;AACA,WAAQ,SAAS,CAAjB;AACA,SAAM,OAAO,KAAK,MAAlB;AACA,OAAI,KAAJ;AACA;AACA,OAAI,oBAAoB,aAAa,KAAb,CAAmB,MAAnB,CAA2B,UAAW,QAAX,EAAqB,OAArB,EAA+B;;AAEjF,WAAO,WAAW,OAAlB;AAEA,IAJuB,EAIrB,CAJqB,CAAxB;;AAMA,OAAI,OAAO,EAAX;AACA,OAAK,aAAa,QAAb,KAA0B,KAA/B,EAAuC;;AAEtC,WAAO,EAAP;AAEA;;AAED,OAAI,SAAS,IAAI,aAAa,OAAjB,CAA0B,iBAA1B,CAAb;AACA,OAAI,cAAc,CAAlB;AACA,OAAI,kBAAkB,QAAtB;AACA,OAAK,aAAa,OAAb,KAAyB,YAAzB,IAAyC,aAAa,OAAb,KAAyB,YAAvE,EAAsF;;AAErF,sBAAkB,UAAlB;AAEA;;AAED,QAAM,IAAI,IAAI,KAAd,EAAqB,IAAI,GAAzB,EAA8B,GAA9B,EAAqC;;AAEpC,YAAQ,KAAM,CAAN,CAAR;AACA;AACA,QAAK,CAAE,QAAQ,CAAR,IAAa,QAAQ,EAAvB,KAA+B,UAAU,EAA9C,EAAmD;;AAElD,eAAU,OAAO,YAAP,CAAqB,KAArB,CAAV;AAEA,KAJD,MAIO;;AAEN,SAAK,WAAW,EAAhB,EAAqB;;AAEpB,aAAQ,WAAR,IAAwB,gBAAiB,MAAjB,EAAyB,IAAzB,CAAxB;AACA;AAEA;;AAED,cAAS,EAAT;AAEA;AAED;;AAED,OAAK,WAAW,EAAhB,EAAqB;;AAEpB,WAAQ,WAAR,IAAwB,gBAAiB,MAAjB,EAAyB,IAAzB,CAAxB;AACA;AAEA;;AAED,UAAO,MAAP;AAEA;;AAED,MAAI,SAAS,KAAM,OAAN,EAAe,KAAK,UAApB,CAAb;AACA,MAAI,UAAU,OAAO,MAArB;AACA,MAAI,UAAU,IAAd;AACA,MAAI,cAAc,CAAlB;AACA,MAAI,CAAJ;AACA,OAAM,IAAI,CAAV,EAAa,IAAI,OAAjB,EAA0B,GAA1B,EAAiC;;AAEhC,OAAK,OAAQ,IAAI,CAAZ,KAAmB,EAAnB,IAAyB,OAAQ,CAAR,KAAe,EAA7C,EAAkD;;AAEjD;AACA;AACA,cAAU,KAAK,UAAL,CAAiB,MAAjB,EAAyB,CAAzB,EAA4B,IAAI,CAAhC,CAAV;AACA;AACA,kBAAc,IAAI,CAAlB;AACA;AAEA;AAED;;AAED;AACA,cAAa,OAAb;;AAEA,MAAI,QAAQ,OAAO,QAAP,CAAiB,WAAjB,CAAZ,CAzQwB,CAyQoB;AAC5C,MAAK,aAAa,QAAb,KAA0B,MAA1B,IAAoC,aAAa,QAAb,KAA0B,IAAnE,EAA0E;;AAEzE;AACA;AACA,OAAI,UAAU,IAAI,KAAK,MAAT,CAAiB,IAAI,UAAJ,CAAgB,KAAhB,CAAjB,CAAd,CAJyE,CAIf;AAC1D,WAAQ,QAAQ,UAAR,EAAR;AAEA,GAPD,MAOO,IAAK,aAAa,QAAb,KAA0B,OAA1B,IAAqC,aAAa,QAAb,KAA0B,MAA/D,IAAyE,aAAa,QAAb,KAA0B,KAAnG,IAA4G,aAAa,QAAb,KAA0B,KAA3I,EAAmJ;;AAEzJ,WAAQ,gBAAiB,KAAjB,CAAR;AAEA,GAJM,MAIA,IAAK,aAAa,QAAb,KAA0B,KAA/B,EAAuC;;AAE7C;AACA,OAAI,QAAQ,IAAI,UAAJ,CAAgB,MAAM,MAAtB,CAAZ;;AAEA,QAAM,IAAI,IAAI,CAAd,EAAiB,IAAI,MAAM,MAA3B,EAAmC,GAAnC,EAA0C;;AAEzC,UAAO,CAAP,IAAa,MAAO,CAAP,CAAb;AAEA;;AAED,WAAQ,KAAR;AAEA;;AAED;AACA,UAAQ,MAAM,MAAd;;AAEA,MAAI,SAAS,IAAI,MAAM,MAAV,EAAb;AACA,SAAO,MAAP,GAAgB,YAAhB;AACA;AACA;AACA;AACA,SAAO,IAAP,GAAc,IAAI,aAAa,OAAjB,CAA0B,KAA1B,CAAd;AACA;AACA,MAAI,UAAU,OAAO,aAAP,EAAd;AACA,MAAI,MAAM,QAAS,CAAT,CAAV;AACA,MAAI,MAAM,QAAS,CAAT,CAAV;AACA;AACA,SAAO,SAAP,GAAmB,GAAnB;AACA,SAAO,UAAP,GAAoB,GAApB;;AAEA;AACA,SAAO,UAAP,GAAoB,CAAE,aAAa,KAAb,CAAoB,CAApB,CAAF,EAA2B,aAAa,KAAb,CAAoB,CAApB,CAA3B,EAAoD,aAAa,KAAb,CAAoB,CAApB,CAApD,CAApB;AACA,SAAO,OAAP,GAAiB,OAAO,UAAP,CAAmB,CAAnB,CAAjB;AACA,SAAO,OAAP,GAAiB,OAAO,UAAP,CAAmB,CAAnB,CAAjB;AACA,SAAO,OAAP,GAAiB,OAAO,UAAP,CAAmB,CAAnB,CAAjB;AACA;AACA,MAAI,WAAa,IAAI,MAAM,OAAV,CAAmB,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CAAnB,EAAmD,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CAAnD,EAChB,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CADgB,CAAF,CACqB,MADrB,EAAf;AAEA,MAAI,WAAa,IAAI,MAAM,OAAV,CAAmB,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CAAnB,EAAmD,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CAAnD,EAChB,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CADgB,CAAF,CACqB,MADrB,EAAf;AAEA,MAAI,WAAa,IAAI,MAAM,OAAV,CAAmB,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CAAnB,EAAmD,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CAAnD,EAChB,aAAa,OAAb,CAAsB,CAAtB,EAA2B,CAA3B,CADgB,CAAF,CACqB,MADrB,EAAf;AAEA,SAAO,OAAP,GAAiB,CAAE,QAAF,EAAY,QAAZ,EAAsB,QAAtB,CAAjB;;AAGA;AACA,SAAO,MAAP,GAAgB,IAAI,MAAM,OAAV,EAAhB;;AAEA,MAAI,UAAU,CAAd;AACA,MAAI,UAAU,CAAd;AACA,MAAI,UAAU,CAAd;;AAEA,MAAK,aAAa,KAAb,IAAsB,yBAA3B,EAAuD;;AAEtD,aAAU,CAAE,CAAZ;AACA,aAAU,CAAE,CAAZ;AAEA,GALD,MAKO,IAAK,aAAa,KAAb,KAAuB,wBAA5B,EAAuD;;AAE7D,aAAU,CAAE,CAAZ;AAEA;;AAGD,MAAK,CAAE,aAAa,OAApB,EAA8B;;AAE7B,UAAO,MAAP,CAAc,GAAd,CACC,OADD,EACU,CADV,EACa,CADb,EACgB,CADhB,EAEC,CAFD,EAEI,OAFJ,EAEa,CAFb,EAEgB,CAFhB,EAGC,CAHD,EAGI,CAHJ,EAGO,OAHP,EAGgB,CAHhB,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV;AAMA,GARD,MAQO;;AAEN,OAAI,IAAI,aAAa,OAArB;;AAEA,UAAO,MAAP,CAAc,GAAd,CACC,UAAU,EAAG,CAAH,EAAQ,CAAR,CADX,EACwB,UAAU,EAAG,CAAH,EAAQ,CAAR,CADlC,EAC+C,UAAU,EAAG,CAAH,EAAQ,CAAR,CADzD,EACsE,CADtE,EAEC,UAAU,EAAG,CAAH,EAAQ,CAAR,CAFX,EAEwB,UAAU,EAAG,CAAH,EAAQ,CAAR,CAFlC,EAE+C,UAAU,EAAG,CAAH,EAAQ,CAAR,CAFzD,EAEsE,CAFtE,EAGC,UAAU,EAAG,CAAH,EAAQ,CAAR,CAHX,EAGwB,UAAU,EAAG,CAAH,EAAQ,CAAR,CAHlC,EAG+C,UAAU,EAAG,CAAH,EAAQ,CAAR,CAHzD,EAGsE,CAHtE,EAIC,CAJD,EAII,CAJJ,EAIO,CAJP,EAIU,CAJV;AAMA;;AAED,SAAO,aAAP,GAAuB,IAAI,MAAM,OAAV,EAAvB;AACA,SAAO,aAAP,CAAqB,UAArB,CAAiC,OAAO,MAAxC;AACA,SAAO,aAAP,GAAyB,IAAI,MAAM,OAAV,CAAmB,OAAO,OAA1B,EAAmC,OAAO,OAA1C,EAAmD,OAAO,OAA1D,CAAF,CAAwE,YAAxE,CAAsF,OAAO,MAA7F,EAAsG,KAAtG,GAA8G,OAA9G,GAAwH,GAAxH,CAA6H,KAAK,GAAlI,CAAvB;;AAEA;AACA;AACA,MAAK,OAAO,cAAP,KAA0B,CAAE,QAAjC,EAA4C;;AAE3C,UAAO,cAAP,GAAwB,GAAxB;AAEA;;AAED,MAAK,OAAO,cAAP,KAA0B,QAA/B,EAA0C;;AAEzC,UAAO,cAAP,GAAwB,GAAxB;AAEA;;AAED,SAAO,MAAP;AAEA,EAtamF;;AAwapF,aAAY,UAAW,KAAX,EAAkB,KAAlB,EAAyB,GAAzB,EAA+B;;AAE1C;AACA,MAAK,UAAU,SAAf,EAA2B;;AAE1B,WAAQ,CAAR;AAEA;;AAED,MAAK,QAAQ,SAAb,EAAyB;;AAExB,SAAM,MAAM,MAAZ;AAEA;;AAED,MAAI,SAAS,EAAb;AACA;AACA,MAAI,IAAI,CAAR;AACA,OAAM,IAAI,KAAV,EAAiB,IAAI,GAArB,EAA0B,EAAG,CAA7B,EAAiC;;AAEhC,aAAU,OAAO,YAAP,CAAqB,MAAO,CAAP,CAArB,CAAV;AAEA;;AAED,SAAO,MAAP;AAEA,EAlcmF;;AAocpF,iBAAgB;;AAEf,QAAM,UAAW,IAAX,EAAkB;;AAEvB,WAAS,IAAT;;AAEC,SAAK,OAAL;AACA,SAAK,eAAL;AACA,SAAK,OAAL;AACA,SAAK,SAAL;AACC,UAAK,OAAL,GAAe,UAAf;AACA;AACD,SAAK,aAAL;AACA,SAAK,MAAL;AACA,SAAK,QAAL;AACC,UAAK,OAAL,GAAe,SAAf;AACA;AACD,SAAK,OAAL;AACA,SAAK,WAAL;AACA,SAAK,cAAL;AACA,SAAK,kBAAL;AACA,SAAK,OAAL;AACA,SAAK,SAAL;AACC,UAAK,OAAL,GAAe,UAAf;AACA;AACD,SAAK,QAAL;AACA,SAAK,gBAAL;AACA,SAAK,oBAAL;AACA,SAAK,QAAL;AACA,SAAK,UAAL;AACC,UAAK,OAAL,GAAe,WAAf;AACA;AACD,SAAK,KAAL;AACA,SAAK,YAAL;AACA,SAAK,OAAL;AACA,SAAK,SAAL;AACC,UAAK,OAAL,GAAe,UAAf;AACA;AACD,SAAK,MAAL;AACA,SAAK,cAAL;AACA,SAAK,QAAL;AACA,SAAK,UAAL;AACC,UAAK,OAAL,GAAe,WAAf;AACA;AACD,SAAK,OAAL;AACC,UAAK,OAAL,GAAe,YAAf;AACA;AACD,SAAK,QAAL;AACC,UAAK,OAAL,GAAe,YAAf;AACA;AACD;AACC,WAAM,IAAI,KAAJ,CAAW,iCAAiC,IAA5C,CAAN;;AA/CF;;AAmDA,UAAO,KAAK,IAAL,GAAY,IAAnB;AAEA,GAzDc;;AA2Df,UAAQ,UAAW,IAAX,EAAkB;;AAEzB,UAAO,KAAK,MAAL,GAAc,IAArB;AAEA,GA/Dc;;AAiEf,YAAU,UAAW,IAAX,EAAkB;;AAE3B,UAAO,KAAK,QAAL,GAAgB,IAAvB;AAEA,GArEc;;AAuEf,aAAW,UAAW,IAAX,EAAkB;;AAE5B,UAAO,KAAK,GAAL,GAAW,SAAU,IAAV,EAAgB,EAAhB,CAAlB;AAEA,GA3Ec;;AA6Ef,SAAO,UAAW,IAAX,EAAkB;;AAExB,OAAI,CAAJ;AACA,UAAO,KAAK,KAAL,GAAe,YAAY;;AAEjC,QAAI,EAAJ,EAAQ,IAAR,EAAc,IAAd,EAAoB,QAApB;AACA,WAAO,KAAK,KAAL,CAAY,KAAZ,CAAP;AACA,eAAW,EAAX;;AAEA,SAAM,KAAK,CAAL,EAAQ,OAAO,KAAK,MAA1B,EAAkC,KAAK,IAAvC,EAA6C,IAA7C,EAAqD;;AAEpD,SAAI,KAAM,EAAN,CAAJ;AACA,cAAS,IAAT,CAAe,SAAU,CAAV,EAAa,EAAb,CAAf;AAEA;;AAED,WAAO,QAAP;AAEA,IAfmB,EAApB;AAiBA,GAjGc;;AAmGf,SAAO,UAAW,IAAX,EAAkB;;AAExB,UAAO,KAAK,KAAL,GAAa,IAApB;AAEA,GAvGc;;AAyGf,kBAAgB,UAAW,IAAX,EAAkB;;AAEjC,UAAO,KAAK,YAAL,GAAoB,KAAK,KAAL,CAAY,GAAZ,EAAmB,CAAnB,EAAuB,KAAvB,CAA8B,GAA9B,EAAqC,CAArC,EAAyC,KAAzC,CAAgD,GAAhD,CAA3B;AAEA,GA7Gc;;AA+Gf,sBAAoB,UAAW,IAAX,EAAkB;;AAErC,OAAI,CAAJ,EAAO,KAAP,EAAc,CAAd;AACA,WAAQ,KAAK,KAAL,CAAY,UAAZ,CAAR;AACA,UAAO,KAAK,OAAL,GAAiB,YAAY;;AAEnC,QAAI,EAAJ,EAAQ,IAAR,EAAc,QAAd;AACA,eAAW,EAAX;;AAEA,SAAM,KAAK,CAAL,EAAQ,OAAO,MAAM,MAA3B,EAAmC,KAAK,IAAxC,EAA8C,IAA9C,EAAsD;;AAErD,SAAI,MAAO,EAAP,CAAJ;AACA,cAAS,IAAT,CAAiB,YAAY;;AAE5B,UAAI,EAAJ,EAAQ,KAAR,EAAe,IAAf,EAAqB,SAArB;AACA,aAAO,EAAE,KAAF,CAAS,CAAT,EAAY,CAAE,CAAd,EAAkB,KAAlB,CAAyB,GAAzB,CAAP;AACA,kBAAY,EAAZ;;AAEA,WAAM,KAAK,CAAL,EAAQ,QAAQ,KAAK,MAA3B,EAAmC,KAAK,KAAxC,EAA+C,IAA/C,EAAuD;;AAEtD,WAAI,KAAM,EAAN,CAAJ;AACA,iBAAU,IAAV,CAAgB,WAAY,CAAZ,CAAhB;AAEA;;AAED,aAAO,SAAP;AAEA,MAfc,EAAf;AAiBA;;AAED,WAAO,QAAP;AAEA,IA7BqB,EAAtB;AA+BA,GAlJc;;AAoJf,YAAU,UAAW,IAAX,EAAkB;;AAE3B,OAAI,CAAJ,EAAO,KAAP;AACA,WAAQ,KAAK,KAAL,CAAY,KAAZ,CAAR;AACA,UAAO,KAAK,QAAL,GAAkB,YAAY;;AAEpC,QAAI,EAAJ;AAAA,QAAQ,IAAR;AAAA,QAAc,WAAW,EAAzB;;AAEA,SAAM,KAAK,CAAL,EAAQ,OAAO,MAAM,MAA3B,EAAmC,KAAK,IAAxC,EAA8C,IAA9C,EAAsD;;AAErD,SAAI,MAAO,EAAP,CAAJ;AACA,cAAS,IAAT,CAAe,WAAY,CAAZ,CAAf;AAEA;;AAED,WAAO,QAAP;AAEA,IAbsB,EAAvB;AAeA;AAvKc;;AApcoE,CAAxD,CAA7B","file":"NRRDLoader-compiled.js","sourcesContent":["console.warn( \"THREE.NRRDLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.NRRDLoader = function ( manager ) {\n\n\tTHREE.Loader.call( this, manager );\n\n};\n\nTHREE.NRRDLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\tconstructor: THREE.NRRDLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( data ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( data ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( data ) {\n\n\t\t// this parser is largely inspired from the XTK NRRD parser : https://github.com/xtk/X\n\n\t\tvar _data = data;\n\n\t\tvar _dataPointer = 0;\n\n\t\tvar _nativeLittleEndian = new Int8Array( new Int16Array( [ 1 ] ).buffer )[ 0 ] > 0;\n\n\t\tvar _littleEndian = true;\n\n\t\tvar headerObject = {};\n\n\t\tfunction scan( type, chunks ) {\n\n\t\t\tif ( chunks === undefined || chunks === null ) {\n\n\t\t\t\tchunks = 1;\n\n\t\t\t}\n\n\t\t\tvar _chunkSize = 1;\n\t\t\tvar _array_type = Uint8Array;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\t// 1 byte data types\n\t\t\t\tcase 'uchar':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'schar':\n\t\t\t\t\t_array_type = Int8Array;\n\t\t\t\t\tbreak;\n\t\t\t\t\t// 2 byte data types\n\t\t\t\tcase 'ushort':\n\t\t\t\t\t_array_type = Uint16Array;\n\t\t\t\t\t_chunkSize = 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'sshort':\n\t\t\t\t\t_array_type = Int16Array;\n\t\t\t\t\t_chunkSize = 2;\n\t\t\t\t\tbreak;\n\t\t\t\t\t// 4 byte data types\n\t\t\t\tcase 'uint':\n\t\t\t\t\t_array_type = Uint32Array;\n\t\t\t\t\t_chunkSize = 4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'sint':\n\t\t\t\t\t_array_type = Int32Array;\n\t\t\t\t\t_chunkSize = 4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'float':\n\t\t\t\t\t_array_type = Float32Array;\n\t\t\t\t\t_chunkSize = 4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'complex':\n\t\t\t\t\t_array_type = Float64Array;\n\t\t\t\t\t_chunkSize = 8;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'double':\n\t\t\t\t\t_array_type = Float64Array;\n\t\t\t\t\t_chunkSize = 8;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// increase the data pointer in-place\n\t\t\tvar _bytes = new _array_type( _data.slice( _dataPointer,\n\t\t\t\t_dataPointer += chunks * _chunkSize ) );\n\n\t\t\t// if required, flip the endianness of the bytes\n\t\t\tif ( _nativeLittleEndian != _littleEndian ) {\n\n\t\t\t\t// we need to flip here since the format doesn't match the native endianness\n\t\t\t\t_bytes = flipEndianness( _bytes, _chunkSize );\n\n\t\t\t}\n\n\t\t\tif ( chunks == 1 ) {\n\n\t\t\t\t// if only one chunk was requested, just return one value\n\t\t\t\treturn _bytes[ 0 ];\n\n\t\t\t}\n\n\t\t\t// return the byte array\n\t\t\treturn _bytes;\n\n\t\t}\n\n\t\t//Flips typed array endianness in-place. Based on https://github.com/kig/DataStream.js/blob/master/DataStream.js.\n\n\t\tfunction flipEndianness( array, chunkSize ) {\n\n\t\t\tvar u8 = new Uint8Array( array.buffer, array.byteOffset, array.byteLength );\n\t\t\tfor ( var i = 0; i < array.byteLength; i += chunkSize ) {\n\n\t\t\t\tfor ( var j = i + chunkSize - 1, k = i; j > k; j --, k ++ ) {\n\n\t\t\t\t\tvar tmp = u8[ k ];\n\t\t\t\t\tu8[ k ] = u8[ j ];\n\t\t\t\t\tu8[ j ] = tmp;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\t//parse the header\n\t\tfunction parseHeader( header ) {\n\n\t\t\tvar data, field, fn, i, l, lines, m, _i, _len;\n\t\t\tlines = header.split( /\\r?\\n/ );\n\t\t\tfor ( _i = 0, _len = lines.length; _i < _len; _i ++ ) {\n\n\t\t\t\tl = lines[ _i ];\n\t\t\t\tif ( l.match( /NRRD\\d+/ ) ) {\n\n\t\t\t\t\theaderObject.isNrrd = true;\n\n\t\t\t\t} else if ( l.match( /^#/ ) ) {\n\t\t\t\t} else if ( m = l.match( /(.*):(.*)/ ) ) {\n\n\t\t\t\t\tfield = m[ 1 ].trim();\n\t\t\t\t\tdata = m[ 2 ].trim();\n\t\t\t\t\tfn = THREE.NRRDLoader.prototype.fieldFunctions[ field ];\n\t\t\t\t\tif ( fn ) {\n\n\t\t\t\t\t\tfn.call( headerObject, data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\theaderObject[ field ] = data;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! headerObject.isNrrd ) {\n\n\t\t\t\tthrow new Error( 'Not an NRRD file' );\n\n\t\t\t}\n\n\t\t\tif ( headerObject.encoding === 'bz2' || headerObject.encoding === 'bzip2' ) {\n\n\t\t\t\tthrow new Error( 'Bzip is not supported' );\n\n\t\t\t}\n\n\t\t\tif ( ! headerObject.vectors ) {\n\n\t\t\t\t//if no space direction is set, let's use the identity\n\t\t\t\theaderObject.vectors = [ new THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ) ];\n\t\t\t\t//apply spacing if defined\n\t\t\t\tif ( headerObject.spacings ) {\n\n\t\t\t\t\tfor ( i = 0; i <= 2; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isNaN( headerObject.spacings[ i ] ) ) {\n\n\t\t\t\t\t\t\theaderObject.vectors[ i ].multiplyScalar( headerObject.spacings[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//parse the data when registred as one of this type : 'text', 'ascii', 'txt'\n\t\tfunction parseDataAsText( data, start, end ) {\n\n\t\t\tvar number = '';\n\t\t\tstart = start || 0;\n\t\t\tend = end || data.length;\n\t\t\tvar value;\n\t\t\t//length of the result is the product of the sizes\n\t\t\tvar lengthOfTheResult = headerObject.sizes.reduce( function ( previous, current ) {\n\n\t\t\t\treturn previous * current;\n\n\t\t\t}, 1 );\n\n\t\t\tvar base = 10;\n\t\t\tif ( headerObject.encoding === 'hex' ) {\n\n\t\t\t\tbase = 16;\n\n\t\t\t}\n\n\t\t\tvar result = new headerObject.__array( lengthOfTheResult );\n\t\t\tvar resultIndex = 0;\n\t\t\tvar parsingFunction = parseInt;\n\t\t\tif ( headerObject.__array === Float32Array || headerObject.__array === Float64Array ) {\n\n\t\t\t\tparsingFunction = parseFloat;\n\n\t\t\t}\n\n\t\t\tfor ( var i = start; i < end; i ++ ) {\n\n\t\t\t\tvalue = data[ i ];\n\t\t\t\t//if value is not a space\n\t\t\t\tif ( ( value < 9 || value > 13 ) && value !== 32 ) {\n\n\t\t\t\t\tnumber += String.fromCharCode( value );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( number !== '' ) {\n\n\t\t\t\t\t\tresult[ resultIndex ] = parsingFunction( number, base );\n\t\t\t\t\t\tresultIndex ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnumber = '';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( number !== '' ) {\n\n\t\t\t\tresult[ resultIndex ] = parsingFunction( number, base );\n\t\t\t\tresultIndex ++;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tvar _bytes = scan( 'uchar', data.byteLength );\n\t\tvar _length = _bytes.length;\n\t\tvar _header = null;\n\t\tvar _data_start = 0;\n\t\tvar i;\n\t\tfor ( i = 1; i < _length; i ++ ) {\n\n\t\t\tif ( _bytes[ i - 1 ] == 10 && _bytes[ i ] == 10 ) {\n\n\t\t\t\t// we found two line breaks in a row\n\t\t\t\t// now we know what the header is\n\t\t\t\t_header = this.parseChars( _bytes, 0, i - 2 );\n\t\t\t\t// this is were the data starts\n\t\t\t\t_data_start = i + 1;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// parse the header\n\t\tparseHeader( _header );\n\n\t\tvar _data = _bytes.subarray( _data_start ); // the data without header\n\t\tif ( headerObject.encoding === 'gzip' || headerObject.encoding === 'gz' ) {\n\n\t\t\t// we need to decompress the datastream\n\t\t\t// here we start the unzipping and get a typed Uint8Array back\n\t\t\tvar inflate = new Zlib.Gunzip( new Uint8Array( _data ) ); // eslint-disable-line no-undef\n\t\t\t_data = inflate.decompress();\n\n\t\t} else if ( headerObject.encoding === 'ascii' || headerObject.encoding === 'text' || headerObject.encoding === 'txt' || headerObject.encoding === 'hex' ) {\n\n\t\t\t_data = parseDataAsText( _data );\n\n\t\t} else if ( headerObject.encoding === 'raw' ) {\n\n\t\t\t//we need to copy the array to create a new array buffer, else we retrieve the original arraybuffer with the header\n\t\t\tvar _copy = new Uint8Array( _data.length );\n\n\t\t\tfor ( var i = 0; i < _data.length; i ++ ) {\n\n\t\t\t\t_copy[ i ] = _data[ i ];\n\n\t\t\t}\n\n\t\t\t_data = _copy;\n\n\t\t}\n\n\t\t// .. let's use the underlying array buffer\n\t\t_data = _data.buffer;\n\n\t\tvar volume = new THREE.Volume();\n\t\tvolume.header = headerObject;\n\t\t//\n\t\t// parse the (unzipped) data to a datastream of the correct type\n\t\t//\n\t\tvolume.data = new headerObject.__array( _data );\n\t\t// get the min and max intensities\n\t\tvar min_max = volume.computeMinMax();\n\t\tvar min = min_max[ 0 ];\n\t\tvar max = min_max[ 1 ];\n\t\t// attach the scalar range to the volume\n\t\tvolume.windowLow = min;\n\t\tvolume.windowHigh = max;\n\n\t\t// get the image dimensions\n\t\tvolume.dimensions = [ headerObject.sizes[ 0 ], headerObject.sizes[ 1 ], headerObject.sizes[ 2 ] ];\n\t\tvolume.xLength = volume.dimensions[ 0 ];\n\t\tvolume.yLength = volume.dimensions[ 1 ];\n\t\tvolume.zLength = volume.dimensions[ 2 ];\n\t\t// spacing\n\t\tvar spacingX = ( new THREE.Vector3( headerObject.vectors[ 0 ][ 0 ], headerObject.vectors[ 0 ][ 1 ],\n\t\t\theaderObject.vectors[ 0 ][ 2 ] ) ).length();\n\t\tvar spacingY = ( new THREE.Vector3( headerObject.vectors[ 1 ][ 0 ], headerObject.vectors[ 1 ][ 1 ],\n\t\t\theaderObject.vectors[ 1 ][ 2 ] ) ).length();\n\t\tvar spacingZ = ( new THREE.Vector3( headerObject.vectors[ 2 ][ 0 ], headerObject.vectors[ 2 ][ 1 ],\n\t\t\theaderObject.vectors[ 2 ][ 2 ] ) ).length();\n\t\tvolume.spacing = [ spacingX, spacingY, spacingZ ];\n\n\n\t\t// Create IJKtoRAS matrix\n\t\tvolume.matrix = new THREE.Matrix4();\n\n\t\tvar _spaceX = 1;\n\t\tvar _spaceY = 1;\n\t\tvar _spaceZ = 1;\n\n\t\tif ( headerObject.space == \"left-posterior-superior\" ) {\n\n\t\t\t_spaceX = - 1;\n\t\t\t_spaceY = - 1;\n\n\t\t} else if ( headerObject.space === 'left-anterior-superior' ) {\n\n\t\t\t_spaceX = - 1;\n\n\t\t}\n\n\n\t\tif ( ! headerObject.vectors ) {\n\n\t\t\tvolume.matrix.set(\n\t\t\t\t_spaceX, 0, 0, 0,\n\t\t\t\t0, _spaceY, 0, 0,\n\t\t\t\t0, 0, _spaceZ, 0,\n\t\t\t\t0, 0, 0, 1 );\n\n\t\t} else {\n\n\t\t\tvar v = headerObject.vectors;\n\n\t\t\tvolume.matrix.set(\n\t\t\t\t_spaceX * v[ 0 ][ 0 ], _spaceX * v[ 1 ][ 0 ], _spaceX * v[ 2 ][ 0 ], 0,\n\t\t\t\t_spaceY * v[ 0 ][ 1 ], _spaceY * v[ 1 ][ 1 ], _spaceY * v[ 2 ][ 1 ], 0,\n\t\t\t\t_spaceZ * v[ 0 ][ 2 ], _spaceZ * v[ 1 ][ 2 ], _spaceZ * v[ 2 ][ 2 ], 0,\n\t\t\t\t0, 0, 0, 1 );\n\n\t\t}\n\n\t\tvolume.inverseMatrix = new THREE.Matrix4();\n\t\tvolume.inverseMatrix.getInverse( volume.matrix );\n\t\tvolume.RASDimensions = ( new THREE.Vector3( volume.xLength, volume.yLength, volume.zLength ) ).applyMatrix4( volume.matrix ).round().toArray().map( Math.abs );\n\n\t\t// .. and set the default threshold\n\t\t// only if the threshold was not already set\n\t\tif ( volume.lowerThreshold === - Infinity ) {\n\n\t\t\tvolume.lowerThreshold = min;\n\n\t\t}\n\n\t\tif ( volume.upperThreshold === Infinity ) {\n\n\t\t\tvolume.upperThreshold = max;\n\n\t\t}\n\n\t\treturn volume;\n\n\t},\n\n\tparseChars: function ( array, start, end ) {\n\n\t\t// without borders, use the whole array\n\t\tif ( start === undefined ) {\n\n\t\t\tstart = 0;\n\n\t\t}\n\n\t\tif ( end === undefined ) {\n\n\t\t\tend = array.length;\n\n\t\t}\n\n\t\tvar output = '';\n\t\t// create and append the chars\n\t\tvar i = 0;\n\t\tfor ( i = start; i < end; ++ i ) {\n\n\t\t\toutput += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tfieldFunctions: {\n\n\t\ttype: function ( data ) {\n\n\t\t\tswitch ( data ) {\n\n\t\t\t\tcase 'uchar':\n\t\t\t\tcase 'unsigned char':\n\t\t\t\tcase 'uint8':\n\t\t\t\tcase 'uint8_t':\n\t\t\t\t\tthis.__array = Uint8Array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'signed char':\n\t\t\t\tcase 'int8':\n\t\t\t\tcase 'int8_t':\n\t\t\t\t\tthis.__array = Int8Array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'short':\n\t\t\t\tcase 'short int':\n\t\t\t\tcase 'signed short':\n\t\t\t\tcase 'signed short int':\n\t\t\t\tcase 'int16':\n\t\t\t\tcase 'int16_t':\n\t\t\t\t\tthis.__array = Int16Array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ushort':\n\t\t\t\tcase 'unsigned short':\n\t\t\t\tcase 'unsigned short int':\n\t\t\t\tcase 'uint16':\n\t\t\t\tcase 'uint16_t':\n\t\t\t\t\tthis.__array = Uint16Array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'signed int':\n\t\t\t\tcase 'int32':\n\t\t\t\tcase 'int32_t':\n\t\t\t\t\tthis.__array = Int32Array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'uint':\n\t\t\t\tcase 'unsigned int':\n\t\t\t\tcase 'uint32':\n\t\t\t\tcase 'uint32_t':\n\t\t\t\t\tthis.__array = Uint32Array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'float':\n\t\t\t\t\tthis.__array = Float32Array;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'double':\n\t\t\t\t\tthis.__array = Float64Array;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unsupported NRRD data type: ' + data );\n\n\t\t\t}\n\n\t\t\treturn this.type = data;\n\n\t\t},\n\n\t\tendian: function ( data ) {\n\n\t\t\treturn this.endian = data;\n\n\t\t},\n\n\t\tencoding: function ( data ) {\n\n\t\t\treturn this.encoding = data;\n\n\t\t},\n\n\t\tdimension: function ( data ) {\n\n\t\t\treturn this.dim = parseInt( data, 10 );\n\n\t\t},\n\n\t\tsizes: function ( data ) {\n\n\t\t\tvar i;\n\t\t\treturn this.sizes = ( function () {\n\n\t\t\t\tvar _i, _len, _ref, _results;\n\t\t\t\t_ref = data.split( /\\s+/ );\n\t\t\t\t_results = [];\n\n\t\t\t\tfor ( _i = 0, _len = _ref.length; _i < _len; _i ++ ) {\n\n\t\t\t\t\ti = _ref[ _i ];\n\t\t\t\t\t_results.push( parseInt( i, 10 ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn _results;\n\n\t\t\t} )();\n\n\t\t},\n\n\t\tspace: function ( data ) {\n\n\t\t\treturn this.space = data;\n\n\t\t},\n\n\t\t'space origin': function ( data ) {\n\n\t\t\treturn this.space_origin = data.split( \"(\" )[ 1 ].split( \")\" )[ 0 ].split( \",\" );\n\n\t\t},\n\n\t\t'space directions': function ( data ) {\n\n\t\t\tvar f, parts, v;\n\t\t\tparts = data.match( /\\(.*?\\)/g );\n\t\t\treturn this.vectors = ( function () {\n\n\t\t\t\tvar _i, _len, _results;\n\t\t\t\t_results = [];\n\n\t\t\t\tfor ( _i = 0, _len = parts.length; _i < _len; _i ++ ) {\n\n\t\t\t\t\tv = parts[ _i ];\n\t\t\t\t\t_results.push( ( function () {\n\n\t\t\t\t\t\tvar _j, _len2, _ref, _results2;\n\t\t\t\t\t\t_ref = v.slice( 1, - 1 ).split( /,/ );\n\t\t\t\t\t\t_results2 = [];\n\n\t\t\t\t\t\tfor ( _j = 0, _len2 = _ref.length; _j < _len2; _j ++ ) {\n\n\t\t\t\t\t\t\tf = _ref[ _j ];\n\t\t\t\t\t\t\t_results2.push( parseFloat( f ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn _results2;\n\n\t\t\t\t\t} )() );\n\n\t\t\t\t}\n\n\t\t\t\treturn _results;\n\n\t\t\t} )();\n\n\t\t},\n\n\t\tspacings: function ( data ) {\n\n\t\t\tvar f, parts;\n\t\t\tparts = data.split( /\\s+/ );\n\t\t\treturn this.spacings = ( function () {\n\n\t\t\t\tvar _i, _len, _results = [];\n\n\t\t\t\tfor ( _i = 0, _len = parts.length; _i < _len; _i ++ ) {\n\n\t\t\t\t\tf = parts[ _i ];\n\t\t\t\t\t_results.push( parseFloat( f ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn _results;\n\n\t\t\t} )();\n\n\t\t}\n\t}\n\n} );\n"]}