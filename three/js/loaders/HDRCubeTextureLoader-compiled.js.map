{"version":3,"sources":["HDRCubeTextureLoader.js"],"names":[],"mappings":"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","file":"HDRCubeTextureLoader-compiled.js","sourcesContent":["console.warn( \"THREE.HDRCubeTextureLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.HDRCubeTextureLoader = function ( manager ) {\n\n\tTHREE.Loader.call( this, manager );\n\n\tthis.hdrLoader = new THREE.RGBELoader();\n\tthis.type = THREE.UnsignedByteType;\n\n};\n\nTHREE.HDRCubeTextureLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\tconstructor: THREE.HDRCubeTextureLoader,\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tif ( ! Array.isArray( urls ) ) {\n\n\t\t\tconsole.warn( 'THREE.HDRCubeTextureLoader signature has changed. Use .setDataType() instead.' );\n\n\t\t\tthis.setDataType( urls );\n\n\t\t\turls = onLoad;\n\t\t\tonLoad = onProgress;\n\t\t\tonProgress = onError;\n\t\t\tonError = arguments[ 4 ];\n\n\t\t}\n\n\t\tvar texture = new THREE.CubeTexture();\n\n\t\ttexture.type = this.type;\n\n\t\tswitch ( texture.type ) {\n\n\t\t\tcase THREE.UnsignedByteType:\n\n\t\t\t\ttexture.encoding = THREE.RGBEEncoding;\n\t\t\t\ttexture.format = THREE.RGBAFormat;\n\t\t\t\ttexture.minFilter = THREE.NearestFilter;\n\t\t\t\ttexture.magFilter = THREE.NearestFilter;\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\tbreak;\n\n\t\t\tcase THREE.FloatType:\n\n\t\t\t\ttexture.encoding = THREE.LinearEncoding;\n\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\t\t\t\ttexture.magFilter = THREE.LinearFilter;\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\tbreak;\n\n\t\t\tcase THREE.HalfFloatType:\n\n\t\t\t\ttexture.encoding = THREE.LinearEncoding;\n\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\t\t\t\ttexture.magFilter = THREE.LinearFilter;\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadHDRData( i, onLoad, onProgress, onError ) {\n\n\t\t\tnew THREE.FileLoader( scope.manager )\n\t\t\t\t.setPath( scope.path )\n\t\t\t\t.setResponseType( 'arraybuffer' )\n\t\t\t\t.setWithCredentials( scope.withCredentials )\n\t\t\t\t.load( urls[ i ], function ( buffer ) {\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tvar texData = scope.hdrLoader.parse( buffer );\n\n\t\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\t\tif ( texData.data !== undefined ) {\n\n\t\t\t\t\t\tvar dataTexture = new THREE.DataTexture( texData.data, texData.width, texData.height );\n\n\t\t\t\t\t\tdataTexture.type = texture.type;\n\t\t\t\t\t\tdataTexture.encoding = texture.encoding;\n\t\t\t\t\t\tdataTexture.format = texture.format;\n\t\t\t\t\t\tdataTexture.minFilter = texture.minFilter;\n\t\t\t\t\t\tdataTexture.magFilter = texture.magFilter;\n\t\t\t\t\t\tdataTexture.generateMipmaps = texture.generateMipmaps;\n\n\t\t\t\t\t\ttexture.images[ i ] = dataTexture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; i ++ ) {\n\n\t\t\tloadHDRData( i, onLoad, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\tthis.hdrLoader.setDataType( value );\n\n\t\treturn this;\n\n\t}\n\n} );\n"]}