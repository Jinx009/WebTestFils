{"version":3,"sources":["3MFLoader.js"],"names":[],"mappings":"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","file":"3MFLoader-compiled.js","sourcesContent":["console.warn( \"THREE.3MFLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n *\n * 3D Manufacturing Format (3MF) specification: https://3mf.io/specification/\n *\n * The following features from the core specification are supported:\n *\n * - 3D Models\n * - Object Resources (Meshes and Components)\n * - Material Resources (Base Materials)\n *\n * 3MF Materials and Properties Extension are only partially supported.\n *\n * - Texture 2D\n * - Texture 2D Groups\n * - Color Groups (Vertex Colors)\n * - Metallic Display Properties (PBR)\n */\n\nTHREE.ThreeMFLoader = function ( manager ) {\n\n\tTHREE.Loader.call( this, manager );\n\n\tthis.availableExtensions = [];\n\n};\n\nTHREE.ThreeMFLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\tconstructor: THREE.ThreeMFLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( data ) {\n\n\t\tvar scope = this;\n\t\tvar textureLoader = new THREE.TextureLoader( this.manager );\n\n\t\tfunction loadDocument( data ) {\n\n\t\t\tvar zip = null;\n\t\t\tvar file = null;\n\n\t\t\tvar relsName;\n\t\t\tvar modelRelsName;\n\t\t\tvar modelPartNames = [];\n\t\t\tvar printTicketPartNames = [];\n\t\t\tvar texturesPartNames = [];\n\t\t\tvar otherPartNames = [];\n\n\t\t\tvar rels;\n\t\t\tvar modelRels;\n\t\t\tvar modelParts = {};\n\t\t\tvar printTicketParts = {};\n\t\t\tvar texturesParts = {};\n\t\t\tvar otherParts = {};\n\n\t\t\ttry {\n\n\t\t\t\tzip = new JSZip( data ); // eslint-disable-line no-undef\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( e instanceof ReferenceError ) {\n\n\t\t\t\t\tconsole.error( 'THREE.3MFLoader: jszip missing and file is compressed.' );\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( file in zip.files ) {\n\n\t\t\t\tif ( file.match( /\\_rels\\/.rels$/ ) ) {\n\n\t\t\t\t\trelsName = file;\n\n\t\t\t\t} else if ( file.match( /3D\\/_rels\\/.*\\.model\\.rels$/ ) ) {\n\n\t\t\t\t\tmodelRelsName = file;\n\n\t\t\t\t} else if ( file.match( /^3D\\/.*\\.model$/ ) ) {\n\n\t\t\t\t\tmodelPartNames.push( file );\n\n\t\t\t\t} else if ( file.match( /^3D\\/Metadata\\/.*\\.xml$/ ) ) {\n\n\t\t\t\t\tprintTicketPartNames.push( file );\n\n\t\t\t\t} else if ( file.match( /^3D\\/Textures?\\/.*/ ) ) {\n\n\t\t\t\t\ttexturesPartNames.push( file );\n\n\t\t\t\t} else if ( file.match( /^3D\\/Other\\/.*/ ) ) {\n\n\t\t\t\t\totherPartNames.push( file );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar relsView = new Uint8Array( zip.file( relsName ).asArrayBuffer() );\n\t\t\tvar relsFileText = THREE.LoaderUtils.decodeText( relsView );\n\t\t\trels = parseRelsXml( relsFileText );\n\n\t\t\t//\n\n\t\t\tif ( modelRelsName ) {\n\n\t\t\t\tvar relsView = new Uint8Array( zip.file( modelRelsName ).asArrayBuffer() );\n\t\t\t\tvar relsFileText = THREE.LoaderUtils.decodeText( relsView );\n\t\t\t\tmodelRels = parseRelsXml( relsFileText );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < modelPartNames.length; i ++ ) {\n\n\t\t\t\tvar modelPart = modelPartNames[ i ];\n\t\t\t\tvar view = new Uint8Array( zip.file( modelPart ).asArrayBuffer() );\n\n\t\t\t\tvar fileText = THREE.LoaderUtils.decodeText( view );\n\t\t\t\tvar xmlData = new DOMParser().parseFromString( fileText, 'application/xml' );\n\n\t\t\t\tif ( xmlData.documentElement.nodeName.toLowerCase() !== 'model' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.3MFLoader: Error loading 3MF - no 3MF document found: ', modelPart );\n\n\t\t\t\t}\n\n\t\t\t\tvar modelNode = xmlData.querySelector( 'model' );\n\t\t\t\tvar extensions = {};\n\n\t\t\t\tfor ( var i = 0; i < modelNode.attributes.length; i ++ ) {\n\n\t\t\t\t\tvar attr = modelNode.attributes[ i ];\n\t\t\t\t\tif ( attr.name.match( /^xmlns:(.+)$/ ) ) {\n\n\t\t\t\t\t\textensions[ attr.value ] = RegExp.$1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar modelData = parseModelNode( modelNode );\n\t\t\t\tmodelData[ 'xml' ] = modelNode;\n\n\t\t\t\tif ( 0 < Object.keys( extensions ).length ) {\n\n\t\t\t\t\tmodelData[ 'extensions' ] = extensions;\n\n\t\t\t\t}\n\n\t\t\t\tmodelParts[ modelPart ] = modelData;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < texturesPartNames.length; i ++ ) {\n\n\t\t\t\tvar texturesPartName = texturesPartNames[ i ];\n\t\t\t\ttexturesParts[ texturesPartName ] = zip.file( texturesPartName ).asArrayBuffer();\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\trels: rels,\n\t\t\t\tmodelRels: modelRels,\n\t\t\t\tmodel: modelParts,\n\t\t\t\tprintTicket: printTicketParts,\n\t\t\t\ttexture: texturesParts,\n\t\t\t\tother: otherParts\n\t\t\t};\n\n\t\t}\n\n\t\tfunction parseRelsXml( relsFileText ) {\n\n\t\t\tvar relationships = [];\n\n\t\t\tvar relsXmlData = new DOMParser().parseFromString( relsFileText, 'application/xml' );\n\n\t\t\tvar relsNodes = relsXmlData.querySelectorAll( 'Relationship' );\n\n\t\t\tfor ( var i = 0; i < relsNodes.length; i ++ ) {\n\n\t\t\t\tvar relsNode = relsNodes[ i ];\n\n\t\t\t\tvar relationship = {\n\t\t\t\t\ttarget: relsNode.getAttribute( 'Target' ), //required\n\t\t\t\t\tid: relsNode.getAttribute( 'Id' ), //required\n\t\t\t\t\ttype: relsNode.getAttribute( 'Type' ) //required\n\t\t\t\t};\n\n\t\t\t\trelationships.push( relationship );\n\n\t\t\t}\n\n\t\t\treturn relationships;\n\n\t\t}\n\n\t\tfunction parseMetadataNodes( metadataNodes ) {\n\n\t\t\tvar metadataData = {};\n\n\t\t\tfor ( var i = 0; i < metadataNodes.length; i ++ ) {\n\n\t\t\t\tvar metadataNode = metadataNodes[ i ];\n\t\t\t\tvar name = metadataNode.getAttribute( 'name' );\n\t\t\t\tvar validNames = [\n\t\t\t\t\t'Title',\n\t\t\t\t\t'Designer',\n\t\t\t\t\t'Description',\n\t\t\t\t\t'Copyright',\n\t\t\t\t\t'LicenseTerms',\n\t\t\t\t\t'Rating',\n\t\t\t\t\t'CreationDate',\n\t\t\t\t\t'ModificationDate'\n\t\t\t\t];\n\n\t\t\t\tif ( 0 <= validNames.indexOf( name ) ) {\n\n\t\t\t\t\tmetadataData[ name ] = metadataNode.textContent;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn metadataData;\n\n\t\t}\n\n\t\tfunction parseBasematerialsNode( basematerialsNode ) {\n\n\t\t\tvar basematerialsData = {\n\t\t\t\tid: basematerialsNode.getAttribute( 'id' ), // required\n\t\t\t\tbasematerials: []\n\t\t\t};\n\n\t\t\tvar basematerialNodes = basematerialsNode.querySelectorAll( 'base' );\n\n\t\t\tfor ( var i = 0; i < basematerialNodes.length; i ++ ) {\n\n\t\t\t\tvar basematerialNode = basematerialNodes[ i ];\n\t\t\t\tvar basematerialData = parseBasematerialNode( basematerialNode );\n\t\t\t\tbasematerialData.index = i; // the order and count of the material nodes form an implicit 0-based index\n\t\t\t\tbasematerialsData.basematerials.push( basematerialData );\n\n\t\t\t}\n\n\t\t\treturn basematerialsData;\n\n\t\t}\n\n\t\tfunction parseTexture2DNode( texture2DNode ) {\n\n\t\t\tvar texture2dData = {\n\t\t\t\tid: texture2DNode.getAttribute( 'id' ), // required\n\t\t\t\tpath: texture2DNode.getAttribute( 'path' ), // required\n\t\t\t\tcontenttype: texture2DNode.getAttribute( 'contenttype' ), // required\n\t\t\t\ttilestyleu: texture2DNode.getAttribute( 'tilestyleu' ),\n\t\t\t\ttilestylev: texture2DNode.getAttribute( 'tilestylev' ),\n\t\t\t\tfilter: texture2DNode.getAttribute( 'filter' ),\n\t\t\t};\n\n\t\t\treturn texture2dData;\n\n\t\t}\n\n\t\tfunction parseTextures2DGroupNode( texture2DGroupNode ) {\n\n\t\t\tvar texture2DGroupData = {\n\t\t\t\tid: texture2DGroupNode.getAttribute( 'id' ), // required\n\t\t\t\ttexid: texture2DGroupNode.getAttribute( 'texid' ), // required\n\t\t\t\tdisplaypropertiesid: texture2DGroupNode.getAttribute( 'displaypropertiesid' )\n\t\t\t};\n\n\t\t\tvar tex2coordNodes = texture2DGroupNode.querySelectorAll( 'tex2coord' );\n\n\t\t\tvar uvs = [];\n\n\t\t\tfor ( var i = 0; i < tex2coordNodes.length; i ++ ) {\n\n\t\t\t\tvar tex2coordNode = tex2coordNodes[ i ];\n\t\t\t\tvar u = tex2coordNode.getAttribute( 'u' );\n\t\t\t\tvar v = tex2coordNode.getAttribute( 'v' );\n\n\t\t\t\tuvs.push( parseFloat( u ), parseFloat( v ) );\n\n\t\t\t}\n\n\t\t\ttexture2DGroupData[ 'uvs' ] = new Float32Array( uvs );\n\n\t\t\treturn texture2DGroupData;\n\n\t\t}\n\n\t\tfunction parseColorGroupNode( colorGroupNode ) {\n\n\t\t\tvar colorGroupData = {\n\t\t\t\tid: colorGroupNode.getAttribute( 'id' ), // required\n\t\t\t\tdisplaypropertiesid: colorGroupNode.getAttribute( 'displaypropertiesid' )\n\t\t\t};\n\n\t\t\tvar colorNodes = colorGroupNode.querySelectorAll( 'color' );\n\n\t\t\tvar colors = [];\n\t\t\tvar colorObject = new THREE.Color();\n\n\t\t\tfor ( var i = 0; i < colorNodes.length; i ++ ) {\n\n\t\t\t\tvar colorNode = colorNodes[ i ];\n\t\t\t\tvar color = colorNode.getAttribute( 'color' );\n\n\t\t\t\tcolorObject.setStyle( color.substring( 0, 7 ) );\n\t\t\t\tcolorObject.convertSRGBToLinear(); // color is in sRGB\n\n\t\t\t\tcolors.push( colorObject.r, colorObject.g, colorObject.b );\n\n\t\t\t}\n\n\t\t\tcolorGroupData[ 'colors' ] = new Float32Array( colors );\n\n\t\t\treturn colorGroupData;\n\n\t\t}\n\n\t\tfunction parseMetallicDisplaypropertiesNode( metallicDisplaypropetiesNode ) {\n\n\t\t\tvar metallicDisplaypropertiesData = {\n\t\t\t\tid: metallicDisplaypropetiesNode.getAttribute( 'id' ) // required\n\t\t\t};\n\n\t\t\tvar metallicNodes = metallicDisplaypropetiesNode.querySelectorAll( 'pbmetallic' );\n\n\t\t\tvar metallicData = [];\n\n\t\t\tfor ( var i = 0; i < metallicNodes.length; i ++ ) {\n\n\t\t\t\tvar metallicNode = metallicNodes[ i ];\n\n\t\t\t\tmetallicData.push( {\n\t\t\t\t\tname: metallicNode.getAttribute( 'name' ), // required\n\t\t\t\t\tmetallicness: parseFloat( metallicNode.getAttribute( 'metallicness' ) ), // required\n\t\t\t\t\troughness: parseFloat( metallicNode.getAttribute( 'roughness' ) ) // required\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tmetallicDisplaypropertiesData.data = metallicData;\n\n\t\t\treturn metallicDisplaypropertiesData;\n\n\t\t}\n\n\t\tfunction parseBasematerialNode( basematerialNode ) {\n\n\t\t\tvar basematerialData = {};\n\n\t\t\tbasematerialData[ 'name' ] = basematerialNode.getAttribute( 'name' ); // required\n\t\t\tbasematerialData[ 'displaycolor' ] = basematerialNode.getAttribute( 'displaycolor' ); // required\n\t\t\tbasematerialData[ 'displaypropertiesid' ] = basematerialNode.getAttribute( 'displaypropertiesid' );\n\n\t\t\treturn basematerialData;\n\n\t\t}\n\n\t\tfunction parseMeshNode( meshNode ) {\n\n\t\t\tvar meshData = {};\n\n\t\t\tvar vertices = [];\n\t\t\tvar vertexNodes = meshNode.querySelectorAll( 'vertices vertex' );\n\n\t\t\tfor ( var i = 0; i < vertexNodes.length; i ++ ) {\n\n\t\t\t\tvar vertexNode = vertexNodes[ i ];\n\t\t\t\tvar x = vertexNode.getAttribute( 'x' );\n\t\t\t\tvar y = vertexNode.getAttribute( 'y' );\n\t\t\t\tvar z = vertexNode.getAttribute( 'z' );\n\n\t\t\t\tvertices.push( parseFloat( x ), parseFloat( y ), parseFloat( z ) );\n\n\t\t\t}\n\n\t\t\tmeshData[ 'vertices' ] = new Float32Array( vertices );\n\n\t\t\tvar triangleProperties = [];\n\t\t\tvar triangles = [];\n\t\t\tvar triangleNodes = meshNode.querySelectorAll( 'triangles triangle' );\n\n\t\t\tfor ( var i = 0; i < triangleNodes.length; i ++ ) {\n\n\t\t\t\tvar triangleNode = triangleNodes[ i ];\n\t\t\t\tvar v1 = triangleNode.getAttribute( 'v1' );\n\t\t\t\tvar v2 = triangleNode.getAttribute( 'v2' );\n\t\t\t\tvar v3 = triangleNode.getAttribute( 'v3' );\n\t\t\t\tvar p1 = triangleNode.getAttribute( 'p1' );\n\t\t\t\tvar p2 = triangleNode.getAttribute( 'p2' );\n\t\t\t\tvar p3 = triangleNode.getAttribute( 'p3' );\n\t\t\t\tvar pid = triangleNode.getAttribute( 'pid' );\n\n\t\t\t\tvar triangleProperty = {};\n\n\t\t\t\ttriangleProperty[ 'v1' ] = parseInt( v1, 10 );\n\t\t\t\ttriangleProperty[ 'v2' ] = parseInt( v2, 10 );\n\t\t\t\ttriangleProperty[ 'v3' ] = parseInt( v3, 10 );\n\n\t\t\t\ttriangles.push( triangleProperty[ 'v1' ], triangleProperty[ 'v2' ], triangleProperty[ 'v3' ] );\n\n\t\t\t\t// optional\n\n\t\t\t\tif ( p1 ) {\n\n\t\t\t\t\ttriangleProperty[ 'p1' ] = parseInt( p1, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( p2 ) {\n\n\t\t\t\t\ttriangleProperty[ 'p2' ] = parseInt( p2, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( p3 ) {\n\n\t\t\t\t\ttriangleProperty[ 'p3' ] = parseInt( p3, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pid ) {\n\n\t\t\t\t\ttriangleProperty[ 'pid' ] = pid;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 0 < Object.keys( triangleProperty ).length ) {\n\n\t\t\t\t\ttriangleProperties.push( triangleProperty );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmeshData[ 'triangleProperties' ] = triangleProperties;\n\t\t\tmeshData[ 'triangles' ] = new Uint32Array( triangles );\n\n\t\t\treturn meshData;\n\n\t\t}\n\n\t\tfunction parseComponentsNode( componentsNode ) {\n\n\t\t\tvar components = [];\n\n\t\t\tvar componentNodes = componentsNode.querySelectorAll( 'component' );\n\n\t\t\tfor ( var i = 0; i < componentNodes.length; i ++ ) {\n\n\t\t\t\tvar componentNode = componentNodes[ i ];\n\t\t\t\tvar componentData = parseComponentNode( componentNode );\n\t\t\t\tcomponents.push( componentData );\n\n\t\t\t}\n\n\t\t\treturn components;\n\n\t\t}\n\n\t\tfunction parseComponentNode( componentNode ) {\n\n\t\t\tvar componentData = {};\n\n\t\t\tcomponentData[ 'objectId' ] = componentNode.getAttribute( 'objectid' ); // required\n\n\t\t\tvar transform = componentNode.getAttribute( 'transform' );\n\n\t\t\tif ( transform ) {\n\n\t\t\t\tcomponentData[ 'transform' ] = parseTransform( transform );\n\n\t\t\t}\n\n\t\t\treturn componentData;\n\n\t\t}\n\n\t\tfunction parseTransform( transform ) {\n\n\t\t\tvar t = [];\n\t\t\ttransform.split( ' ' ).forEach( function ( s ) {\n\n\t\t\t\tt.push( parseFloat( s ) );\n\n\t\t\t} );\n\n\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\tt[ 0 ], t[ 3 ], t[ 6 ], t[ 9 ],\n\t\t\t\tt[ 1 ], t[ 4 ], t[ 7 ], t[ 10 ],\n\t\t\t\tt[ 2 ], t[ 5 ], t[ 8 ], t[ 11 ],\n\t\t\t\t 0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\n\t\t\treturn matrix;\n\n\t\t}\n\n\t\tfunction parseObjectNode( objectNode ) {\n\n\t\t\tvar objectData = {\n\t\t\t\ttype: objectNode.getAttribute( 'type' )\n\t\t\t};\n\n\t\t\tvar id = objectNode.getAttribute( 'id' );\n\n\t\t\tif ( id ) {\n\n\t\t\t\tobjectData[ 'id' ] = id;\n\n\t\t\t}\n\n\t\t\tvar pid = objectNode.getAttribute( 'pid' );\n\n\t\t\tif ( pid ) {\n\n\t\t\t\tobjectData[ 'pid' ] = pid;\n\n\t\t\t}\n\n\t\t\tvar pindex = objectNode.getAttribute( 'pindex' );\n\n\t\t\tif ( pindex ) {\n\n\t\t\t\tobjectData[ 'pindex' ] = pindex;\n\n\t\t\t}\n\n\t\t\tvar thumbnail = objectNode.getAttribute( 'thumbnail' );\n\n\t\t\tif ( thumbnail ) {\n\n\t\t\t\tobjectData[ 'thumbnail' ] = thumbnail;\n\n\t\t\t}\n\n\t\t\tvar partnumber = objectNode.getAttribute( 'partnumber' );\n\n\t\t\tif ( partnumber ) {\n\n\t\t\t\tobjectData[ 'partnumber' ] = partnumber;\n\n\t\t\t}\n\n\t\t\tvar name = objectNode.getAttribute( 'name' );\n\n\t\t\tif ( name ) {\n\n\t\t\t\tobjectData[ 'name' ] = name;\n\n\t\t\t}\n\n\t\t\tvar meshNode = objectNode.querySelector( 'mesh' );\n\n\t\t\tif ( meshNode ) {\n\n\t\t\t\tobjectData[ 'mesh' ] = parseMeshNode( meshNode );\n\n\t\t\t}\n\n\t\t\tvar componentsNode = objectNode.querySelector( 'components' );\n\n\t\t\tif ( componentsNode ) {\n\n\t\t\t\tobjectData[ 'components' ] = parseComponentsNode( componentsNode );\n\n\t\t\t}\n\n\t\t\treturn objectData;\n\n\t\t}\n\n\t\tfunction parseResourcesNode( resourcesNode ) {\n\n\t\t\tvar resourcesData = {};\n\n\t\t\tresourcesData[ 'basematerials' ] = {};\n\t\t\tvar basematerialsNodes = resourcesNode.querySelectorAll( 'basematerials' );\n\n\t\t\tfor ( var i = 0; i < basematerialsNodes.length; i ++ ) {\n\n\t\t\t\tvar basematerialsNode = basematerialsNodes[ i ];\n\t\t\t\tvar basematerialsData = parseBasematerialsNode( basematerialsNode );\n\t\t\t\tresourcesData[ 'basematerials' ][ basematerialsData[ 'id' ] ] = basematerialsData;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tresourcesData[ 'texture2d' ] = {};\n\t\t\tvar textures2DNodes = resourcesNode.querySelectorAll( 'texture2d' );\n\n\t\t\tfor ( var i = 0; i < textures2DNodes.length; i ++ ) {\n\n\t\t\t\tvar textures2DNode = textures2DNodes[ i ];\n\t\t\t\tvar texture2DData = parseTexture2DNode( textures2DNode );\n\t\t\t\tresourcesData[ 'texture2d' ][ texture2DData[ 'id' ] ] = texture2DData;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tresourcesData[ 'colorgroup' ] = {};\n\t\t\tvar colorGroupNodes = resourcesNode.querySelectorAll( 'colorgroup' );\n\n\t\t\tfor ( var i = 0; i < colorGroupNodes.length; i ++ ) {\n\n\t\t\t\tvar colorGroupNode = colorGroupNodes[ i ];\n\t\t\t\tvar colorGroupData = parseColorGroupNode( colorGroupNode );\n\t\t\t\tresourcesData[ 'colorgroup' ][ colorGroupData[ 'id' ] ] = colorGroupData;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tresourcesData[ 'pbmetallicdisplayproperties' ] = {};\n\t\t\tvar pbmetallicdisplaypropertiesNodes = resourcesNode.querySelectorAll( 'pbmetallicdisplayproperties' );\n\n\t\t\tfor ( var i = 0; i < pbmetallicdisplaypropertiesNodes.length; i ++ ) {\n\n\t\t\t\tvar pbmetallicdisplaypropertiesNode = pbmetallicdisplaypropertiesNodes[ i ];\n\t\t\t\tvar pbmetallicdisplaypropertiesData = parseMetallicDisplaypropertiesNode( pbmetallicdisplaypropertiesNode );\n\t\t\t\tresourcesData[ 'pbmetallicdisplayproperties' ][ pbmetallicdisplaypropertiesData[ 'id' ] ] = pbmetallicdisplaypropertiesData;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tresourcesData[ 'texture2dgroup' ] = {};\n\t\t\tvar textures2DGroupNodes = resourcesNode.querySelectorAll( 'texture2dgroup' );\n\n\t\t\tfor ( var i = 0; i < textures2DGroupNodes.length; i ++ ) {\n\n\t\t\t\tvar textures2DGroupNode = textures2DGroupNodes[ i ];\n\t\t\t\tvar textures2DGroupData = parseTextures2DGroupNode( textures2DGroupNode );\n\t\t\t\tresourcesData[ 'texture2dgroup' ][ textures2DGroupData[ 'id' ] ] = textures2DGroupData;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tresourcesData[ 'object' ] = {};\n\t\t\tvar objectNodes = resourcesNode.querySelectorAll( 'object' );\n\n\t\t\tfor ( var i = 0; i < objectNodes.length; i ++ ) {\n\n\t\t\t\tvar objectNode = objectNodes[ i ];\n\t\t\t\tvar objectData = parseObjectNode( objectNode );\n\t\t\t\tresourcesData[ 'object' ][ objectData[ 'id' ] ] = objectData;\n\n\t\t\t}\n\n\t\t\treturn resourcesData;\n\n\t\t}\n\n\t\tfunction parseBuildNode( buildNode ) {\n\n\t\t\tvar buildData = [];\n\t\t\tvar itemNodes = buildNode.querySelectorAll( 'item' );\n\n\t\t\tfor ( var i = 0; i < itemNodes.length; i ++ ) {\n\n\t\t\t\tvar itemNode = itemNodes[ i ];\n\t\t\t\tvar buildItem = {\n\t\t\t\t\tobjectId: itemNode.getAttribute( 'objectid' )\n\t\t\t\t};\n\t\t\t\tvar transform = itemNode.getAttribute( 'transform' );\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tbuildItem[ 'transform' ] = parseTransform( transform );\n\n\t\t\t\t}\n\n\t\t\t\tbuildData.push( buildItem );\n\n\t\t\t}\n\n\t\t\treturn buildData;\n\n\t\t}\n\n\t\tfunction parseModelNode( modelNode ) {\n\n\t\t\tvar modelData = { unit: modelNode.getAttribute( 'unit' ) || 'millimeter' };\n\t\t\tvar metadataNodes = modelNode.querySelectorAll( 'metadata' );\n\n\t\t\tif ( metadataNodes ) {\n\n\t\t\t\tmodelData[ 'metadata' ] = parseMetadataNodes( metadataNodes );\n\n\t\t\t}\n\n\t\t\tvar resourcesNode = modelNode.querySelector( 'resources' );\n\n\t\t\tif ( resourcesNode ) {\n\n\t\t\t\tmodelData[ 'resources' ] = parseResourcesNode( resourcesNode );\n\n\t\t\t}\n\n\t\t\tvar buildNode = modelNode.querySelector( 'build' );\n\n\t\t\tif ( buildNode ) {\n\n\t\t\t\tmodelData[ 'build' ] = parseBuildNode( buildNode );\n\n\t\t\t}\n\n\t\t\treturn modelData;\n\n\t\t}\n\n\t\tfunction buildTexture( texture2dgroup, objects, modelData, textureData ) {\n\n\t\t\tvar texid = texture2dgroup.texid;\n\t\t\tvar texture2ds = modelData.resources.texture2d;\n\t\t\tvar texture2d = texture2ds[ texid ];\n\n\t\t\tif ( texture2d ) {\n\n\t\t\t\tvar data = textureData[ texture2d.path ];\n\t\t\t\tvar type = texture2d.contenttype;\n\n\t\t\t\tvar blob = new Blob( [ data ], { type: type } );\n\t\t\t\tvar sourceURI = URL.createObjectURL( blob );\n\n\t\t\t\tvar texture = textureLoader.load( sourceURI, function () {\n\n\t\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t\t} );\n\n\t\t\t\ttexture.encoding = THREE.sRGBEncoding;\n\n\t\t\t\t// texture parameters\n\n\t\t\t\tswitch ( texture2d.tilestyleu ) {\n\n\t\t\t\t\tcase 'wrap':\n\t\t\t\t\t\ttexture.wrapS = THREE.RepeatWrapping;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mirror':\n\t\t\t\t\t\ttexture.wrapS = THREE.MirroredRepeatWrapping;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'none':\n\t\t\t\t\tcase 'clamp':\n\t\t\t\t\t\ttexture.wrapS = THREE.ClampToEdgeWrapping;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttexture.wrapS = THREE.RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( texture2d.tilestylev ) {\n\n\t\t\t\t\tcase 'wrap':\n\t\t\t\t\t\ttexture.wrapT = THREE.RepeatWrapping;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mirror':\n\t\t\t\t\t\ttexture.wrapT = THREE.MirroredRepeatWrapping;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'none':\n\t\t\t\t\tcase 'clamp':\n\t\t\t\t\t\ttexture.wrapT = THREE.ClampToEdgeWrapping;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttexture.wrapT = THREE.RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( texture2d.filter ) {\n\n\t\t\t\t\tcase 'auto':\n\t\t\t\t\t\ttexture.magFilter = THREE.LinearFilter;\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearMipmapLinearFilter;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'linear':\n\t\t\t\t\t\ttexture.magFilter = THREE.LinearFilter;\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'nearest':\n\t\t\t\t\t\ttexture.magFilter = THREE.NearestFilter;\n\t\t\t\t\t\ttexture.minFilter = THREE.NearestFilter;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttexture.magFilter = THREE.LinearFilter;\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearMipmapLinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\treturn texture;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildBasematerialsMeshes( basematerials, triangleProperties, modelData, meshData, textureData, objectData ) {\n\n\t\t\tvar objectPindex = objectData.pindex;\n\n\t\t\tvar materialMap = {};\n\n\t\t\tfor ( var i = 0, l = triangleProperties.length; i < l; i ++ ) {\n\n\t\t\t\tvar triangleProperty = triangleProperties[ i ];\n\t\t\t\tvar pindex = ( triangleProperty.p1 !== undefined ) ? triangleProperty.p1 : objectPindex;\n\n\t\t\t\tif ( materialMap[ pindex ] === undefined ) materialMap[ pindex ] = [];\n\n\t\t\t\tmaterialMap[ pindex ].push( triangleProperty );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar keys = Object.keys( materialMap );\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, l = keys.length; i < l; i ++ ) {\n\n\t\t\t\tvar materialIndex = keys[ i ];\n\t\t\t\tvar trianglePropertiesProps = materialMap[ materialIndex ];\n\t\t\t\tvar basematerialData = basematerials.basematerials[ materialIndex ];\n\t\t\t\tvar material = getBuild( basematerialData, objects, modelData, textureData, objectData, buildBasematerial );\n\n\t\t\t\t//\n\n\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\tvar positionData = [];\n\n\t\t\t\tvar vertices = meshData.vertices;\n\n\t\t\t\tfor ( var j = 0, jl = trianglePropertiesProps.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar triangleProperty = trianglePropertiesProps[ j ];\n\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 0 ] );\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 1 ] );\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 2 ] );\n\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 0 ] );\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 1 ] );\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 2 ] );\n\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 0 ] );\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 1 ] );\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 2 ] );\n\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positionData, 3 ) );\n\n\t\t\t\t//\n\n\t\t\t\tvar mesh = new THREE.Mesh( geometry, material );\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\treturn meshes;\n\n\t\t}\n\n\t\tfunction buildTexturedMesh( texture2dgroup, triangleProperties, modelData, meshData, textureData, objectData ) {\n\n\t\t\t// geometry\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\tvar positionData = [];\n\t\t\tvar uvData = [];\n\n\t\t\tvar vertices = meshData.vertices;\n\t\t\tvar uvs = texture2dgroup.uvs;\n\n\t\t\tfor ( var i = 0, l = triangleProperties.length; i < l; i ++ ) {\n\n\t\t\t\tvar triangleProperty = triangleProperties[ i ];\n\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 0 ] );\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 1 ] );\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 2 ] );\n\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 0 ] );\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 1 ] );\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 2 ] );\n\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 0 ] );\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 1 ] );\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 2 ] );\n\n\t\t\t\t//\n\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p1 * 2 ) + 0 ] );\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p1 * 2 ) + 1 ] );\n\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p2 * 2 ) + 0 ] );\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p2 * 2 ) + 1 ] );\n\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p3 * 2 ) + 0 ] );\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p3 * 2 ) + 1 ] );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positionData, 3 ) );\n\t\t\tgeometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( uvData, 2 ) );\n\n\t\t\t// material\n\n\t\t\tvar texture = getBuild( texture2dgroup, objects, modelData, textureData, objectData, buildTexture );\n\n\t\t\tvar material = new THREE.MeshPhongMaterial( { map: texture, flatShading: true } );\n\n\t\t\t// mesh\n\n\t\t\tvar mesh = new THREE.Mesh( geometry, material );\n\n\t\t\treturn mesh;\n\n\t\t}\n\n\t\tfunction buildVertexColorMesh( colorgroup, triangleProperties, modelData, meshData, objectData ) {\n\n\t\t\t// geometry\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\tvar positionData = [];\n\t\t\tvar colorData = [];\n\n\t\t\tvar vertices = meshData.vertices;\n\t\t\tvar colors = colorgroup.colors;\n\n\t\t\tfor ( var i = 0, l = triangleProperties.length; i < l; i ++ ) {\n\n\t\t\t\tvar triangleProperty = triangleProperties[ i ];\n\n\t\t\t\tvar v1 = triangleProperty.v1;\n\t\t\t\tvar v2 = triangleProperty.v2;\n\t\t\t\tvar v3 = triangleProperty.v3;\n\n\t\t\t\tpositionData.push( vertices[ ( v1 * 3 ) + 0 ] );\n\t\t\t\tpositionData.push( vertices[ ( v1 * 3 ) + 1 ] );\n\t\t\t\tpositionData.push( vertices[ ( v1 * 3 ) + 2 ] );\n\n\t\t\t\tpositionData.push( vertices[ ( v2 * 3 ) + 0 ] );\n\t\t\t\tpositionData.push( vertices[ ( v2 * 3 ) + 1 ] );\n\t\t\t\tpositionData.push( vertices[ ( v2 * 3 ) + 2 ] );\n\n\t\t\t\tpositionData.push( vertices[ ( v3 * 3 ) + 0 ] );\n\t\t\t\tpositionData.push( vertices[ ( v3 * 3 ) + 1 ] );\n\t\t\t\tpositionData.push( vertices[ ( v3 * 3 ) + 2 ] );\n\n\t\t\t\t//\n\n\t\t\t\tvar p1 = ( triangleProperty.p1 !== undefined ) ? triangleProperty.p1 : objectData.pindex;\n\t\t\t\tvar p2 = ( triangleProperty.p2 !== undefined ) ? triangleProperty.p2 : p1;\n\t\t\t\tvar p3 = ( triangleProperty.p3 !== undefined ) ? triangleProperty.p3 : p1;\n\n\t\t\t\tcolorData.push( colors[ ( p1 * 3 ) + 0 ] );\n\t\t\t\tcolorData.push( colors[ ( p1 * 3 ) + 1 ] );\n\t\t\t\tcolorData.push( colors[ ( p1 * 3 ) + 2 ] );\n\n\t\t\t\tcolorData.push( colors[ ( p2 * 3 ) + 0 ] );\n\t\t\t\tcolorData.push( colors[ ( p2 * 3 ) + 1 ] );\n\t\t\t\tcolorData.push( colors[ ( p2 * 3 ) + 2 ] );\n\n\t\t\t\tcolorData.push( colors[ ( p3 * 3 ) + 0 ] );\n\t\t\t\tcolorData.push( colors[ ( p3 * 3 ) + 1 ] );\n\t\t\t\tcolorData.push( colors[ ( p3 * 3 ) + 2 ] );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positionData, 3 ) );\n\t\t\tgeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colorData, 3 ) );\n\n\t\t\t// material\n\n\t\t\tvar material = new THREE.MeshPhongMaterial( { vertexColors: true, flatShading: true } );\n\n\t\t\t// mesh\n\n\t\t\tvar mesh = new THREE.Mesh( geometry, material );\n\n\t\t\treturn mesh;\n\n\t\t}\n\n\t\tfunction buildDefaultMesh( meshData ) {\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( meshData[ 'triangles' ], 1 ) );\n\t\t\tgeometry.setAttribute( 'position', new THREE.BufferAttribute( meshData[ 'vertices' ], 3 ) );\n\n\t\t\tvar material = new THREE.MeshPhongMaterial( { color: 0xaaaaff, flatShading: true } );\n\n\t\t\tvar mesh = new THREE.Mesh( geometry, material );\n\n\t\t\treturn mesh;\n\n\t\t}\n\n\t\tfunction buildMeshes( resourceMap, modelData, meshData, textureData, objectData ) {\n\n\t\t\tvar keys = Object.keys( resourceMap );\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\t\tvar resourceId = keys[ i ];\n\t\t\t\tvar triangleProperties = resourceMap[ resourceId ];\n\t\t\t\tvar resourceType = getResourceType( resourceId, modelData );\n\n\t\t\t\tswitch ( resourceType ) {\n\n\t\t\t\t\tcase 'material':\n\t\t\t\t\t\tvar basematerials = modelData.resources.basematerials[ resourceId ];\n\t\t\t\t\t\tvar newMeshes = buildBasematerialsMeshes( basematerials, triangleProperties, modelData, meshData, textureData, objectData );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = newMeshes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmeshes.push( newMeshes[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tvar texture2dgroup = modelData.resources.texture2dgroup[ resourceId ];\n\t\t\t\t\t\tmeshes.push( buildTexturedMesh( texture2dgroup, triangleProperties, modelData, meshData, textureData, objectData ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tvar colorgroup = modelData.resources.colorgroup[ resourceId ];\n\t\t\t\t\t\tmeshes.push( buildVertexColorMesh( colorgroup, triangleProperties, modelData, meshData, objectData ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'default':\n\t\t\t\t\t\tmeshes.push( buildDefaultMesh( meshData ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.3MFLoader: Unsupported resource type.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn meshes;\n\n\t\t}\n\n\t\tfunction getResourceType( pid, modelData ) {\n\n\t\t\tif ( modelData.resources.texture2dgroup[ pid ] !== undefined ) {\n\n\t\t\t\treturn 'texture';\n\n\t\t\t} else if ( modelData.resources.basematerials[ pid ] !== undefined ) {\n\n\t\t\t\treturn 'material';\n\n\t\t\t} else if ( modelData.resources.colorgroup[ pid ] !== undefined ) {\n\n\t\t\t\treturn 'vertexColors';\n\n\t\t\t} else if ( pid === 'default' ) {\n\n\t\t\t\treturn 'default';\n\n\t\t\t} else {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction analyzeObject( modelData, meshData, objectData ) {\n\n\t\t\tvar resourceMap = {};\n\n\t\t\tvar triangleProperties = meshData[ 'triangleProperties' ];\n\n\t\t\tvar objectPid = objectData.pid;\n\n\t\t\tfor ( var i = 0, l = triangleProperties.length; i < l; i ++ ) {\n\n\t\t\t\tvar triangleProperty = triangleProperties[ i ];\n\t\t\t\tvar pid = ( triangleProperty.pid !== undefined ) ? triangleProperty.pid : objectPid;\n\n\t\t\t\tif ( pid === undefined ) pid = 'default';\n\n\t\t\t\tif ( resourceMap[ pid ] === undefined ) resourceMap[ pid ] = [];\n\n\t\t\t\tresourceMap[ pid ].push( triangleProperty );\n\n\t\t\t}\n\n\t\t\treturn resourceMap;\n\n\t\t}\n\n\t\tfunction buildGroup( meshData, objects, modelData, textureData, objectData ) {\n\n\t\t\tvar group = new THREE.Group();\n\n\t\t\tvar resourceMap = analyzeObject( modelData, meshData, objectData );\n\t\t\tvar meshes = buildMeshes( resourceMap, modelData, meshData, textureData, objectData );\n\n\t\t\tfor ( var i = 0, l = meshes.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t}\n\n\t\tfunction applyExtensions( extensions, meshData, modelXml ) {\n\n\t\t\tif ( ! extensions ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar availableExtensions = [];\n\t\t\tvar keys = Object.keys( extensions );\n\n\t\t\tfor ( var i = 0; i < keys.length; i ++ ) {\n\n\t\t\t\tvar ns = keys[ i ];\n\n\t\t\t\tfor ( var j = 0; j < scope.availableExtensions.length; j ++ ) {\n\n\t\t\t\t\tvar extension = scope.availableExtensions[ j ];\n\n\t\t\t\t\tif ( extension.ns === ns ) {\n\n\t\t\t\t\t\tavailableExtensions.push( extension );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < availableExtensions.length; i ++ ) {\n\n\t\t\t\tvar extension = availableExtensions[ i ];\n\t\t\t\textension.apply( modelXml, extensions[ extension[ 'ns' ] ], meshData );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getBuild( data, objects, modelData, textureData, objectData, builder ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\tdata.build = builder( data, objects, modelData, textureData, objectData );\n\n\t\t\treturn data.build;\n\n\t\t}\n\n\t\tfunction buildBasematerial( materialData, objects, modelData ) {\n\n\t\t\tvar material;\n\n\t\t\tvar displaypropertiesid = materialData.displaypropertiesid;\n\t\t\tvar pbmetallicdisplayproperties = modelData.resources.pbmetallicdisplayproperties;\n\n\t\t\tif ( displaypropertiesid !== null && pbmetallicdisplayproperties[ displaypropertiesid ] !== undefined ) {\n\n\t\t\t\t// metallic display property, use StandardMaterial\n\n\t\t\t\tvar pbmetallicdisplayproperty = pbmetallicdisplayproperties[ displaypropertiesid ];\n\t\t\t\tvar metallicData = pbmetallicdisplayproperty.data[ materialData.index ];\n\n\t\t\t\tmaterial = new THREE.MeshStandardMaterial( { flatShading: true, roughness: metallicData.roughness, metalness: metallicData.metallicness } );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use PhongMaterial\n\n\t\t\t\tmaterial = new THREE.MeshPhongMaterial( { flatShading: true } );\n\n\t\t\t}\n\n\t\t\tmaterial.name = materialData.name;\n\n\t\t\t// displaycolor MUST be specified with a value of a 6 or 8 digit hexadecimal number, e.g. \"#RRGGBB\" or \"#RRGGBBAA\"\n\n\t\t\tvar displaycolor = materialData.displaycolor;\n\n\t\t\tvar color = displaycolor.substring( 0, 7 );\n\t\t\tmaterial.color.setStyle( color );\n\t\t\tmaterial.color.convertSRGBToLinear(); // displaycolor is in sRGB\n\n\t\t\t// process alpha if set\n\n\t\t\tif ( displaycolor.length === 9 ) {\n\n\t\t\t\tmaterial.opacity = parseInt( displaycolor.charAt( 7 ) + displaycolor.charAt( 8 ), 16 ) / 255;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction buildComposite( compositeData, objects, modelData, textureData ) {\n\n\t\t\tvar composite = new THREE.Group();\n\n\t\t\tfor ( var j = 0; j < compositeData.length; j ++ ) {\n\n\t\t\t\tvar component = compositeData[ j ];\n\t\t\t\tvar build = objects[ component.objectId ];\n\n\t\t\t\tif ( build === undefined ) {\n\n\t\t\t\t\tbuildObject( component.objectId, objects, modelData, textureData );\n\t\t\t\t\tbuild = objects[ component.objectId ];\n\n\t\t\t\t}\n\n\t\t\t\tvar object3D = build.clone();\n\n\t\t\t\t// apply component transform\n\n\t\t\t\tvar transform = component.transform;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tobject3D.applyMatrix4( transform );\n\n\t\t\t\t}\n\n\t\t\t\tcomposite.add( object3D );\n\n\t\t\t}\n\n\t\t\treturn composite;\n\n\t\t}\n\n\t\tfunction buildObject( objectId, objects, modelData, textureData ) {\n\n\t\t\tvar objectData = modelData[ 'resources' ][ 'object' ][ objectId ];\n\n\t\t\tif ( objectData[ 'mesh' ] ) {\n\n\t\t\t\tvar meshData = objectData[ 'mesh' ];\n\n\t\t\t\tvar extensions = modelData[ 'extensions' ];\n\t\t\t\tvar modelXml = modelData[ 'xml' ];\n\n\t\t\t\tapplyExtensions( extensions, meshData, modelXml );\n\n\t\t\t\tobjects[ objectData.id ] = getBuild( meshData, objects, modelData, textureData, objectData, buildGroup );\n\n\t\t\t} else {\n\n\t\t\t\tvar compositeData = objectData[ 'components' ];\n\n\t\t\t\tobjects[ objectData.id ] = getBuild( compositeData, objects, modelData, textureData, objectData, buildComposite );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildObjects( data3mf ) {\n\n\t\t\tvar modelsData = data3mf.model;\n\t\t\tvar modelRels = data3mf.modelRels;\n\t\t\tvar objects = {};\n\t\t\tvar modelsKeys = Object.keys( modelsData );\n\t\t\tvar textureData = {};\n\n\t\t\t// evaluate model relationships to textures\n\n\t\t\tif ( modelRels ) {\n\n\t\t\t\tfor ( var i = 0, l = modelRels.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar modelRel = modelRels[ i ];\n\t\t\t\t\tvar textureKey = modelRel.target.substring( 1 );\n\n\t\t\t\t\tif ( data3mf.texture[ textureKey ] ) {\n\n\t\t\t\t\t\ttextureData[ modelRel.target ] = data3mf.texture[ textureKey ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// start build\n\n\t\t\tfor ( var i = 0; i < modelsKeys.length; i ++ ) {\n\n\t\t\t\tvar modelsKey = modelsKeys[ i ];\n\t\t\t\tvar modelData = modelsData[ modelsKey ];\n\n\t\t\t\tvar objectIds = Object.keys( modelData[ 'resources' ][ 'object' ] );\n\n\t\t\t\tfor ( var j = 0; j < objectIds.length; j ++ ) {\n\n\t\t\t\t\tvar objectId = objectIds[ j ];\n\n\t\t\t\t\tbuildObject( objectId, objects, modelData, textureData );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn objects;\n\n\t\t}\n\n\t\tfunction build( objects, data3mf ) {\n\n\t\t\tvar group = new THREE.Group();\n\n\t\t\tvar relationship = data3mf[ 'rels' ][ 0 ];\n\t\t\tvar buildData = data3mf.model[ relationship[ 'target' ].substring( 1 ) ][ 'build' ];\n\n\t\t\tfor ( var i = 0; i < buildData.length; i ++ ) {\n\n\t\t\t\tvar buildItem = buildData[ i ];\n\t\t\t\tvar object3D = objects[ buildItem[ 'objectId' ] ];\n\n\t\t\t\t// apply transform\n\n\t\t\t\tvar transform = buildItem[ 'transform' ];\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tobject3D.applyMatrix4( transform );\n\n\t\t\t\t}\n\n\t\t\t\tgroup.add( object3D );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t}\n\n\t\tvar data3mf = loadDocument( data );\n\t\tvar objects = buildObjects( data3mf );\n\n\t\treturn build( objects, data3mf );\n\n\t},\n\n\taddExtension: function ( extension ) {\n\n\t\tthis.availableExtensions.push( extension );\n\n\t}\n\n} );\n"]}