{"version":3,"sources":["AMFLoader.js"],"names":[],"mappings":"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","file":"AMFLoader-compiled.js","sourcesContent":["console.warn( \"THREE.AMFLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Description: Early release of an AMF Loader following the pattern of the\n * example loaders in the three.js project.\n *\n * More information about the AMF format: http://amf.wikispaces.com\n *\n * Usage:\n *\tvar loader = new AMFLoader();\n *\tloader.load('/path/to/project.amf', function(objecttree) {\n *\t\tscene.add(objecttree);\n *\t});\n *\n * Materials now supported, material colors supported\n * Zip support, requires jszip\n * No constellation support (yet)!\n *\n */\n\nTHREE.AMFLoader = function ( manager ) {\n\n\tTHREE.Loader.call( this, manager );\n\n};\n\nTHREE.AMFLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\tconstructor: THREE.AMFLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( data ) {\n\n\t\tfunction loadDocument( data ) {\n\n\t\t\tvar view = new DataView( data );\n\t\t\tvar magic = String.fromCharCode( view.getUint8( 0 ), view.getUint8( 1 ) );\n\n\t\t\tif ( magic === 'PK' ) {\n\n\t\t\t\tvar zip = null;\n\t\t\t\tvar file = null;\n\n\t\t\t\tconsole.log( 'THREE.AMFLoader: Loading Zip' );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tzip = new JSZip( data ); // eslint-disable-line no-undef\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( e instanceof ReferenceError ) {\n\n\t\t\t\t\t\tconsole.log( 'THREE.AMFLoader: jszip missing and file is compressed.' );\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( file in zip.files ) {\n\n\t\t\t\t\tif ( file.toLowerCase().substr( - 4 ) === '.amf' ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.log( 'THREE.AMFLoader: Trying to load file asset: ' + file );\n\t\t\t\tview = new DataView( zip.file( file ).asArrayBuffer() );\n\n\t\t\t}\n\n\t\t\tvar fileText = THREE.LoaderUtils.decodeText( view );\n\t\t\tvar xmlData = new DOMParser().parseFromString( fileText, 'application/xml' );\n\n\t\t\tif ( xmlData.documentElement.nodeName.toLowerCase() !== 'amf' ) {\n\n\t\t\t\tconsole.log( 'THREE.AMFLoader: Error loading AMF - no AMF document found.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn xmlData;\n\n\t\t}\n\n\t\tfunction loadDocumentScale( node ) {\n\n\t\t\tvar scale = 1.0;\n\t\t\tvar unit = 'millimeter';\n\n\t\t\tif ( node.documentElement.attributes.unit !== undefined ) {\n\n\t\t\t\tunit = node.documentElement.attributes.unit.value.toLowerCase();\n\n\t\t\t}\n\n\t\t\tvar scaleUnits = {\n\t\t\t\tmillimeter: 1.0,\n\t\t\t\tinch: 25.4,\n\t\t\t\tfeet: 304.8,\n\t\t\t\tmeter: 1000.0,\n\t\t\t\tmicron: 0.001\n\t\t\t};\n\n\t\t\tif ( scaleUnits[ unit ] !== undefined ) {\n\n\t\t\t\tscale = scaleUnits[ unit ];\n\n\t\t\t}\n\n\t\t\tconsole.log( 'THREE.AMFLoader: Unit scale: ' + scale );\n\t\t\treturn scale;\n\n\t\t}\n\n\t\tfunction loadMaterials( node ) {\n\n\t\t\tvar matName = 'AMF Material';\n\t\t\tvar matId = node.attributes.id.textContent;\n\t\t\tvar color = { r: 1.0, g: 1.0, b: 1.0, a: 1.0 };\n\n\t\t\tvar loadedMaterial = null;\n\n\t\t\tfor ( var i = 0; i < node.childNodes.length; i ++ ) {\n\n\t\t\t\tvar matChildEl = node.childNodes[ i ];\n\n\t\t\t\tif ( matChildEl.nodeName === 'metadata' && matChildEl.attributes.type !== undefined ) {\n\n\t\t\t\t\tif ( matChildEl.attributes.type.value === 'name' ) {\n\n\t\t\t\t\t\tmatName = matChildEl.textContent;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( matChildEl.nodeName === 'color' ) {\n\n\t\t\t\t\tcolor = loadColor( matChildEl );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tloadedMaterial = new THREE.MeshPhongMaterial( {\n\t\t\t\tflatShading: true,\n\t\t\t\tcolor: new THREE.Color( color.r, color.g, color.b ),\n\t\t\t\tname: matName\n\t\t\t} );\n\n\t\t\tif ( color.a !== 1.0 ) {\n\n\t\t\t\tloadedMaterial.transparent = true;\n\t\t\t\tloadedMaterial.opacity = color.a;\n\n\t\t\t}\n\n\t\t\treturn { id: matId, material: loadedMaterial };\n\n\t\t}\n\n\t\tfunction loadColor( node ) {\n\n\t\t\tvar color = { r: 1.0, g: 1.0, b: 1.0, a: 1.0 };\n\n\t\t\tfor ( var i = 0; i < node.childNodes.length; i ++ ) {\n\n\t\t\t\tvar matColor = node.childNodes[ i ];\n\n\t\t\t\tif ( matColor.nodeName === 'r' ) {\n\n\t\t\t\t\tcolor.r = matColor.textContent;\n\n\t\t\t\t} else if ( matColor.nodeName === 'g' ) {\n\n\t\t\t\t\tcolor.g = matColor.textContent;\n\n\t\t\t\t} else if ( matColor.nodeName === 'b' ) {\n\n\t\t\t\t\tcolor.b = matColor.textContent;\n\n\t\t\t\t} else if ( matColor.nodeName === 'a' ) {\n\n\t\t\t\t\tcolor.a = matColor.textContent;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tfunction loadMeshVolume( node ) {\n\n\t\t\tvar volume = { name: '', triangles: [], materialid: null };\n\n\t\t\tvar currVolumeNode = node.firstElementChild;\n\n\t\t\tif ( node.attributes.materialid !== undefined ) {\n\n\t\t\t\tvolume.materialId = node.attributes.materialid.nodeValue;\n\n\t\t\t}\n\n\t\t\twhile ( currVolumeNode ) {\n\n\t\t\t\tif ( currVolumeNode.nodeName === 'metadata' ) {\n\n\t\t\t\t\tif ( currVolumeNode.attributes.type !== undefined ) {\n\n\t\t\t\t\t\tif ( currVolumeNode.attributes.type.value === 'name' ) {\n\n\t\t\t\t\t\t\tvolume.name = currVolumeNode.textContent;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( currVolumeNode.nodeName === 'triangle' ) {\n\n\t\t\t\t\tvar v1 = currVolumeNode.getElementsByTagName( 'v1' )[ 0 ].textContent;\n\t\t\t\t\tvar v2 = currVolumeNode.getElementsByTagName( 'v2' )[ 0 ].textContent;\n\t\t\t\t\tvar v3 = currVolumeNode.getElementsByTagName( 'v3' )[ 0 ].textContent;\n\n\t\t\t\t\tvolume.triangles.push( v1, v2, v3 );\n\n\t\t\t\t}\n\n\t\t\t\tcurrVolumeNode = currVolumeNode.nextElementSibling;\n\n\t\t\t}\n\n\t\t\treturn volume;\n\n\t\t}\n\n\t\tfunction loadMeshVertices( node ) {\n\n\t\t\tvar vertArray = [];\n\t\t\tvar normalArray = [];\n\t\t\tvar currVerticesNode = node.firstElementChild;\n\n\t\t\twhile ( currVerticesNode ) {\n\n\t\t\t\tif ( currVerticesNode.nodeName === 'vertex' ) {\n\n\t\t\t\t\tvar vNode = currVerticesNode.firstElementChild;\n\n\t\t\t\t\twhile ( vNode ) {\n\n\t\t\t\t\t\tif ( vNode.nodeName === 'coordinates' ) {\n\n\t\t\t\t\t\t\tvar x = vNode.getElementsByTagName( 'x' )[ 0 ].textContent;\n\t\t\t\t\t\t\tvar y = vNode.getElementsByTagName( 'y' )[ 0 ].textContent;\n\t\t\t\t\t\t\tvar z = vNode.getElementsByTagName( 'z' )[ 0 ].textContent;\n\n\t\t\t\t\t\t\tvertArray.push( x, y, z );\n\n\t\t\t\t\t\t} else if ( vNode.nodeName === 'normal' ) {\n\n\t\t\t\t\t\t\tvar nx = vNode.getElementsByTagName( 'nx' )[ 0 ].textContent;\n\t\t\t\t\t\t\tvar ny = vNode.getElementsByTagName( 'ny' )[ 0 ].textContent;\n\t\t\t\t\t\t\tvar nz = vNode.getElementsByTagName( 'nz' )[ 0 ].textContent;\n\n\t\t\t\t\t\t\tnormalArray.push( nx, ny, nz );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvNode = vNode.nextElementSibling;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrVerticesNode = currVerticesNode.nextElementSibling;\n\n\t\t\t}\n\n\t\t\treturn { 'vertices': vertArray, 'normals': normalArray };\n\n\t\t}\n\n\t\tfunction loadObject( node ) {\n\n\t\t\tvar objId = node.attributes.id.textContent;\n\t\t\tvar loadedObject = { name: 'amfobject', meshes: [] };\n\t\t\tvar currColor = null;\n\t\t\tvar currObjNode = node.firstElementChild;\n\n\t\t\twhile ( currObjNode ) {\n\n\t\t\t\tif ( currObjNode.nodeName === 'metadata' ) {\n\n\t\t\t\t\tif ( currObjNode.attributes.type !== undefined ) {\n\n\t\t\t\t\t\tif ( currObjNode.attributes.type.value === 'name' ) {\n\n\t\t\t\t\t\t\tloadedObject.name = currObjNode.textContent;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( currObjNode.nodeName === 'color' ) {\n\n\t\t\t\t\tcurrColor = loadColor( currObjNode );\n\n\t\t\t\t} else if ( currObjNode.nodeName === 'mesh' ) {\n\n\t\t\t\t\tvar currMeshNode = currObjNode.firstElementChild;\n\t\t\t\t\tvar mesh = { vertices: [], normals: [], volumes: [], color: currColor };\n\n\t\t\t\t\twhile ( currMeshNode ) {\n\n\t\t\t\t\t\tif ( currMeshNode.nodeName === 'vertices' ) {\n\n\t\t\t\t\t\t\tvar loadedVertices = loadMeshVertices( currMeshNode );\n\n\t\t\t\t\t\t\tmesh.normals = mesh.normals.concat( loadedVertices.normals );\n\t\t\t\t\t\t\tmesh.vertices = mesh.vertices.concat( loadedVertices.vertices );\n\n\t\t\t\t\t\t} else if ( currMeshNode.nodeName === 'volume' ) {\n\n\t\t\t\t\t\t\tmesh.volumes.push( loadMeshVolume( currMeshNode ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrMeshNode = currMeshNode.nextElementSibling;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tloadedObject.meshes.push( mesh );\n\n\t\t\t\t}\n\n\t\t\t\tcurrObjNode = currObjNode.nextElementSibling;\n\n\t\t\t}\n\n\t\t\treturn { 'id': objId, 'obj': loadedObject };\n\n\t\t}\n\n\t\tvar xmlData = loadDocument( data );\n\t\tvar amfName = '';\n\t\tvar amfAuthor = '';\n\t\tvar amfScale = loadDocumentScale( xmlData );\n\t\tvar amfMaterials = {};\n\t\tvar amfObjects = {};\n\t\tvar childNodes = xmlData.documentElement.childNodes;\n\n\t\tvar i, j;\n\n\t\tfor ( i = 0; i < childNodes.length; i ++ ) {\n\n\t\t\tvar child = childNodes[ i ];\n\n\t\t\tif ( child.nodeName === 'metadata' ) {\n\n\t\t\t\tif ( child.attributes.type !== undefined ) {\n\n\t\t\t\t\tif ( child.attributes.type.value === 'name' ) {\n\n\t\t\t\t\t\tamfName = child.textContent;\n\n\t\t\t\t\t} else if ( child.attributes.type.value === 'author' ) {\n\n\t\t\t\t\t\tamfAuthor = child.textContent;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( child.nodeName === 'material' ) {\n\n\t\t\t\tvar loadedMaterial = loadMaterials( child );\n\n\t\t\t\tamfMaterials[ loadedMaterial.id ] = loadedMaterial.material;\n\n\t\t\t} else if ( child.nodeName === 'object' ) {\n\n\t\t\t\tvar loadedObject = loadObject( child );\n\n\t\t\t\tamfObjects[ loadedObject.id ] = loadedObject.obj;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar sceneObject = new THREE.Group();\n\t\tvar defaultMaterial = new THREE.MeshPhongMaterial( { color: 0xaaaaff, flatShading: true } );\n\n\t\tsceneObject.name = amfName;\n\t\tsceneObject.userData.author = amfAuthor;\n\t\tsceneObject.userData.loader = 'AMF';\n\n\t\tfor ( var id in amfObjects ) {\n\n\t\t\tvar part = amfObjects[ id ];\n\t\t\tvar meshes = part.meshes;\n\t\t\tvar newObject = new THREE.Group();\n\t\t\tnewObject.name = part.name || '';\n\n\t\t\tfor ( i = 0; i < meshes.length; i ++ ) {\n\n\t\t\t\tvar objDefaultMaterial = defaultMaterial;\n\t\t\t\tvar mesh = meshes[ i ];\n\t\t\t\tvar vertices = new THREE.Float32BufferAttribute( mesh.vertices, 3 );\n\t\t\t\tvar normals = null;\n\n\t\t\t\tif ( mesh.normals.length ) {\n\n\t\t\t\t\tnormals = new THREE.Float32BufferAttribute( mesh.normals, 3 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( mesh.color ) {\n\n\t\t\t\t\tvar color = mesh.color;\n\n\t\t\t\t\tobjDefaultMaterial = defaultMaterial.clone();\n\t\t\t\t\tobjDefaultMaterial.color = new THREE.Color( color.r, color.g, color.b );\n\n\t\t\t\t\tif ( color.a !== 1.0 ) {\n\n\t\t\t\t\t\tobjDefaultMaterial.transparent = true;\n\t\t\t\t\t\tobjDefaultMaterial.opacity = color.a;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar volumes = mesh.volumes;\n\n\t\t\t\tfor ( j = 0; j < volumes.length; j ++ ) {\n\n\t\t\t\t\tvar volume = volumes[ j ];\n\t\t\t\t\tvar newGeometry = new THREE.BufferGeometry();\n\t\t\t\t\tvar material = objDefaultMaterial;\n\n\t\t\t\t\tnewGeometry.setIndex( volume.triangles );\n\t\t\t\t\tnewGeometry.setAttribute( 'position', vertices.clone() );\n\n\t\t\t\t\tif ( normals ) {\n\n\t\t\t\t\t\tnewGeometry.setAttribute( 'normal', normals.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( amfMaterials[ volume.materialId ] !== undefined ) {\n\n\t\t\t\t\t\tmaterial = amfMaterials[ volume.materialId ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnewGeometry.scale( amfScale, amfScale, amfScale );\n\t\t\t\t\tnewObject.add( new THREE.Mesh( newGeometry, material.clone() ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tsceneObject.add( newObject );\n\n\t\t}\n\n\t\treturn sceneObject;\n\n\t}\n\n} );\n"]}