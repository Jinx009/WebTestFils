{"version":3,"sources":["BasisTextureLoader.js"],"names":[],"mappings":"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","file":"BasisTextureLoader-compiled.js","sourcesContent":["console.warn( \"THREE.BasisTextureLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\n/**\n * Loader for Basis Universal GPU Texture Codec.\n *\n * Basis Universal is a \"supercompressed\" GPU texture and texture video\n * compression system that outputs a highly compressed intermediate file format\n * (.basis) that can be quickly transcoded to a wide variety of GPU texture\n * compression formats.\n *\n * This loader parallelizes the transcoding process across a configurable number\n * of web workers, before transferring the transcoded compressed texture back\n * to the main thread.\n */\nTHREE.BasisTextureLoader = function ( manager ) {\n\n\tTHREE.Loader.call( this, manager );\n\n\tthis.transcoderPath = '';\n\tthis.transcoderBinary = null;\n\tthis.transcoderPending = null;\n\n\tthis.workerLimit = 4;\n\tthis.workerPool = [];\n\tthis.workerNextTaskID = 1;\n\tthis.workerSourceURL = '';\n\tthis.workerConfig = {\n\t\tformat: null,\n\t\tastcSupported: false,\n\t\tbptcSupported: false,\n\t\tetcSupported: false,\n\t\tdxtSupported: false,\n\t\tpvrtcSupported: false,\n\t};\n\n};\n\nTHREE.BasisTextureLoader.taskCache = new WeakMap();\n\nTHREE.BasisTextureLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\tconstructor: THREE.BasisTextureLoader,\n\n\tsetTranscoderPath: function ( path ) {\n\n\t\tthis.transcoderPath = path;\n\n\t\treturn this;\n\n\t},\n\n\tsetWorkerLimit: function ( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t},\n\n\tdetectSupport: function ( renderer ) {\n\n\t\tvar config = this.workerConfig;\n\n\t\tconfig.astcSupported = renderer.extensions.has( 'WEBGL_compressed_texture_astc' );\n\t\tconfig.bptcSupported = renderer.extensions.has( 'EXT_texture_compression_bptc' );\n\t\tconfig.etcSupported = renderer.extensions.has( 'WEBGL_compressed_texture_etc1' );\n\t\tconfig.dxtSupported = renderer.extensions.has( 'WEBGL_compressed_texture_s3tc' );\n\t\tconfig.pvrtcSupported = renderer.extensions.has( 'WEBGL_compressed_texture_pvrtc' )\n\t\t\t|| renderer.extensions.has( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\n\t\tif ( config.astcSupported ) {\n\n\t\t\tconfig.format = THREE.BasisTextureLoader.BASIS_FORMAT.cTFASTC_4x4;\n\n\t\t} else if ( config.bptcSupported ) {\n\n\t\t\tconfig.format = THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC7_M5;\n\n\t\t} else if ( config.dxtSupported ) {\n\n\t\t\tconfig.format = THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC3;\n\n\t\t} else if ( config.pvrtcSupported ) {\n\n\t\t\tconfig.format = THREE.BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGBA;\n\n\t\t} else if ( config.etcSupported ) {\n\n\t\t\tconfig.format = THREE.BasisTextureLoader.BASIS_FORMAT.cTFETC1;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.BasisTextureLoader: No suitable compressed texture format found.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new THREE.FileLoader( this.manager );\n\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\n\t\t\t// again from this thread.\n\t\t\tif ( THREE.BasisTextureLoader.taskCache.has( buffer ) ) {\n\n\t\t\t\tvar cachedTask = THREE.BasisTextureLoader.taskCache.get( buffer );\n\n\t\t\t\treturn cachedTask.promise.then( onLoad ).catch( onError );\n\n\t\t\t}\n\n\t\t\tthis._createTexture( buffer, url )\n\t\t\t\t.then( onLoad )\n\t\t\t\t.catch( onError );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/**\n\t * @param\t{ArrayBuffer} buffer\n\t * @param\t{string} url\n\t * @return {Promise<THREE.CompressedTexture>}\n\t */\n\t_createTexture: function ( buffer, url ) {\n\n\t\tvar worker;\n\t\tvar taskID;\n\n\t\tvar taskCost = buffer.byteLength;\n\n\t\tvar texturePending = this._allocateWorker( taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\t\t\t\ttaskID = this.workerNextTaskID ++;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'transcode', id: taskID, buffer }, [ buffer ] );\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => {\n\n\t\t\t\tvar config = this.workerConfig;\n\n\t\t\t\tvar { width, height, mipmaps, format } = message;\n\n\t\t\t\tvar texture;\n\n\t\t\t\tswitch ( format ) {\n\n\t\t\t\t\tcase THREE.BasisTextureLoader.BASIS_FORMAT.cTFASTC_4x4:\n\t\t\t\t\t\ttexture = new THREE.CompressedTexture( mipmaps, width, height, THREE.RGBA_ASTC_4x4_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC7_M5:\n\t\t\t\t\t\ttexture = new THREE.CompressedTexture( mipmaps, width, height, THREE.RGBA_BPTC_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC1:\n\t\t\t\t\tcase THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC3:\n\t\t\t\t\t\ttexture = new THREE.CompressedTexture( mipmaps, width, height, THREE.BasisTextureLoader.DXT_FORMAT_MAP[ config.format ], THREE.UnsignedByteType );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase THREE.BasisTextureLoader.BASIS_FORMAT.cTFETC1:\n\t\t\t\t\t\ttexture = new THREE.CompressedTexture( mipmaps, width, height, THREE.RGB_ETC1_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase THREE.BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGB:\n\t\t\t\t\t\ttexture = new THREE.CompressedTexture( mipmaps, width, height, THREE.RGB_PVRTC_4BPPV1_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase THREE.BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGBA:\n\t\t\t\t\t\ttexture = new THREE.CompressedTexture( mipmaps, width, height, THREE.RGBA_PVRTC_4BPPV1_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error( 'THREE.BasisTextureLoader: No supported format available.' );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.minFilter = mipmaps.length === 1 ? THREE.LinearFilter : THREE.LinearMipmapLinearFilter;\n\t\t\t\ttexture.magFilter = THREE.LinearFilter;\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\treturn texture;\n\n\t\t\t} );\n\n\t\t// Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\t\ttexturePending\n\t\t\t.catch( () => true )\n\t\t\t.then( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tworker._taskLoad -= taskCost;\n\t\t\t\t\tdelete worker._callbacks[ taskID ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t// Cache the task result.\n\t\tTHREE.BasisTextureLoader.taskCache.set( buffer, {\n\n\t\t\turl: url,\n\t\t\tpromise: texturePending\n\n\t\t} );\n\n\t\treturn texturePending;\n\n\t},\n\n\t_initTranscoder: function () {\n\n\t\tif ( ! this.transcoderPending ) {\n\n\t\t\t// Load transcoder wrapper.\n\t\t\tvar jsLoader = new THREE.FileLoader( this.manager );\n\t\t\tjsLoader.setPath( this.transcoderPath );\n\t\t\tjsLoader.setWithCredentials( this.withCredentials );\n\t\t\tvar jsContent = new Promise( ( resolve, reject ) => {\n\n\t\t\t\tjsLoader.load( 'basis_transcoder.js', resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t\t// Load transcoder WASM binary.\n\t\t\tvar binaryLoader = new THREE.FileLoader( this.manager );\n\t\t\tbinaryLoader.setPath( this.transcoderPath );\n\t\t\tbinaryLoader.setResponseType( 'arraybuffer' );\n\t\t\tbinaryLoader.setWithCredentials( this.withCredentials );\n\t\t\tvar binaryContent = new Promise( ( resolve, reject ) => {\n\n\t\t\t\tbinaryLoader.load( 'basis_transcoder.wasm', resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t\tthis.transcoderPending = Promise.all( [ jsContent, binaryContent ] )\n\t\t\t\t.then( ( [ jsContent, binaryContent ] ) => {\n\n\t\t\t\t\tvar fn = THREE.BasisTextureLoader.BasisWorker.toString();\n\n\t\t\t\t\tvar body = [\n\t\t\t\t\t\t'/* basis_transcoder.js */',\n\t\t\t\t\t\tjsContent,\n\t\t\t\t\t\t'/* worker */',\n\t\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t\t].join( '\\n' );\n\n\t\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\t\t\t\t\tthis.transcoderBinary = binaryContent;\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\treturn this.transcoderPending;\n\n\t},\n\n\t_allocateWorker: function ( taskCost ) {\n\n\t\treturn this._initTranscoder().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tvar worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( {\n\t\t\t\t\ttype: 'init',\n\t\t\t\t\tconfig: this.workerConfig,\n\t\t\t\t\ttranscoderBinary: this.transcoderBinary,\n\t\t\t\t} );\n\n\t\t\t\tworker.onmessage = function ( e ) {\n\n\t\t\t\t\tvar message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'transcode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.BasisTextureLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tvar worker = this.workerPool[ this.workerPool.length - 1 ];\n\n\t\t\tworker._taskLoad += taskCost;\n\n\t\t\treturn worker;\n\n\t\t} );\n\n\t},\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.workerPool.length; i ++ ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/* CONSTANTS */\n\nTHREE.BasisTextureLoader.BASIS_FORMAT = {\n\tcTFETC1: 0,\n\tcTFETC2: 1,\n\tcTFBC1: 2,\n\tcTFBC3: 3,\n\tcTFBC4: 4,\n\tcTFBC5: 5,\n\tcTFBC7_M6_OPAQUE_ONLY: 6,\n\tcTFBC7_M5: 7,\n\tcTFPVRTC1_4_RGB: 8,\n\tcTFPVRTC1_4_RGBA: 9,\n\tcTFASTC_4x4: 10,\n\tcTFATC_RGB: 11,\n\tcTFATC_RGBA_INTERPOLATED_ALPHA: 12,\n\tcTFRGBA32: 13,\n\tcTFRGB565: 14,\n\tcTFBGR565: 15,\n\tcTFRGBA4444: 16,\n};\n\n// DXT formats, from:\n// http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\nTHREE.BasisTextureLoader.DXT_FORMAT = {\n\tCOMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0,\n\tCOMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1,\n\tCOMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2,\n\tCOMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3,\n};\nTHREE.BasisTextureLoader.DXT_FORMAT_MAP = {};\nTHREE.BasisTextureLoader.DXT_FORMAT_MAP[ THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC1 ] =\n\tTHREE.BasisTextureLoader.DXT_FORMAT.COMPRESSED_RGB_S3TC_DXT1_EXT;\nTHREE.BasisTextureLoader.DXT_FORMAT_MAP[ THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC3 ] =\n\tTHREE.BasisTextureLoader.DXT_FORMAT.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n/* WEB WORKER */\n\nTHREE.BasisTextureLoader.BasisWorker = function () {\n\n\tvar config;\n\tvar transcoderPending;\n\tvar _BasisFile;\n\n\tonmessage = function ( e ) {\n\n\t\tvar message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\t\t\t\tconfig = message.config;\n\t\t\t\tinit( message.transcoderBinary );\n\t\t\t\tbreak;\n\n\t\t\tcase 'transcode':\n\t\t\t\ttranscoderPending.then( () => {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar { width, height, hasAlpha, mipmaps, format } = transcode( message.buffer );\n\n\t\t\t\t\t\tvar buffers = [];\n\n\t\t\t\t\t\tfor ( var i = 0; i < mipmaps.length; ++ i ) {\n\n\t\t\t\t\t\t\tbuffers.push( mipmaps[ i ].data.buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tself.postMessage( { type: 'transcode', id: message.id, width, height, hasAlpha, mipmaps, format }, buffers );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tconsole.error( error );\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction init( wasmBinary ) {\n\n\t\tvar BasisModule;\n\t\ttranscoderPending = new Promise( ( resolve ) => {\n\n\t\t\tBasisModule = { wasmBinary, onRuntimeInitialized: resolve };\n\t\t\tBASIS( BasisModule ); // eslint-disable-line no-undef\n\n\t\t} ).then( () => {\n\n\t\t\tvar { BasisFile, initializeBasis } = BasisModule;\n\n\t\t\t_BasisFile = BasisFile;\n\n\t\t\tinitializeBasis();\n\n\t\t} );\n\n\t}\n\n\tfunction transcode( buffer ) {\n\n\t\tvar basisFile = new _BasisFile( new Uint8Array( buffer ) );\n\n\t\tvar width = basisFile.getImageWidth( 0, 0 );\n\t\tvar height = basisFile.getImageHeight( 0, 0 );\n\t\tvar levels = basisFile.getNumLevels( 0 );\n\t\tvar hasAlpha = basisFile.getHasAlpha();\n\n\t\tfunction cleanup() {\n\n\t\t\tbasisFile.close();\n\t\t\tbasisFile.delete();\n\n\t\t}\n\n\t\tif ( ! hasAlpha ) {\n\n\t\t\tswitch ( config.format ) {\n\n\t\t\t\tcase 9: // Hardcoded: THREE.BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGBA\n\t\t\t\t\tconfig.format = 8; // Hardcoded: THREE.BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGB;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ! width || ! height || ! levels ) {\n\n\t\t\tcleanup();\n\t\t\tthrow new Error( 'THREE.BasisTextureLoader:\tInvalid .basis file' );\n\n\t\t}\n\n\t\tif ( ! basisFile.startTranscoding() ) {\n\n\t\t\tcleanup();\n\t\t\tthrow new Error( 'THREE.BasisTextureLoader: .startTranscoding failed' );\n\n\t\t}\n\n\t\tvar mipmaps = [];\n\n\t\tfor ( var mip = 0; mip < levels; mip ++ ) {\n\n\t\t\tvar mipWidth = basisFile.getImageWidth( 0, mip );\n\t\t\tvar mipHeight = basisFile.getImageHeight( 0, mip );\n\t\t\tvar dst = new Uint8Array( basisFile.getImageTranscodedSizeInBytes( 0, mip, config.format ) );\n\n\t\t\tvar status = basisFile.transcodeImage(\n\t\t\t\tdst,\n\t\t\t\t0,\n\t\t\t\tmip,\n\t\t\t\tconfig.format,\n\t\t\t\t0,\n\t\t\t\thasAlpha\n\t\t\t);\n\n\t\t\tif ( ! status ) {\n\n\t\t\t\tcleanup();\n\t\t\t\tthrow new Error( 'THREE.BasisTextureLoader: .transcodeImage failed.' );\n\n\t\t\t}\n\n\t\t\tmipmaps.push( { data: dst, width: mipWidth, height: mipHeight } );\n\n\t\t}\n\n\t\tcleanup();\n\n\t\treturn { width, height, hasAlpha, mipmaps, format: config.format };\n\n\t}\n\n};\n"]}