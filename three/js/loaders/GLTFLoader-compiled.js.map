{"version":3,"sources":["GLTFLoader.js"],"names":[],"mappings":"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","file":"GLTFLoader-compiled.js","sourcesContent":["console.warn( \"THREE.GLTFLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tTHREE.Loader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\t\tthis.ktx2Loader = null;\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureBasisUExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFLightsExtension( parser );\n\n\t\t} );\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new THREE.FileLoader( this.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetKTX2Loader: function ( ktx2Loader ) {\n\n\t\t\tthis.ktx2Loader = ktx2Loader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\t\t\tvar plugins = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager,\n\t\t\t\tktx2Loader: this.ktx2Loader\n\n\t\t\t} );\n\n\t\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\n\t\t\tfor ( var i = 0; i < this.pluginCallbacks.length; i ++ ) {\n\n\t\t\t\tvar plugin = this.pluginCallbacks[ i ]( parser );\n\t\t\t\tplugins[ plugin.name ] = plugin;\n\n\t\t\t\t// Workaround to avoid determining as unknown extension\n\t\t\t\t// in addUnknownExtensionsToUserData().\n\t\t\t\t// Remove this workaround if we move all the existing\n\t\t\t\t// extension handlers to plugin system\n\t\t\t\textensions[ plugin.name ] = true;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 && plugins[ extensionName ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.setExtensions( extensions );\n\t\t\tparser.setPlugins( plugins );\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_TRANSMISSION: 'KHR_materials_transmission',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_BASISU: 'KHR_texture_basisu',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\t// Object3D instance caches\n\t\tthis.cache = { refs: {}, uses: {} };\n\n\t}\n\n\tGLTFLightsExtension.prototype._markDefs = function () {\n\n\t\tvar parser = this.parser;\n\t\tvar nodeDefs = this.parser.json.nodes || [];\n\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ this.name ]\n\t\t\t\t&& nodeDef.extensions[ this.name ].light !== undefined ) {\n\n\t\t\t\tparser._addNodeRef( this.cache, nodeDef.extensions[ this.name ].light );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tGLTFLightsExtension.prototype._loadLight = function ( lightIndex ) {\n\n\t\tvar parser = this.parser;\n\t\tvar cacheKey = 'light:' + lightIndex;\n\t\tvar dependency = parser.cache.get( cacheKey );\n\n\t\tif ( dependency ) return dependency;\n\n\t\tvar json = parser.json;\n\t\tvar extensions = ( json.extensions && json.extensions[ this.name ] ) || {};\n\t\tvar lightDefs = extensions.lights || [];\n\t\tvar lightDef = lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new THREE.Color( 0xffffff );\n\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = parser.createUniqueName( lightDef.name || ( 'light_' + lightIndex ) );\n\n\t\tdependency = Promise.resolve( lightNode );\n\n\t\tparser.cache.add( cacheKey, dependency );\n\n\t\treturn dependency;\n\n\t};\n\n\tGLTFLightsExtension.prototype.createNodeAttachment = function ( nodeIndex ) {\n\n\t\tvar self = this;\n\t\tvar parser = this.parser;\n\t\tvar json = parser.json;\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\t\tvar lightDef = ( nodeDef.extensions && nodeDef.extensions[ this.name ] ) || {};\n\t\tvar lightIndex = lightDef.light;\n\n\t\tif ( lightIndex === undefined ) return null;\n\n\t\treturn this._loadLight( lightIndex ).then( function ( light ) {\n\n\t\t\treturn parser._getNodeRef( self.cache, lightIndex, light );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function ( materialIndex ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn THREE.MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendMaterialParams = function ( materialIndex, materialParams ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new THREE.Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Transmission Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n\t * Draft: https://github.com/KhronosGroup/glTF/pull/1698\n\t */\n\tfunction GLTFMaterialsTransmissionExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_TRANSMISSION;\n\n\t}\n\n\tGLTFMaterialsTransmissionExtension.prototype.getMaterialType = function ( materialIndex ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn THREE.MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsTransmissionExtension.prototype.extendMaterialParams = function ( materialIndex, materialParams ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.transmissionFactor !== undefined ) {\n\n\t\t\tmaterialParams.transmission = extension.transmissionFactor;\n\n\t\t}\n\n\t\tif ( extension.transmissionTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'transmissionMap', extension.transmissionTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * BasisU Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n\t * (draft PR https://github.com/KhronosGroup/glTF/pull/1751)\n\t */\n\tfunction GLTFTextureBasisUExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_BASISU;\n\n\t}\n\n\tGLTFTextureBasisUExtension.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this.parser;\n\t\tvar json = parser.json;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ this.name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar extension = textureDef.extensions[ this.name ];\n\t\tvar source = json.images[ extension.source ];\n\t\tvar loader = parser.options.ktx2Loader;\n\n\t\tif ( ! loader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures' );\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, source, loader );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of THREE.StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tTHREE.MeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb * ( 1. - max( specularFactor.r, max( specularFactor.g, specularFactor.b ) ) );',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new THREE.Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader\n\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tspecular: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn uniforms.specular.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\tuniforms.specular.value = v;\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tspecularMap: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn uniforms.specularMap.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\tuniforms.specularMap.value = v;\n\n\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\tthis.defines.USE_SPECULARMAP = ''; // USE_UV is set by the renderer for specular maps\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdelete this.defines.USE_SPECULARMAP;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tglossiness: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn uniforms.glossiness.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\tuniforms.glossiness.value = v;\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tglossinessMap: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn uniforms.glossinessMap.value;\n\n\t\t\t\t},\n\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\tuniforms.glossinessMap.value = v;\n\n\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\tthis.defines.USE_UV = '';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\t\t\t\t\t\tdelete this.defines.USE_UV;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = THREE.TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipmapNearestFilter,\n\t\t9985: THREE.LinearMipmapNearestFilter,\n\t\t9986: THREE.NearestMipmapLinearFilter,\n\t\t9987: THREE.LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new THREE.MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: THREE.FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = {};\n\t\tthis.plugins = {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\t// Object3D instance caches\n\t\tthis.meshCache = { refs: {}, uses: {} };\n\t\tthis.cameraCache = { refs: {}, uses: {} };\n\t\tthis.lightCache = { refs: {}, uses: {} };\n\n\t\t// Track node names, to ensure no duplicates\n\t\tthis.nodeNamesUsed = {};\n\n\t\t// Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n\t\t// expensive work of uploading a texture to the GPU off the main thread.\n\t\tif ( typeof createImageBitmap !== 'undefined' && /Firefox/.test( navigator.userAgent ) === false ) {\n\n\t\t\tthis.textureLoader = new THREE.ImageBitmapLoader( this.options.manager );\n\n\t\t} else {\n\n\t\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\n\t\t}\n\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.setExtensions = function ( extensions ) {\n\n\t\tthis.extensions = extensions;\n\n\t};\n\n\tGLTFParser.prototype.setPlugins = function ( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t};\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\treturn ext._markDefs && ext._markDefs();\n\n\t\t} );\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype._markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Iterate over all nodes, marking references to shared resources,\n\t\t// as well as skeleton joints.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.meshCache, nodeDef.mesh );\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.cameraCache, nodeDef.camera );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Counts references to shared node / Object3D resources. These resources\n\t * can be reused, or \"instantiated\", at multiple nodes in the scene\n\t * hierarchy. Mesh, Camera, and Light instances are instantiated and must\n\t * be marked. Non-scenegraph resources (like Materials, Geometries, and\n\t * Textures) can be reused directly and are not marked here.\n\t *\n\t * Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t */\n\tGLTFParser.prototype._addNodeRef = function ( cache, index ) {\n\n\t\tif ( index === undefined ) return;\n\n\t\tif ( cache.refs[ index ] === undefined ) {\n\n\t\t\tcache.refs[ index ] = cache.uses[ index ] = 0;\n\n\t\t}\n\n\t\tcache.refs[ index ] ++;\n\n\t};\n\n\t/** Returns a reference to a shared resource, cloning it if necessary. */\n\tGLTFParser.prototype._getNodeRef = function ( cache, index, object ) {\n\n\t\tif ( cache.refs[ index ] <= 1 ) return object;\n\n\t\tvar ref = object.clone();\n\n\t\tref.name += '_instance_' + ( cache.uses[ index ] ++ );\n\n\t\treturn ref;\n\n\t};\n\n\tGLTFParser.prototype._invokeOne = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.push( this );\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tvar result = func( extensions[ i ] );\n\n\t\t\tif ( result ) return result;\n\n\t\t}\n\n\t};\n\n\tGLTFParser.prototype._invokeAll = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.unshift( this );\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tvar result = func( extensions[ i ] );\n\n\t\t\tif ( result ) pending.push( result );\n\n\t\t}\n\n\t\treturn pending;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMesh && ext.loadMesh( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadBufferView && ext.loadBufferView( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMaterial && ext.loadMaterial( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadTexture && ext.loadTexture( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new THREE.BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar loader;\n\n\t\tif ( source.uri ) {\n\n\t\t\tloader = options.manager.getHandler( source.uri );\n\n\t\t}\n\n\t\tif ( ! loader ) {\n\n\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t: this.textureLoader;\n\n\t\t}\n\n\t\treturn this.loadTextureImage( textureIndex, source, loader );\n\n\t};\n\n\tGLTFParser.prototype.loadTextureImage = function ( textureIndex, source, loader ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\t\tvar hasAlpha = true;\n\n\t\tif ( source.mimeType === 'image/jpeg' ) hasAlpha = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tif ( source.mimeType === 'image/png' ) {\n\n\t\t\t\t\t// Inspect the PNG 'IHDR' chunk to determine whether the image could have an\n\t\t\t\t\t// alpha channel. This check is conservative — the image could have an alpha\n\t\t\t\t\t// channel with all values == 1, and the indexed type (colorType == 3) only\n\t\t\t\t\t// sometimes contains alpha.\n\t\t\t\t\t//\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Portable_Network_Graphics#File_header\n\t\t\t\t\tvar colorType = new DataView( bufferView, 25, 1 ).getUint8( 0, false );\n\t\t\t\t\thasAlpha = colorType === 6 || colorType === 4 || colorType === 3;\n\n\t\t\t\t}\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tvar onLoad = resolve;\n\n\t\t\t\tif ( loader.isImageBitmapLoader === true ) {\n\n\t\t\t\t\tonLoad = function ( imageBitmap ) {\n\n\t\t\t\t\t\tresolve( new THREE.CanvasTexture( imageBitmap ) );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), onLoad, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// When there is definitely no alpha channel in the texture, set RGBFormat to save space.\n\t\t\tif ( ! hasAlpha ) texture.format = THREE.RGBFormat;\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\tparser.associations.set( texture, {\n\t\t\t\ttype: 'textures',\n\t\t\t\tindex: textureIndex\n\t\t\t} );\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tvar gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {THREE.Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', geometry.attributes.uv );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\tGLTFParser.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn THREE.MeshStandardMaterial;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialType = this._invokeOne( function ( ext ) {\n\n\t\t\t\treturn ext.getMaterialType && ext.getMaterialType( materialIndex );\n\n\t\t\t} );\n\n\t\t\tpending.push( Promise.all( this._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.extendMaterialParams && ext.extendMaterialParams( materialIndex, materialParams );\n\n\t\t\t} ) ) );\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { type: 'materials', index: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/** When Object3D instances are targeted by animation, they need unique names. */\n\tGLTFParser.prototype.createUniqueName = function ( originalName ) {\n\n\t\tvar name = THREE.PropertyBinding.sanitizeNodeName( originalName || '' );\n\n\t\tfor ( var i = 1; this.nodeNamesUsed[ name ]; ++ i ) {\n\n\t\t\tname = originalName + '_' + i;\n\n\t\t}\n\n\t\tthis.nodeNamesUsed[ name ] = true;\n\n\t\treturn name;\n\n\t};\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new THREE.Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew THREE.Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew THREE.Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new THREE.Vector3();\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new THREE.Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {THREE.BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === THREE.TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See ._markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, THREE.TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, THREE.TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = parser.createUniqueName( meshDef.name || ( 'mesh_' + meshIndex ) );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new THREE.Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = this.createUniqueName( cameraDef.name );\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\t// reserve node's name before its dependencies, so the root has the intended name.\n\t\tvar nodeName = nodeDef.name ? parser.createUniqueName( nodeDef.name ) : '';\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node = parser._getNodeRef( parser.meshCache, nodeDef.mesh, mesh );\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ).then( function ( camera ) {\n\n\t\t\t\t\treturn parser._getNodeRef( parser.cameraCache, nodeDef.camera, camera );\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tparser._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.createNodeAttachment && ext.createNodeAttachment( nodeIndex );\n\n\t\t\t} ).forEach( function ( promise ) {\n\n\t\t\t\tpending.push( promise );\n\n\t\t\t} );\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See ._markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new THREE.Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new THREE.Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new THREE.Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = nodeName;\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.associations.set( node, { type: 'nodes', index: nodeIndex } );\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new THREE.Group();\n\t\t\tif ( sceneDef.name ) scene.name = parser.createUniqueName( sceneDef.name );\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n"]}