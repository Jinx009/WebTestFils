{"version":3,"sources":["PLYLoader.js"],"names":[],"mappings":"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","file":"PLYLoader-compiled.js","sourcesContent":["console.warn( \"THREE.PLYLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n/**\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *\tvar loader = new THREE.PLYLoader();\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *\t\tscene.add( new THREE.Mesh( geometry ) );\n *\n *\t} );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *\tdiffuse_red: 'red',\n *\tdiffuse_green: 'green',\n *\tdiffuse_blue: 'blue'\n * } );\n *\n */\n\n\nTHREE.PLYLoader = function ( manager ) {\n\n\tTHREE.Loader.call( this, manager );\n\n\tthis.propertyNameMapping = {};\n\n};\n\nTHREE.PLYLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\tconstructor: THREE.PLYLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPropertyNameMapping: function ( mapping ) {\n\n\t\tthis.propertyNameMapping = mapping;\n\n\t},\n\n\tparse: function ( data ) {\n\n\t\tfunction parseHeader( data ) {\n\n\t\t\tvar patternHeader = /ply([\\s\\S]*)end_header\\r?\\n/;\n\t\t\tvar headerText = '';\n\t\t\tvar headerLength = 0;\n\t\t\tvar result = patternHeader.exec( data );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\theaderText = result[ 1 ];\n\t\t\t\theaderLength = result[ 0 ].length;\n\n\t\t\t}\n\n\t\t\tvar header = {\n\t\t\t\tcomments: [],\n\t\t\t\telements: [],\n\t\t\t\theaderLength: headerLength\n\t\t\t};\n\n\t\t\tvar lines = headerText.split( '\\n' );\n\t\t\tvar currentElement;\n\t\t\tvar lineType, lineValues;\n\n\t\t\tfunction make_ply_element_property( propertValues, propertyNameMapping ) {\n\n\t\t\t\tvar property = { type: propertValues[ 0 ] };\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tproperty.name = propertValues[ 3 ];\n\t\t\t\t\tproperty.countType = propertValues[ 1 ];\n\t\t\t\t\tproperty.itemType = propertValues[ 2 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tproperty.name = propertValues[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( property.name in propertyNameMapping ) {\n\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\n\n\t\t\t\t}\n\n\t\t\t\treturn property;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tvar line = lines[ i ];\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif ( line === '' ) continue;\n\n\t\t\t\tlineValues = line.split( /\\s+/ );\n\t\t\t\tlineType = lineValues.shift();\n\t\t\t\tline = lineValues.join( ' ' );\n\n\t\t\t\tswitch ( lineType ) {\n\n\t\t\t\t\tcase 'format':\n\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'comment':\n\n\t\t\t\t\t\theader.comments.push( line );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'element':\n\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentElement = {};\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\n\t\t\t\t\t\tcurrentElement.properties = [];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'property':\n\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t}\n\n\t\t\treturn header;\n\n\t\t}\n\n\t\tfunction parseASCIINumber( n, type ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n\t\t\t\t\treturn parseInt( n );\n\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\n\n\t\t\t\t\treturn parseFloat( n );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseASCIIElement( properties, line ) {\n\n\t\t\tvar values = line.split( /\\s+/ );\n\n\t\t\tvar element = {};\n\n\t\t\tfor ( var i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tvar list = [];\n\t\t\t\t\tvar n = parseASCIINumber( values.shift(), properties[ i ].countType );\n\n\t\t\t\t\tfor ( var j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tlist.push( parseASCIINumber( values.shift(), properties[ i ].itemType ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( values.shift(), properties[ i ].type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn element;\n\n\t\t}\n\n\t\tfunction parseASCII( data, header ) {\n\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n\t\t\tvar buffer = {\n\t\t\t\tindices: [],\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tuvs: [],\n\t\t\t\tfaceVertexUvs: [],\n\t\t\t\tcolors: []\n\t\t\t};\n\n\t\t\tvar result;\n\n\t\t\tvar patternBody = /end_header\\s([\\s\\S]*)$/;\n\t\t\tvar body = '';\n\t\t\tif ( ( result = patternBody.exec( data ) ) !== null ) {\n\n\t\t\t\tbody = result[ 1 ];\n\n\t\t\t}\n\n\t\t\tvar lines = body.split( '\\n' );\n\t\t\tvar currentElement = 0;\n\t\t\tvar currentElementCount = 0;\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tvar line = lines[ i ];\n\t\t\t\tline = line.trim();\n\t\t\t\tif ( line === '' ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentElementCount >= header.elements[ currentElement ].count ) {\n\n\t\t\t\t\tcurrentElement ++;\n\t\t\t\t\tcurrentElementCount = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar element = parseASCIIElement( header.elements[ currentElement ].properties, line );\n\n\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\n\n\t\t\t\tcurrentElementCount ++;\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\tfunction postProcess( buffer ) {\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t// mandatory buffer data\n\n\t\t\tif ( buffer.indices.length > 0 ) {\n\n\t\t\t\tgeometry.setIndex( buffer.indices );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( buffer.vertices, 3 ) );\n\n\t\t\t// optional buffer data\n\n\t\t\tif ( buffer.normals.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( buffer.normals, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.uvs.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( buffer.uvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.colors.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( buffer.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.faceVertexUvs.length > 0 ) {\n\n\t\t\t\tgeometry = geometry.toNonIndexed();\n\t\t\t\tgeometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction handleElement( buffer, elementName, element ) {\n\n\t\t\tif ( elementName === 'vertex' ) {\n\n\t\t\t\tbuffer.vertices.push( element.x, element.y, element.z );\n\n\t\t\t\tif ( 'nx' in element && 'ny' in element && 'nz' in element ) {\n\n\t\t\t\t\tbuffer.normals.push( element.nx, element.ny, element.nz );\n\n\t\t\t\t}\n\n\t\t\t\tif ( 's' in element && 't' in element ) {\n\n\t\t\t\t\tbuffer.uvs.push( element.s, element.t );\n\n\t\t\t\t}\n\n\t\t\t\tif ( 'red' in element && 'green' in element && 'blue' in element ) {\n\n\t\t\t\t\tbuffer.colors.push( element.red / 255.0, element.green / 255.0, element.blue / 255.0 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( elementName === 'face' ) {\n\n\t\t\t\tvar vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\t\t\t\tvar texcoord = element.texcoord;\n\n\t\t\t\tif ( vertex_indices.length === 3 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\n\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\n\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryRead( dataview, at, type, little_endian ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\t// corespondences for non-specific length types here match rply:\n\t\t\t\tcase 'int8':\t\tcase 'char':\t return [ dataview.getInt8( at ), 1 ];\n\t\t\t\tcase 'uint8':\t\tcase 'uchar':\t return [ dataview.getUint8( at ), 1 ];\n\t\t\t\tcase 'int16':\t\tcase 'short':\t return [ dataview.getInt16( at, little_endian ), 2 ];\n\t\t\t\tcase 'uint16':\tcase 'ushort': return [ dataview.getUint16( at, little_endian ), 2 ];\n\t\t\t\tcase 'int32':\t\tcase 'int':\t\t return [ dataview.getInt32( at, little_endian ), 4 ];\n\t\t\t\tcase 'uint32':\tcase 'uint':\t return [ dataview.getUint32( at, little_endian ), 4 ];\n\t\t\t\tcase 'float32': case 'float':\t return [ dataview.getFloat32( at, little_endian ), 4 ];\n\t\t\t\tcase 'float64': case 'double': return [ dataview.getFloat64( at, little_endian ), 8 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryReadElement( dataview, at, properties, little_endian ) {\n\n\t\t\tvar element = {};\n\t\t\tvar result, read = 0;\n\n\t\t\tfor ( var i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tvar list = [];\n\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].countType, little_endian );\n\t\t\t\t\tvar n = result[ 0 ];\n\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t\tfor ( var j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].itemType, little_endian );\n\t\t\t\t\t\tlist.push( result[ 0 ] );\n\t\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].type, little_endian );\n\t\t\t\t\telement[ properties[ i ].name ] = result[ 0 ];\n\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn [ element, read ];\n\n\t\t}\n\n\t\tfunction parseBinary( data, header ) {\n\n\t\t\tvar buffer = {\n\t\t\t\tindices: [],\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tuvs: [],\n\t\t\t\tfaceVertexUvs: [],\n\t\t\t\tcolors: []\n\t\t\t};\n\n\t\t\tvar little_endian = ( header.format === 'binary_little_endian' );\n\t\t\tvar body = new DataView( data, header.headerLength );\n\t\t\tvar result, loc = 0;\n\n\t\t\tfor ( var currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\n\n\t\t\t\tfor ( var currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount ++ ) {\n\n\t\t\t\t\tresult = binaryReadElement( body, loc, header.elements[ currentElement ].properties, little_endian );\n\t\t\t\t\tloc += result[ 1 ];\n\t\t\t\t\tvar element = result[ 0 ];\n\n\t\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry;\n\t\tvar scope = this;\n\n\t\tif ( data instanceof ArrayBuffer ) {\n\n\t\t\tvar text = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\t\t\tvar header = parseHeader( text );\n\n\t\t\tgeometry = header.format === 'ascii' ? parseASCII( text, header ) : parseBinary( data, header );\n\n\t\t} else {\n\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n"]}