{"version":3,"sources":["RollerCoaster.js"],"names":[],"mappings":"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","file":"RollerCoaster-compiled.js","sourcesContent":["console.warn( \"THREE.RollerCoaster: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.RollerCoasterGeometry = function ( curve, divisions ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar colors = [];\n\n\tvar color1 = [ 1, 1, 1 ];\n\tvar color2 = [ 1, 1, 0 ];\n\n\tvar up = new THREE.Vector3( 0, 1, 0 );\n\tvar forward = new THREE.Vector3();\n\tvar right = new THREE.Vector3();\n\n\tvar quaternion = new THREE.Quaternion();\n\tvar prevQuaternion = new THREE.Quaternion();\n\tprevQuaternion.setFromAxisAngle( up, Math.PI / 2 );\n\n\tvar point = new THREE.Vector3();\n\tvar prevPoint = new THREE.Vector3();\n\tprevPoint.copy( curve.getPointAt( 0 ) );\n\n\t// shapes\n\n\tvar step = [\n\t\tnew THREE.Vector3( - 0.225, 0, 0 ),\n\t\tnew THREE.Vector3( 0, - 0.050, 0 ),\n\t\tnew THREE.Vector3( 0, - 0.175, 0 ),\n\n\t\tnew THREE.Vector3( 0, - 0.050, 0 ),\n\t\tnew THREE.Vector3( 0.225, 0, 0 ),\n\t\tnew THREE.Vector3( 0, - 0.175, 0 )\n\t];\n\n\tvar PI2 = Math.PI * 2;\n\n\tvar sides = 5;\n\tvar tube1 = [];\n\n\tfor ( var i = 0; i < sides; i ++ ) {\n\n\t\tvar angle = ( i / sides ) * PI2;\n\t\ttube1.push( new THREE.Vector3( Math.sin( angle ) * 0.06, Math.cos( angle ) * 0.06, 0 ) );\n\n\t}\n\n\tvar sides = 6;\n\tvar tube2 = [];\n\n\tfor ( var i = 0; i < sides; i ++ ) {\n\n\t\tvar angle = ( i / sides ) * PI2;\n\t\ttube2.push( new THREE.Vector3( Math.sin( angle ) * 0.025, Math.cos( angle ) * 0.025, 0 ) );\n\n\t}\n\n\tvar vector = new THREE.Vector3();\n\tvar normal = new THREE.Vector3();\n\n\tfunction drawShape( shape, color ) {\n\n\t\tnormal.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\tfor ( var j = 0; j < shape.length; j ++ ) {\n\n\t\t\tvector.copy( shape[ j ] );\n\t\t\tvector.applyQuaternion( quaternion );\n\t\t\tvector.add( point );\n\n\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\t\tcolors.push( color[ 0 ], color[ 1 ], color[ 2 ] );\n\n\t\t}\n\n\t\tnormal.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\tfor ( var j = shape.length - 1; j >= 0; j -- ) {\n\n\t\t\tvector.copy( shape[ j ] );\n\t\t\tvector.applyQuaternion( quaternion );\n\t\t\tvector.add( point );\n\n\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\t\tcolors.push( color[ 0 ], color[ 1 ], color[ 2 ] );\n\n\t\t}\n\n\t}\n\n\tvar vector1 = new THREE.Vector3();\n\tvar vector2 = new THREE.Vector3();\n\tvar vector3 = new THREE.Vector3();\n\tvar vector4 = new THREE.Vector3();\n\n\tvar normal1 = new THREE.Vector3();\n\tvar normal2 = new THREE.Vector3();\n\tvar normal3 = new THREE.Vector3();\n\tvar normal4 = new THREE.Vector3();\n\n\tfunction extrudeShape( shape, offset, color ) {\n\n\t\tfor ( var j = 0, jl = shape.length; j < jl; j ++ ) {\n\n\t\t\tvar point1 = shape[ j ];\n\t\t\tvar point2 = shape[ ( j + 1 ) % jl ];\n\n\t\t\tvector1.copy( point1 ).add( offset );\n\t\t\tvector1.applyQuaternion( quaternion );\n\t\t\tvector1.add( point );\n\n\t\t\tvector2.copy( point2 ).add( offset );\n\t\t\tvector2.applyQuaternion( quaternion );\n\t\t\tvector2.add( point );\n\n\t\t\tvector3.copy( point2 ).add( offset );\n\t\t\tvector3.applyQuaternion( prevQuaternion );\n\t\t\tvector3.add( prevPoint );\n\n\t\t\tvector4.copy( point1 ).add( offset );\n\t\t\tvector4.applyQuaternion( prevQuaternion );\n\t\t\tvector4.add( prevPoint );\n\n\t\t\tvertices.push( vector1.x, vector1.y, vector1.z );\n\t\t\tvertices.push( vector2.x, vector2.y, vector2.z );\n\t\t\tvertices.push( vector4.x, vector4.y, vector4.z );\n\n\t\t\tvertices.push( vector2.x, vector2.y, vector2.z );\n\t\t\tvertices.push( vector3.x, vector3.y, vector3.z );\n\t\t\tvertices.push( vector4.x, vector4.y, vector4.z );\n\n\t\t\t//\n\n\t\t\tnormal1.copy( point1 );\n\t\t\tnormal1.applyQuaternion( quaternion );\n\t\t\tnormal1.normalize();\n\n\t\t\tnormal2.copy( point2 );\n\t\t\tnormal2.applyQuaternion( quaternion );\n\t\t\tnormal2.normalize();\n\n\t\t\tnormal3.copy( point2 );\n\t\t\tnormal3.applyQuaternion( prevQuaternion );\n\t\t\tnormal3.normalize();\n\n\t\t\tnormal4.copy( point1 );\n\t\t\tnormal4.applyQuaternion( prevQuaternion );\n\t\t\tnormal4.normalize();\n\n\t\t\tnormals.push( normal1.x, normal1.y, normal1.z );\n\t\t\tnormals.push( normal2.x, normal2.y, normal2.z );\n\t\t\tnormals.push( normal4.x, normal4.y, normal4.z );\n\n\t\t\tnormals.push( normal2.x, normal2.y, normal2.z );\n\t\t\tnormals.push( normal3.x, normal3.y, normal3.z );\n\t\t\tnormals.push( normal4.x, normal4.y, normal4.z );\n\n\t\t\tcolors.push( color[ 0 ], color[ 1 ], color[ 2 ] );\n\t\t\tcolors.push( color[ 0 ], color[ 1 ], color[ 2 ] );\n\t\t\tcolors.push( color[ 0 ], color[ 1 ], color[ 2 ] );\n\n\t\t\tcolors.push( color[ 0 ], color[ 1 ], color[ 2 ] );\n\t\t\tcolors.push( color[ 0 ], color[ 1 ], color[ 2 ] );\n\t\t\tcolors.push( color[ 0 ], color[ 1 ], color[ 2 ] );\n\n\t\t}\n\n\t}\n\n\tvar offset = new THREE.Vector3();\n\n\tfor ( var i = 1; i <= divisions; i ++ ) {\n\n\t\tpoint.copy( curve.getPointAt( i / divisions ) );\n\n\t\tup.set( 0, 1, 0 );\n\n\t\tforward.subVectors( point, prevPoint ).normalize();\n\t\tright.crossVectors( up, forward ).normalize();\n\t\tup.crossVectors( forward, right );\n\n\t\tvar angle = Math.atan2( forward.x, forward.z );\n\n\t\tquaternion.setFromAxisAngle( up, angle );\n\n\t\tif ( i % 2 === 0 ) {\n\n\t\t\tdrawShape( step, color2 );\n\n\t\t}\n\n\t\textrudeShape( tube1, offset.set( 0, - 0.125, 0 ), color2 );\n\t\textrudeShape( tube2, offset.set( 0.2, 0, 0 ), color1 );\n\t\textrudeShape( tube2, offset.set( - 0.2, 0, 0 ), color1 );\n\n\t\tprevPoint.copy( point );\n\t\tprevQuaternion.copy( quaternion );\n\n\t}\n\n\t// console.log( vertices.length );\n\n\tthis.setAttribute( 'position', new THREE.BufferAttribute( new Float32Array( vertices ), 3 ) );\n\tthis.setAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( normals ), 3 ) );\n\tthis.setAttribute( 'color', new THREE.BufferAttribute( new Float32Array( colors ), 3 ) );\n\n};\n\nTHREE.RollerCoasterGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\nTHREE.RollerCoasterLiftersGeometry = function ( curve, divisions ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tvar vertices = [];\n\tvar normals = [];\n\n\tvar quaternion = new THREE.Quaternion();\n\n\tvar up = new THREE.Vector3( 0, 1, 0 );\n\n\tvar point = new THREE.Vector3();\n\tvar tangent = new THREE.Vector3();\n\n\t// shapes\n\n\tvar tube1 = [\n\t\tnew THREE.Vector3( 0, 0.05, - 0.05 ),\n\t\tnew THREE.Vector3( 0, 0.05, 0.05 ),\n\t\tnew THREE.Vector3( 0, - 0.05, 0 )\n\t];\n\n\tvar tube2 = [\n\t\tnew THREE.Vector3( - 0.05, 0, 0.05 ),\n\t\tnew THREE.Vector3( - 0.05, 0, - 0.05 ),\n\t\tnew THREE.Vector3( 0.05, 0, 0 )\n\t];\n\n\tvar tube3 = [\n\t\tnew THREE.Vector3( 0.05, 0, - 0.05 ),\n\t\tnew THREE.Vector3( 0.05, 0, 0.05 ),\n\t\tnew THREE.Vector3( - 0.05, 0, 0 )\n\t];\n\n\tvar vector1 = new THREE.Vector3();\n\tvar vector2 = new THREE.Vector3();\n\tvar vector3 = new THREE.Vector3();\n\tvar vector4 = new THREE.Vector3();\n\n\tvar normal1 = new THREE.Vector3();\n\tvar normal2 = new THREE.Vector3();\n\tvar normal3 = new THREE.Vector3();\n\tvar normal4 = new THREE.Vector3();\n\n\tfunction extrudeShape( shape, fromPoint, toPoint ) {\n\n\t\tfor ( var j = 0, jl = shape.length; j < jl; j ++ ) {\n\n\t\t\tvar point1 = shape[ j ];\n\t\t\tvar point2 = shape[ ( j + 1 ) % jl ];\n\n\t\t\tvector1.copy( point1 );\n\t\t\tvector1.applyQuaternion( quaternion );\n\t\t\tvector1.add( fromPoint );\n\n\t\t\tvector2.copy( point2 );\n\t\t\tvector2.applyQuaternion( quaternion );\n\t\t\tvector2.add( fromPoint );\n\n\t\t\tvector3.copy( point2 );\n\t\t\tvector3.applyQuaternion( quaternion );\n\t\t\tvector3.add( toPoint );\n\n\t\t\tvector4.copy( point1 );\n\t\t\tvector4.applyQuaternion( quaternion );\n\t\t\tvector4.add( toPoint );\n\n\t\t\tvertices.push( vector1.x, vector1.y, vector1.z );\n\t\t\tvertices.push( vector2.x, vector2.y, vector2.z );\n\t\t\tvertices.push( vector4.x, vector4.y, vector4.z );\n\n\t\t\tvertices.push( vector2.x, vector2.y, vector2.z );\n\t\t\tvertices.push( vector3.x, vector3.y, vector3.z );\n\t\t\tvertices.push( vector4.x, vector4.y, vector4.z );\n\n\t\t\t//\n\n\t\t\tnormal1.copy( point1 );\n\t\t\tnormal1.applyQuaternion( quaternion );\n\t\t\tnormal1.normalize();\n\n\t\t\tnormal2.copy( point2 );\n\t\t\tnormal2.applyQuaternion( quaternion );\n\t\t\tnormal2.normalize();\n\n\t\t\tnormal3.copy( point2 );\n\t\t\tnormal3.applyQuaternion( quaternion );\n\t\t\tnormal3.normalize();\n\n\t\t\tnormal4.copy( point1 );\n\t\t\tnormal4.applyQuaternion( quaternion );\n\t\t\tnormal4.normalize();\n\n\t\t\tnormals.push( normal1.x, normal1.y, normal1.z );\n\t\t\tnormals.push( normal2.x, normal2.y, normal2.z );\n\t\t\tnormals.push( normal4.x, normal4.y, normal4.z );\n\n\t\t\tnormals.push( normal2.x, normal2.y, normal2.z );\n\t\t\tnormals.push( normal3.x, normal3.y, normal3.z );\n\t\t\tnormals.push( normal4.x, normal4.y, normal4.z );\n\n\t\t}\n\n\t}\n\n\tvar fromPoint = new THREE.Vector3();\n\tvar toPoint = new THREE.Vector3();\n\n\tfor ( var i = 1; i <= divisions; i ++ ) {\n\n\t\tpoint.copy( curve.getPointAt( i / divisions ) );\n\t\ttangent.copy( curve.getTangentAt( i / divisions ) );\n\n\t\tvar angle = Math.atan2( tangent.x, tangent.z );\n\n\t\tquaternion.setFromAxisAngle( up, angle );\n\n\t\t//\n\n\t\tif ( point.y > 10 ) {\n\n\t\t\tfromPoint.set( - 0.75, - 0.35, 0 );\n\t\t\tfromPoint.applyQuaternion( quaternion );\n\t\t\tfromPoint.add( point );\n\n\t\t\ttoPoint.set( 0.75, - 0.35, 0 );\n\t\t\ttoPoint.applyQuaternion( quaternion );\n\t\t\ttoPoint.add( point );\n\n\t\t\textrudeShape( tube1, fromPoint, toPoint );\n\n\t\t\tfromPoint.set( - 0.7, - 0.3, 0 );\n\t\t\tfromPoint.applyQuaternion( quaternion );\n\t\t\tfromPoint.add( point );\n\n\t\t\ttoPoint.set( - 0.7, - point.y, 0 );\n\t\t\ttoPoint.applyQuaternion( quaternion );\n\t\t\ttoPoint.add( point );\n\n\t\t\textrudeShape( tube2, fromPoint, toPoint );\n\n\t\t\tfromPoint.set( 0.7, - 0.3, 0 );\n\t\t\tfromPoint.applyQuaternion( quaternion );\n\t\t\tfromPoint.add( point );\n\n\t\t\ttoPoint.set( 0.7, - point.y, 0 );\n\t\t\ttoPoint.applyQuaternion( quaternion );\n\t\t\ttoPoint.add( point );\n\n\t\t\textrudeShape( tube3, fromPoint, toPoint );\n\n\t\t} else {\n\n\t\t\tfromPoint.set( 0, - 0.2, 0 );\n\t\t\tfromPoint.applyQuaternion( quaternion );\n\t\t\tfromPoint.add( point );\n\n\t\t\ttoPoint.set( 0, - point.y, 0 );\n\t\t\ttoPoint.applyQuaternion( quaternion );\n\t\t\ttoPoint.add( point );\n\n\t\t\textrudeShape( tube3, fromPoint, toPoint );\n\n\t\t}\n\n\t}\n\n\tthis.setAttribute( 'position', new THREE.BufferAttribute( new Float32Array( vertices ), 3 ) );\n\tthis.setAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( normals ), 3 ) );\n\n};\n\nTHREE.RollerCoasterLiftersGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\nTHREE.RollerCoasterShadowGeometry = function ( curve, divisions ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tvar vertices = [];\n\n\tvar up = new THREE.Vector3( 0, 1, 0 );\n\tvar forward = new THREE.Vector3();\n\n\tvar quaternion = new THREE.Quaternion();\n\tvar prevQuaternion = new THREE.Quaternion();\n\tprevQuaternion.setFromAxisAngle( up, Math.PI / 2 );\n\n\tvar point = new THREE.Vector3();\n\n\tvar prevPoint = new THREE.Vector3();\n\tprevPoint.copy( curve.getPointAt( 0 ) );\n\tprevPoint.y = 0;\n\n\tvar vector1 = new THREE.Vector3();\n\tvar vector2 = new THREE.Vector3();\n\tvar vector3 = new THREE.Vector3();\n\tvar vector4 = new THREE.Vector3();\n\n\tfor ( var i = 1; i <= divisions; i ++ ) {\n\n\t\tpoint.copy( curve.getPointAt( i / divisions ) );\n\t\tpoint.y = 0;\n\n\t\tforward.subVectors( point, prevPoint );\n\n\t\tvar angle = Math.atan2( forward.x, forward.z );\n\n\t\tquaternion.setFromAxisAngle( up, angle );\n\n\t\tvector1.set( - 0.3, 0, 0 );\n\t\tvector1.applyQuaternion( quaternion );\n\t\tvector1.add( point );\n\n\t\tvector2.set( 0.3, 0, 0 );\n\t\tvector2.applyQuaternion( quaternion );\n\t\tvector2.add( point );\n\n\t\tvector3.set( 0.3, 0, 0 );\n\t\tvector3.applyQuaternion( prevQuaternion );\n\t\tvector3.add( prevPoint );\n\n\t\tvector4.set( - 0.3, 0, 0 );\n\t\tvector4.applyQuaternion( prevQuaternion );\n\t\tvector4.add( prevPoint );\n\n\t\tvertices.push( vector1.x, vector1.y, vector1.z );\n\t\tvertices.push( vector2.x, vector2.y, vector2.z );\n\t\tvertices.push( vector4.x, vector4.y, vector4.z );\n\n\t\tvertices.push( vector2.x, vector2.y, vector2.z );\n\t\tvertices.push( vector3.x, vector3.y, vector3.z );\n\t\tvertices.push( vector4.x, vector4.y, vector4.z );\n\n\t\tprevPoint.copy( point );\n\t\tprevQuaternion.copy( quaternion );\n\n\t}\n\n\tthis.setAttribute( 'position', new THREE.BufferAttribute( new Float32Array( vertices ), 3 ) );\n\n};\n\nTHREE.RollerCoasterShadowGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\nTHREE.SkyGeometry = function () {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tvar vertices = [];\n\n\tfor ( var i = 0; i < 100; i ++ ) {\n\n\t\tvar x = Math.random() * 800 - 400;\n\t\tvar y = Math.random() * 50 + 50;\n\t\tvar z = Math.random() * 800 - 400;\n\n\t\tvar size = Math.random() * 40 + 20;\n\n\t\tvertices.push( x - size, y, z - size );\n\t\tvertices.push( x + size, y, z - size );\n\t\tvertices.push( x - size, y, z + size );\n\n\t\tvertices.push( x + size, y, z - size );\n\t\tvertices.push( x + size, y, z + size );\n\t\tvertices.push( x - size, y, z + size );\n\n\t}\n\n\n\tthis.setAttribute( 'position', new THREE.BufferAttribute( new Float32Array( vertices ), 3 ) );\n\n};\n\nTHREE.SkyGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\nTHREE.TreesGeometry = function ( landscape ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar raycaster = new THREE.Raycaster();\n\traycaster.ray.direction.set( 0, - 1, 0 );\n\n\tfor ( var i = 0; i < 2000; i ++ ) {\n\n\t\tvar x = Math.random() * 500 - 250;\n\t\tvar z = Math.random() * 500 - 250;\n\n\t\traycaster.ray.origin.set( x, 50, z );\n\n\t\tvar intersections = raycaster.intersectObject( landscape );\n\n\t\tif ( intersections.length === 0 ) continue;\n\n\t\tvar y = intersections[ 0 ].point.y;\n\n\t\tvar height = Math.random() * 5 + 0.5;\n\n\t\tvar angle = Math.random() * Math.PI * 2;\n\n\t\tvertices.push( x + Math.sin( angle ), y, z + Math.cos( angle ) );\n\t\tvertices.push( x, y + height, z );\n\t\tvertices.push( x + Math.sin( angle + Math.PI ), y, z + Math.cos( angle + Math.PI ) );\n\n\t\tangle += Math.PI / 2;\n\n\t\tvertices.push( x + Math.sin( angle ), y, z + Math.cos( angle ) );\n\t\tvertices.push( x, y + height, z );\n\t\tvertices.push( x + Math.sin( angle + Math.PI ), y, z + Math.cos( angle + Math.PI ) );\n\n\t\tvar random = Math.random() * 0.1;\n\n\t\tfor ( var j = 0; j < 6; j ++ ) {\n\n\t\t\tcolors.push( 0.2 + random, 0.4 + random, 0 );\n\n\t\t}\n\n\t}\n\n\tthis.setAttribute( 'position', new THREE.BufferAttribute( new Float32Array( vertices ), 3 ) );\n\tthis.setAttribute( 'color', new THREE.BufferAttribute( new Float32Array( colors ), 3 ) );\n\n};\n\nTHREE.TreesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n"]}