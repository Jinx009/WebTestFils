{"version":3,"sources":["MorphBlendMesh.js"],"names":[],"mappings":"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","file":"MorphBlendMesh-compiled.js","sourcesContent":["console.warn( \"THREE.MorphBlendMesh: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.MorphBlendMesh = function ( geometry, material ) {\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.animationsMap = {};\n\tthis.animationsList = [];\n\n\t// prepare default animation\n\t// (all frames played together in 1 second)\n\n\tvar numFrames = Object.keys( this.morphTargetDictionary ).length;\n\n\tvar name = '__default';\n\n\tvar startFrame = 0;\n\tvar endFrame = numFrames - 1;\n\n\tvar fps = numFrames / 1;\n\n\tthis.createAnimation( name, startFrame, endFrame, fps );\n\tthis.setAnimationWeight( name, 1 );\n\n};\n\nTHREE.MorphBlendMesh.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\tconstructor: THREE.MorphBlendMesh,\n\n\tcreateAnimation: function ( name, start, end, fps ) {\n\n\t\tvar animation = {\n\n\t\t\tstart: start,\n\t\t\tend: end,\n\n\t\t\tlength: end - start + 1,\n\n\t\t\tfps: fps,\n\t\t\tduration: ( end - start ) / fps,\n\n\t\t\tlastFrame: 0,\n\t\t\tcurrentFrame: 0,\n\n\t\t\tactive: false,\n\n\t\t\ttime: 0,\n\t\t\tdirection: 1,\n\t\t\tweight: 1,\n\n\t\t\tdirectionBackwards: false,\n\t\t\tmirroredLoop: false\n\n\t\t};\n\n\t\tthis.animationsMap[ name ] = animation;\n\t\tthis.animationsList.push( animation );\n\n\t},\n\n\tautoCreateAnimations: function ( fps ) {\n\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\n\n\t\tvar firstAnimation, frameRanges = {};\n\n\t\tvar i = 0;\n\n\t\tfor ( var key in this.morphTargetDictionary ) {\n\n\t\t\tvar chunks = key.match( pattern );\n\n\t\t\tif ( chunks && chunks.length > 1 ) {\n\n\t\t\t\tvar name = chunks[ 1 ];\n\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\n\n\t\t\t\tvar range = frameRanges[ name ];\n\n\t\t\t\tif ( i < range.start ) range.start = i;\n\t\t\t\tif ( i > range.end ) range.end = i;\n\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\tfor ( var name in frameRanges ) {\n\n\t\t\tvar range = frameRanges[ name ];\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\n\n\t\t}\n\n\t\tthis.firstAnimation = firstAnimation;\n\n\t},\n\n\tsetAnimationDirectionForward: function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = 1;\n\t\t\tanimation.directionBackwards = false;\n\n\t\t}\n\n\t},\n\n\tsetAnimationDirectionBackward: function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = - 1;\n\t\t\tanimation.directionBackwards = true;\n\n\t\t}\n\n\t},\n\n\tsetAnimationFPS: function ( name, fps ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.fps = fps;\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\n\n\t\t}\n\n\t},\n\n\tsetAnimationDuration: function ( name, duration ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.duration = duration;\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\n\n\t\t}\n\n\t},\n\n\tsetAnimationWeight: function ( name, weight ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.weight = weight;\n\n\t\t}\n\n\t},\n\n\tsetAnimationTime: function ( name, time ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = time;\n\n\t\t}\n\n\t},\n\n\tgetAnimationTime: function ( name ) {\n\n\t\tvar time = 0;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\ttime = animation.time;\n\n\t\t}\n\n\t\treturn time;\n\n\t},\n\n\tgetAnimationDuration: function ( name ) {\n\n\t\tvar duration = - 1;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tduration = animation.duration;\n\n\t\t}\n\n\t\treturn duration;\n\n\t},\n\n\tplayAnimation: function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = 0;\n\t\t\tanimation.active = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\n\n\t\t}\n\n\t},\n\n\tstopAnimation: function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.active = false;\n\n\t\t}\n\n\t},\n\n\tupdate: function ( delta ) {\n\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\n\n\t\t\tvar animation = this.animationsList[ i ];\n\n\t\t\tif ( ! animation.active ) continue;\n\n\t\t\tvar frameTime = animation.duration / animation.length;\n\n\t\t\tanimation.time += animation.direction * delta;\n\n\t\t\tif ( animation.mirroredLoop ) {\n\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\n\n\t\t\t\t\tanimation.direction *= - 1;\n\n\t\t\t\t\tif ( animation.time > animation.duration ) {\n\n\t\t\t\t\t\tanimation.time = animation.duration;\n\t\t\t\t\t\tanimation.directionBackwards = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( animation.time < 0 ) {\n\n\t\t\t\t\t\tanimation.time = 0;\n\t\t\t\t\t\tanimation.directionBackwards = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tanimation.time = animation.time % animation.duration;\n\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\n\n\t\t\t}\n\n\t\t\tvar keyframe = animation.start + THREE.MathUtils.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\n\t\t\tvar weight = animation.weight;\n\n\t\t\tif ( keyframe !== animation.currentFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\n\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\n\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\n\t\t\t\tanimation.currentFrame = keyframe;\n\n\t\t\t}\n\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\n\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\n\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\n\n\t\t\t} else {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n"]}