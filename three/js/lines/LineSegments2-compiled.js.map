{"version":3,"sources":["LineSegments2.js"],"names":[],"mappings":"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","file":"LineSegments2-compiled.js","sourcesContent":["console.warn( \"THREE.LineSegments2: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.LineSegments2 = function ( geometry, material ) {\n\n\tif ( geometry === undefined ) geometry = new THREE.LineSegmentsGeometry();\n\tif ( material === undefined ) material = new THREE.LineMaterial( { color: Math.random() * 0xffffff } );\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.type = 'LineSegments2';\n\n};\n\nTHREE.LineSegments2.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\tconstructor: THREE.LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new THREE.Vector3();\n\t\tvar end = new THREE.Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new THREE.InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar start = new THREE.Vector4();\n\t\tvar end = new THREE.Vector4();\n\n\t\tvar ssOrigin = new THREE.Vector4();\n\t\tvar ssOrigin3 = new THREE.Vector3();\n\t\tvar mvMatrix = new THREE.Matrix4();\n\t\tvar line = new THREE.Line3();\n\t\tvar closestPoint = new THREE.Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t\t}\n\n\t\t\tvar threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\n\n\t\t\tvar ray = raycaster.ray;\n\t\t\tvar camera = raycaster.camera;\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar resolution = material.resolution;\n\t\t\tvar lineWidth = material.linewidth + threshold;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t\t// applying the projection matrix.\n\t\t\tray.at( 1, ssOrigin );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\tssOrigin.w = 1;\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\n\n\t\t\t// screen space\n\t\t\tssOrigin.x *= resolution.x / 2;\n\t\t\tssOrigin.y *= resolution.y / 2;\n\t\t\tssOrigin.z = 0;\n\n\t\t\tssOrigin3.copy( ssOrigin );\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tstart.w = 1;\n\t\t\t\tend.w = 1;\n\n\t\t\t\t// camera space\n\t\t\t\tstart.applyMatrix4( mvMatrix );\n\t\t\t\tend.applyMatrix4( mvMatrix );\n\n\t\t\t\t// clip space\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\n\t\t\t\tend.applyMatrix4( projectionMatrix );\n\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\n\t\t\t\tend.multiplyScalar( 1 / end.w );\n\n\t\t\t\t// skip the segment if it's outside the camera near and far planes\n\t\t\t\tvar isBehindCameraNear = start.z < - 1 && end.z < - 1;\n\t\t\t\tvar isPastCameraFar = start.z > 1 && end.z > 1;\n\t\t\t\tif ( isBehindCameraNear || isPastCameraFar ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// screen space\n\t\t\t\tstart.x *= resolution.x / 2;\n\t\t\t\tstart.y *= resolution.y / 2;\n\n\t\t\t\tend.x *= resolution.x / 2;\n\t\t\t\tend.y *= resolution.y / 2;\n\n\t\t\t\t// create 2d segment\n\t\t\t\tline.start.copy( start );\n\t\t\t\tline.start.z = 0;\n\n\t\t\t\tline.end.copy( end );\n\t\t\t\tline.end.z = 0;\n\n\t\t\t\t// get closest point on ray to segment\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\n\t\t\t\tline.at( param, closestPoint );\n\n\t\t\t\t// check if the intersection point is within clip space\n\t\t\t\tvar zPos = THREE.MathUtils.lerp( start.z, end.z, param );\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\n\n\t\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar pointOnLine = new THREE.Vector3();\n\t\t\t\t\tvar point = new THREE.Vector3();\n\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tpoint: point,\n\t\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\t\tobject: this,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\t\tuv: null,\n\t\t\t\t\t\tuv2: null,\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n} );\n"]}