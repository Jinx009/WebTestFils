{"version":3,"sources":["LineSegmentsGeometry.js"],"names":[],"mappings":"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","file":"LineSegmentsGeometry-compiled.js","sourcesContent":["console.warn( \"THREE.LineSegmentsGeometry: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation.\" );\n\nTHREE.LineSegmentsGeometry = function () {\n\n\tTHREE.InstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nTHREE.LineSegmentsGeometry.prototype = Object.assign( Object.create( THREE.InstancedBufferGeometry.prototype ), {\n\n\tconstructor: THREE.LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new THREE.InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new THREE.InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new THREE.WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegments: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new THREE.Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n"]}